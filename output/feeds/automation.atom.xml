<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Place on the Internet - Automation</title><link href="https://www.ryancheley.com/" rel="alternate"></link><link href="https://www.ryancheley.com/feeds/automation.atom.xml" rel="self"></link><id>https://www.ryancheley.com/</id><updated>2019-05-05T08:15:00+02:00</updated><entry><title>Figuring out how Drafts REALLY works</title><link href="https://www.ryancheley.com/figuring-out-how-drafts-really-works.html" rel="alternate"></link><published>2019-05-05T08:15:00+02:00</published><updated>2019-05-05T08:15:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-05-05:/figuring-out-how-drafts-really-works.html</id><summary type="html">&lt;p&gt;On my way back from Arizona a few weeks ago I decided to play around with Drafts a bit. Now I use Drafts every day. When it went to a subscription model more than a year ago it was a no brainer for me. This is a seriously powerful app …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On my way back from Arizona a few weeks ago I decided to play around with Drafts a bit. Now I use Drafts every day. When it went to a subscription model more than a year ago it was a no brainer for me. This is a seriously powerful app when you need it.&lt;/p&gt;
&lt;p&gt;But since my initial workflows and shortcuts I've not really done too &lt;a href="/creating-hastags-for-social-media-with-a-drafts-action.html"&gt;much&lt;/a&gt; with it. But after listening to some stuff from &lt;a href="https://nahumck.me"&gt;Tim Nahumck&lt;/a&gt; I decided I needed to invest a little time ... and honestly there's no better time than cruising at 25k feet on your way back from Phoenix.&lt;/p&gt;
&lt;p&gt;Ok, first of all I never really understood workspaces. I had some set up but I didn't get it. That was the first place I started.&lt;/p&gt;
&lt;p&gt;Each workspace can have its own action and keyboard shortcut thing which I didn't realize. This has so much potential. I can create workspaces for all sorts of things and have the keyboard shortcut things I need when I need them! This alone is mind blowing and I'm disappointed I didn't look into this feature sooner.&lt;/p&gt;
&lt;p&gt;I have 4 workspaces set up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OF Templates&lt;/li&gt;
&lt;li&gt;O3&lt;/li&gt;
&lt;li&gt;Scrum&lt;/li&gt;
&lt;li&gt;post ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Initially since I didn't really understand the power of the workspace I had them mostly as filtering tools to be used when trying to find a draft. But now with the custom action and keyboards for each workspace I have them set up to filter down to specific tags AND use their own keyboards.&lt;/p&gt;
&lt;p&gt;The OF Template workspace is used to create OmniFocus projects based on Taskpaper markup. There are a ton of different actions that I took from &lt;a href="https://www.relay.fm/people/rose-orchard"&gt;Rose Orchard&lt;/a&gt; (of &lt;a href="https://automators.fm"&gt;Automators&lt;/a&gt; fame) that help to either add items with the correct syntax to a Task Paper markdown file OR turn the whole thing into an OmniFocus project. Simply a life saver for when I really know all of the steps that are going to be involved in a project and I want to write them all down!&lt;/p&gt;
&lt;p&gt;The O3 workspace is used for processing the notes from the one-on-one I have with my team. There's really only two actions: Parse O3 notes and Add to O3 notes. How are these different? I have a Siri Shortcut that populates a Draft with a template that collects the name of the person and the date time that the O3 occurred. This is the note that is parsed by the first action. The second action is used when someone does something that I want to remember (either good or bad) so that I can bring it up at a more appropriate time (the best time to tell someone about a behavior is right now, but sometimes circumstances prevent that) so I have this little action.&lt;/p&gt;
&lt;p&gt;In both cases they append data to a markdown file in Dropbox (i have one file per person that reports to me). The Shortcut also takes any actions that need to be completed and adds them to OmniFocus for me to review later.&lt;/p&gt;
&lt;p&gt;The third workspace is Scrum. This workspace has just one action which is "Parse scrum notes". Again, I have a template that is generated from Siri Shortcuts and dropped into Drafts. During the morning standup meetings I have with my team this Draft will have the things I did yesterday, what I'm working on today, and any roadblocks that I have. It also create a section where I can add actions which when the draft is parsed goes into OmniFocus for me to review later (currently the items get added with a due date of today at 1pm ... but I need to revisit that).&lt;/p&gt;
&lt;p&gt;The last workspace is post ideas (which is where I'm writing this from). Its custom keyboard is just a markdown one with quick ways to add markdown syntax and a Preview button so I can see what the markdown will render out as.&lt;/p&gt;
&lt;p&gt;It's still a work in progress as this draft will end up in Ulysses so it can get posted to my site, &lt;a href="https://www.macstories.net/reviews/drafts-5-4-siri-shortcuts-wordpress-and-more/"&gt;but I've seen that I can even post from Drafts to Wordpress&lt;/a&gt; so I'm going to give that a shot later on.&lt;/p&gt;
&lt;p&gt;There are several other ideas I have bouncing around in my head about ideas for potential workspaces. My only concern at this point is how many workspaces can I have before there are too many to be used effectively.&lt;/p&gt;
&lt;p&gt;So glad I had the time on the flight to take a look at workspaces. A huge productivity boost for me!&lt;/p&gt;</content><category term="Automation"></category><category term="Drafts"></category><category term="iOS"></category><category term="Writing"></category></entry><entry><title>Creating Hastags for Social Media with a Drafts Action</title><link href="https://www.ryancheley.com/creating-hastags-for-social-media-with-a-drafts-action.html" rel="alternate"></link><published>2019-03-30T05:46:00+01:00</published><updated>2019-03-30T05:46:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-03-30:/creating-hastags-for-social-media-with-a-drafts-action.html</id><summary type="html">&lt;p&gt;Creating meaningful, long #hastags can be a pain in the butt.&lt;/p&gt;
&lt;p&gt;There you are, writing up a witty tweet or making that perfect caption for your instagram pic and you realize that you have a fantastic idea for a hash tag that is more of a sentence than a single …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Creating meaningful, long #hastags can be a pain in the butt.&lt;/p&gt;
&lt;p&gt;There you are, writing up a witty tweet or making that perfect caption for your instagram pic and you realize that you have a fantastic idea for a hash tag that is more of a sentence than a single word.&lt;/p&gt;
&lt;p&gt;You proceed to write it out and unleash your masterpiece to the world and just as you hit the submit button you notice that you have a typo, or the wrong spelling of a word and #ohcrap you need to delete and retweet!&lt;/p&gt;
&lt;p&gt;That lead me to write a &lt;a href="https://getdrafts.com"&gt;Drafts&lt;/a&gt; Action to take care of that.&lt;/p&gt;
&lt;p&gt;I’ll leave &lt;a href="https://www.macstories.net/reviews/drafts-5-the-macstories-review/"&gt;others to write about the virtues of Drafts&lt;/a&gt;, but it’s fantastic.&lt;/p&gt;
&lt;p&gt;The Action I created has two steps: (1) to run some JavaScript and (2) to copy the contents of the draft to the Clipboard. You can get my action &lt;a href="https://actions.getdrafts.com/a/1Uo"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here’s the JavaScript that I used to take a big long sentence and turn it into a social media worthy hashtag&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;draft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;newContents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newContents&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Super simple, but holy crap does it help!&lt;/p&gt;</content><category term="Automation"></category><category term="Drafts"></category><category term="JavaScript"></category><category term="Social Media"></category></entry><entry><title>Receipts</title><link href="https://www.ryancheley.com/receipts.html" rel="alternate"></link><published>2019-03-16T05:37:00+01:00</published><updated>2019-03-16T05:37:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-03-16:/receipts.html</id><summary type="html">&lt;p&gt;Every month I set up a budget for my family so that we can track our spending and save money in the ways that we need to while still being able to enjoy life.&lt;/p&gt;
&lt;p&gt;I have a couple of Siri Shortcuts that will take a picture and then put that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every month I set up a budget for my family so that we can track our spending and save money in the ways that we need to while still being able to enjoy life.&lt;/p&gt;
&lt;p&gt;I have a couple of Siri Shortcuts that will take a picture and then put that picture into a folder in Dropbox. The reason that I have a couple of them is that one is for physical receipts that we got at a store and the other is for online purchases. I’m sure that these couple be combined into one, but I haven’t done that yet.&lt;/p&gt;
&lt;p&gt;One of the great things about these shortcuts is that they will create the folder that the image will go into if it’s not there. For example, the first receipt of March 2019 will create a folder called &lt;strong&gt;March&lt;/strong&gt; in the &lt;strong&gt;2019&lt;/strong&gt; folder. If the &lt;strong&gt;2019&lt;/strong&gt; folder wasn’t there, it would have created it too.&lt;/p&gt;
&lt;p&gt;What it doesn’t do is create the sub folder that all of my processed receipts will go into. Each month I need to create a folder called &lt;code&gt;month_name&lt;/code&gt; Processed. And each month I think, there must be a way I can automate this, but because it doesn’t really take that long I’ve never really done it.&lt;/p&gt;
&lt;p&gt;Over the weekend I finally had the time to try and write it up and test it out. Nothing too fancy, but it does what I want it to do, and a little more.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# create the variables I&amp;#39;m going to need later&lt;/span&gt;

&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%B&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%B_Processed&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# check to see if the Year folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# check to see if the Month folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;#check to see if the Month_Processed folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/Users/ryan/Dropbox/Family/Financials/$y/$m/$p&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/Users/ryan/Dropbox/Family/Financials/$y/$m/$p&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last section I use the double quotes “” around the directory name so that I can have a space in the name of the processed folder. Initially I had used an underscore but that’s not how I do it in real life when creating the sub directors, so I had to do a bit of googling and found a helpful &lt;a href="https://ubuntuforums.org/showthread.php?t=1962625"&gt;resource&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only thing left to do at this point is get it set up to run automatically so I don’t have to do anything.&lt;/p&gt;
&lt;p&gt;In order to do that I needed to add the following to my cronjob:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;5&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_monthly_expense_folders&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now I will have my folder structure created for me automatically on the first of the month at 5am!&lt;/p&gt;</content><category term="Automation"></category><category term="iOS"></category><category term="Siri Shortcuts"></category></entry><entry><title>Using Drafts 5 at Work</title><link href="https://www.ryancheley.com/using-drafts-5-at-work.html" rel="alternate"></link><published>2018-06-07T04:43:00+02:00</published><updated>2018-06-07T04:43:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-06-07:/using-drafts-5-at-work.html</id><summary type="html">&lt;p&gt;I have many meetings that I go to in any given day. One of the things that I’d been struggling with was being able to keep track of what I needed to do after a meeting and/or documenting certain types of meetings more effectively.&lt;/p&gt;
&lt;p&gt;I have been using …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have many meetings that I go to in any given day. One of the things that I’d been struggling with was being able to keep track of what I needed to do after a meeting and/or documenting certain types of meetings more effectively.&lt;/p&gt;
&lt;p&gt;I have been using a Workflow I created a couple of years ago to get the pertinent details of a meeting into Drafts. I spoke about updating that workflow to incorporate drafts 5 &lt;a href="/updating-my-meeting-workflow-for-drafts-5/" title="Drafts 5!"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once I was able to get the information into Drafts 5 a new opportunity arose. I was able to run a Workflow in Drafts!&lt;/p&gt;
&lt;p&gt;I decided that getting the information into Drafts was great, but I needed a good way to get it out.&lt;/p&gt;
&lt;p&gt;There were two sections in the Draft that I decided I could leverage to help:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Actions&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Broadly speaking there are 3 types of meetings I go to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Daily Standup aka Scrum&lt;/li&gt;
&lt;li&gt;One-on-One with direct reports or my manager&lt;/li&gt;
&lt;li&gt;General Meetings&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Categorizing the meetings helped me to create Draft Actions that run Workflows for each meeting type.&lt;/p&gt;
&lt;h2&gt;Scrum&lt;/h2&gt;
&lt;p&gt;This workflow runs through the &lt;code&gt;Actions&lt;/code&gt; of the Draft and adds each one to OmniFocus in a Project called &lt;code&gt;Scrum&lt;/code&gt; with a Tag of &lt;code&gt;Work&lt;/code&gt;. The due date set for these tasks is noon of the same day. My goal is to have the items that come from Scrum totally processed by noon of that day and for 80% of them I can. Some actions are more involved, but having them in OmniFocus helps me to make sure that they get taken care of.&lt;/p&gt;
&lt;p&gt;It also creates a calendar meeting for the next business day with my Scrum template and lets me know which team member will start that next day.&lt;/p&gt;
&lt;h2&gt;One-on-One&lt;/h2&gt;
&lt;p&gt;This workflow runs similarly to the Scrum workflow. It adds the &lt;code&gt;Action&lt;/code&gt; items to OmniFocus with a due date of noon the same day, tagged with Work and in the One-on-One Project.&lt;/p&gt;
&lt;p&gt;Instead of creating a calendar meeting for the next business day at 8:30 it appends items from the &lt;code&gt;Notes&lt;/code&gt; section to a Dropbox file. The Dropbox path is predefined, but the name of the file matches the name of the person I met with (luckily I don’t have 2 Tom’s reporting to me).&lt;/p&gt;
&lt;h2&gt;General Meetings&lt;/h2&gt;
&lt;p&gt;This is the simplest workflow. It adds all of the items under actions to OmniFocus with a due date of noon, project of Meeting Follow Up and Tag of Work.&lt;/p&gt;
&lt;p&gt;After the Actions are run from Drafts the notes are archived in Drafts.&lt;/p&gt;
&lt;p&gt;I’m toying with the idea of archiving the notes from these meetings into Dropbox, but I’m not sure that it gets me anything ... so I haven’t really looked at it too deeply.&lt;/p&gt;
&lt;h2&gt;Workflow links&lt;/h2&gt;
&lt;p&gt;The links for each of the workflows can be found here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/b44b7a8fec034f3091c78393d43f65c5" title="Scrum"&gt;Parse Scrum Notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/6869662facc44c449dd531af9db099e5" title="Parse One-on-One Notes"&gt;Parse One-on-One Notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/c15a9a9a53f14d82a6892e03baeb2b41" title="Parse General Meeting Notes"&gt;Parse Meeting Notes&lt;/a&gt;&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="Drafts"></category><category term="Meetings"></category><category term="Workflow"></category></entry><entry><title>Updating my meeting Workflow for Drafts 5</title><link href="https://www.ryancheley.com/updating-my-meeting-workflow-for-drafts-5.html" rel="alternate"></link><published>2018-05-19T17:56:00+02:00</published><updated>2018-05-19T17:56:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-19:/updating-my-meeting-workflow-for-drafts-5.html</id><summary type="html">&lt;p&gt;Drafts is a &lt;strong&gt;productivity&lt;/strong&gt; app created by Greg Pierce (\@AgileTortoise).&lt;/p&gt;
&lt;p&gt;I’ve loved and used Drafts 4 every day for the last several years. I loved it so much I even contributed to the Tip Jar Greg had in the app. Seriously, it’s an amazing app. If you haven …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Drafts is a &lt;strong&gt;productivity&lt;/strong&gt; app created by Greg Pierce (\@AgileTortoise).&lt;/p&gt;
&lt;p&gt;I’ve loved and used Drafts 4 every day for the last several years. I loved it so much I even contributed to the Tip Jar Greg had in the app. Seriously, it’s an amazing app. If you haven’t &lt;a href="https://itunes.apple.com/us/app/drafts-5-capture-act/id1236254471?mt=8"&gt;downloaded&lt;/a&gt; it already you totally should.&lt;/p&gt;
&lt;p&gt;Recently, Greg released Drafts 5. With this new version comes a new Business Model as well. Instead of a single pay (and hope people ‘tip’ you) he’s converted to a subscription model.&lt;/p&gt;
&lt;p&gt;I signed up for the free week and didn’t have a real opportunity to use it before my free week was converted into a pay week but I’ve no regrets. I like what Greg does and want him to keep updating his app so that I can get the benefits of it once I have a real chance to dive in.&lt;/p&gt;
&lt;p&gt;Part of the reason I wasn’t able to really use the new version is the way that I primarily use Drafts. I have a &lt;a href="https://workflow.is/workflows/fe54a103d8a94faaa5784510001e374e"&gt;WorkFlow&lt;/a&gt; that takes a meeting on my work calendar and allows me to take notes about that meetings.&lt;/p&gt;
&lt;p&gt;It’s one of the most useful &lt;strong&gt;productivity&lt;/strong&gt; tools I have during my morning standup meetings with my team, and it’s useful for the other (sometimes endless) meetings that I go to.&lt;/p&gt;
&lt;p&gt;With the release of Drafts 5 I was not longer able to use both Drafts 5 AND my workflow, so I needed to update my workflow.&lt;/p&gt;
&lt;p&gt;With Drafts 4 it was just one of the built in Apps. Because Drafts 5 limits some of the functionality unless you have the &lt;em&gt;PRO&lt;/em&gt; version I don’t think that Workflow will be updated to include Drafts 5 like it did Drafts 4.&lt;/p&gt;
&lt;p&gt;Once I realized that &lt;em&gt;AND&lt;/em&gt; since I’m paying for the app I figured I’d need to update my Workflow instead of waiting and hoping that Workflow would be updated to include Drafts 5.&lt;/p&gt;
&lt;p&gt;In order to make the update I had to look for &lt;a href="https://www.w3.org/TR/app-uri/"&gt;URL Scheme&lt;/a&gt; for Drafts 5 ... but I couldn’t really find one. I assumed that Drafts 5 URL Scheme would be the same as &lt;a href="https://agiletortoise.zendesk.com/hc/en-us/articles/202771400-Drafts-URL-Schemes"&gt;Drafts 4&lt;/a&gt; (I was right) and made various attempts at getting a copy of the Workflow to work with Drafts 5.&lt;/p&gt;
&lt;p&gt;This is the section of the workflow that needs to be updated:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-282" height="388" src="/images/uploads/2018/05/Image-5-19-18-6-37-PM.png" width="1619"&gt;&lt;/p&gt;
&lt;p&gt;Since Drafts 5 isn’t included in the Built in Apps I was going to need to pass a URL and open the app.&lt;/p&gt;
&lt;p&gt;This would require 3 separate steps in Workflow&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Convert Text into URL Encoded string&lt;/li&gt;
&lt;li&gt;Prepend the URL Scheme for creating a new draft to the URL Encoded String&lt;/li&gt;
&lt;li&gt;Open the URL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-283" height="1490" src="/images/uploads/2018/05/Image-5-19-18-6-37-PM-1.png" width="1622"&gt;&lt;/p&gt;
&lt;p&gt;This basically means that 1 step is now replaced with 3 ... but hey, that’s the price of progress must be paid!&lt;/p&gt;
&lt;p&gt;Both the &lt;a href="https://workflow.is/workflows/fe54a103d8a94faaa5784510001e374e"&gt;Drafts 4&lt;/a&gt; and &lt;a href="https://workflow.is/workflows/dae8898da2c34dcf9eee099c333e749d"&gt;Drafts 5&lt;/a&gt; versions of these workflows are available.&lt;/p&gt;
&lt;p&gt;If you enjoy them, hit me up in the comments or let me know on Twitter \@ryancheley!&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="Workflow"></category></entry><entry><title>Cronjob Redux</title><link href="https://www.ryancheley.com/cronjob-redux.html" rel="alternate"></link><published>2018-04-20T19:10:00+02:00</published><updated>2018-04-20T19:10:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-20:/cronjob-redux.html</id><summary type="html">&lt;p&gt;After &lt;strong&gt;days&lt;/strong&gt; of trying to figure this out, I finally got the video to upload via a cronjob.&lt;/p&gt;
&lt;p&gt;There were 2 issues.&lt;/p&gt;
&lt;h2&gt;Issue the first&lt;/h2&gt;
&lt;p&gt;Finally found the issue. &lt;a href="https://developers.google.com/youtube/v3/guides/uploading_a_video"&gt;Original script from YouTube developers guide&lt;/a&gt;had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CLIENT_SECRETS_FILE = &amp;quot;client_secrets.json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then a couple of lines later, this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;% os.path …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;After &lt;strong&gt;days&lt;/strong&gt; of trying to figure this out, I finally got the video to upload via a cronjob.&lt;/p&gt;
&lt;p&gt;There were 2 issues.&lt;/p&gt;
&lt;h2&gt;Issue the first&lt;/h2&gt;
&lt;p&gt;Finally found the issue. &lt;a href="https://developers.google.com/youtube/v3/guides/uploading_a_video"&gt;Original script from YouTube developers guide&lt;/a&gt;had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CLIENT_SECRETS_FILE = &amp;quot;client_secrets.json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then a couple of lines later, this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;% os.path.abspath(os.path.join(os.path.dirname(__file__), CLIENT_SECRETS_FILE))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When &lt;code&gt;crontab&lt;/code&gt; would run the script it would run from a path that wasn’t where the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; file was and so a message would be displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;

&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;populate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client_secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="nl"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="nf"&gt;%s&lt;/span&gt;

&lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Developers&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;
&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//console.developers.google.com/&lt;/span&gt;

&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client_secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;please&lt;/span&gt; &lt;span class="nl"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//developers.google.com/api-client-library/python/guide/aaa_client_secrets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What I needed to do was to update the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; to be the whole path so that it could always find the file.&lt;/p&gt;
&lt;p&gt;A simple change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;CLIENT_SECRETS_FILE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="nv"&gt;abspath&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="nv"&gt;join&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="k"&gt;dirname&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;__file__&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;CLIENT_SECRETS_FILE&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Issue the second&lt;/h2&gt;
&lt;p&gt;When the &lt;code&gt;create_mp4.sh&lt;/code&gt; script would run it was reading all of the &lt;code&gt;h264&lt;/code&gt; files from the directory where they lived &lt;strong&gt;BUT&lt;/strong&gt; they were attempting to output the &lt;code&gt;mp4&lt;/code&gt; file to &lt;code&gt;/&lt;/code&gt; which it didn’t have permission to write to.&lt;/p&gt;
&lt;p&gt;This was failing silently (I’m still not sure how I could have caught the error). Since there was no &lt;code&gt;mp4&lt;/code&gt; file to upload that script was failing (though it was true that the location of the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; was an issue).&lt;/p&gt;
&lt;p&gt;What I needed to do was change the &lt;code&gt;create_mp4.sh&lt;/code&gt; file so that when the MP4Box command output the &lt;code&gt;mp4&lt;/code&gt; file to the proper directory. The script went from this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="cm"&gt;/*.h264)); for index in ${!array[@]}; do if [ &amp;quot;$index&amp;quot; -eq 0 ]; then echo -n &amp;quot; -add ${array[index]}&amp;quot;; else echo -n &amp;quot; -cat ${array[index]}&amp;quot;; fi; done; echo -n &amp;quot; hummingbird.mp4&amp;quot;) &amp;gt; create_mp4.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="cm"&gt;/*.h264)); for index in ${!array[@]}; do if [ &amp;quot;$index&amp;quot; -eq 0 ]; then echo -n &amp;quot; -add ${array[index]}&amp;quot;; else echo -n &amp;quot; -cat ${array[index]}&amp;quot;; fi; done; echo -n &amp;quot; /home/pi/Documents/python_projects/hummingbird.mp4&amp;quot;) &amp;gt; /home/pi/Documents/python_projects/create_mp4.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last bit &lt;code&gt;/home/pi/Documents/python_projects/create_mp4.sh&lt;/code&gt; may not be &lt;em&gt;neccesary&lt;/em&gt; but I’m not taking any chances.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.youtube.com/watch?v=OaRiW1aFk9k"&gt;video posted tonight&lt;/a&gt; is the first one that was completely automatic!&lt;/p&gt;
&lt;p&gt;Now … if I could just figure out how to automatically fill up my hummingbird feeder.&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="python"></category><category term="Raspberry Pi"></category><category term="Shell Script"></category><category term="video"></category><category term="youtube"></category></entry><entry><title>Cronjob ... Finally</title><link href="https://www.ryancheley.com/cronjob-finally.html" rel="alternate"></link><published>2018-04-10T20:10:00+02:00</published><updated>2018-04-10T20:10:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-10:/cronjob-finally.html</id><summary type="html">&lt;p&gt;I’ve mentioned before that I have been working on getting the hummingbird video upload automated.&lt;/p&gt;
&lt;p&gt;Each time I thought I had it, and each time I was wrong.&lt;/p&gt;
&lt;p&gt;For some reason I could run it from the command line without issue, but when the cronjob would try and run …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve mentioned before that I have been working on getting the hummingbird video upload automated.&lt;/p&gt;
&lt;p&gt;Each time I thought I had it, and each time I was wrong.&lt;/p&gt;
&lt;p&gt;For some reason I could run it from the command line without issue, but when the cronjob would try and run it ... nothing.&lt;/p&gt;
&lt;p&gt;Turns out, it was running, it just wasn’t doing anything. And that was my fault.&lt;/p&gt;
&lt;p&gt;The file I had setup in cronjob was called &lt;code&gt;run_scrip.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;At first I was confused because the script was suppose to be writing out to a log file all of it’s activities. But it didn’t appear to.&lt;/p&gt;
&lt;p&gt;Then I noticed that the log.txt file it was writing was in the main &lt;code&gt;\`&lt;/code&gt; directory. That should have been my first clue.&lt;/p&gt;
&lt;p&gt;I kept trying to get the script to run, but suddenly, in a blaze of glory, realized that it &lt;strong&gt;was&lt;/strong&gt; running, it just wasn’t doing anything.&lt;/p&gt;
&lt;p&gt;And it wasn’t doing anything for the same reason that the log file was being written to the &lt;code&gt;\`&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;All of the paths were relative instead of absolute, so when the script ran the command &lt;code&gt;./create_mp4.sh&lt;/code&gt; it looks for that script in the home directory, didn’t find it, and moved on.&lt;/p&gt;
&lt;p&gt;The fix was simple enough, just add absolute paths and we’re golden.&lt;/p&gt;
&lt;p&gt;That means my &lt;code&gt;run_script.sh&lt;/code&gt; goes from this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create the script that will be run&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;create_script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# make the script that was just created executable&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script to create the mp4 file&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create MP4 Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# upload video to YouTube.com&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploaded Video to YouTube.com: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# Next we remove the video files locally&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed h264 files: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed mp4 file: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# change to the directory with all of the files&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script that will be run&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# make the script that was just created executable&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script to create the mp4 file&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create MP4 Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# upload video to YouTube.com&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploaded Video to YouTube.com: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# Next we remove the video files locally&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed h264 files: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed mp4 file: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I made this change and then started getting an error about not being able to access a &lt;code&gt;json&lt;/code&gt; file necessary for the upload to &lt;a href="https://www.youtube.com"&gt;YouTube&lt;/a&gt;. Sigh.&lt;/p&gt;
&lt;p&gt;Then while searching for what directory the cronjob was running from I found &lt;a href="https://unix.stackexchange.com/questions/38951/what-is-the-working-directory-when-cron-executes-a-job"&gt;this very simple&lt;/a&gt; idea. The response was, why not just change it to the directory you want. 🤦‍♂️  &lt;/p&gt;
&lt;p&gt;I added the &lt;code&gt;cd&lt;/code&gt; to the top of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# change to the directory with all of the files
cd /home/pi/Documents/python_projects/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Anyway, now it works. Finally!&lt;/p&gt;
&lt;p&gt;Tomorrow will be the first time (unless of course something else goes wrong) that The entire process will be automated. Super pumped!&lt;/p&gt;</content><category term="Automation"></category><category term="Cronjob"></category><category term="python"></category><category term="youtube"></category></entry><entry><title>Pushing Changes from Pythonista to GitHub - Step 1</title><link href="https://www.ryancheley.com/pushingchangesfrompythonistatogithub-step1.html" rel="alternate"></link><published>2016-10-29T16:00:00+02:00</published><updated>2016-10-29T16:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-29:/pushingchangesfrompythonistatogithub-step1.html</id><summary type="html">&lt;p&gt;With the most recent release of the iOS app &lt;a href="https://workflow.is"&gt;Workflow&lt;/a&gt; I was toying with the idea of writing a workflow that would allow me to update / add a file to a &lt;a href="https://github.com"&gt;GitHub repo&lt;/a&gt; via a workflow.&lt;/p&gt;
&lt;p&gt;My thinking was that since &lt;a href="http://omz-software.com/pythonista/"&gt;Pythonista&lt;/a&gt; is only running local files on my iPad …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With the most recent release of the iOS app &lt;a href="https://workflow.is"&gt;Workflow&lt;/a&gt; I was toying with the idea of writing a workflow that would allow me to update / add a file to a &lt;a href="https://github.com"&gt;GitHub repo&lt;/a&gt; via a workflow.&lt;/p&gt;
&lt;p&gt;My thinking was that since &lt;a href="http://omz-software.com/pythonista/"&gt;Pythonista&lt;/a&gt; is only running local files on my iPad if I could use a workflow to access the api elements to push the changes to my repo that would be pretty sweet.&lt;/p&gt;
&lt;p&gt;In order to get this to work I'd need to be able to accomplosh the following things (not necessarily in this order)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have the workflow get a list of all of the repositories in my GitHub&lt;/li&gt;
&lt;li&gt;Get the current contents of the app to the clip board&lt;/li&gt;
&lt;li&gt;Commit the changes to the master of the repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have been able to write a &lt;a href="https://workflow.is/workflows/8e986867ff074dbe89c7b0bf9dcb72f5"&gt;Workflow&lt;/a&gt; that will get all of the public repos of a specified github user. Pretty straight forward stuff.&lt;/p&gt;
&lt;p&gt;The next thing I'm working on getting is to be able to commit the changes from the clip board to a specific file in the repo (if one is specified) otherwise a new file would be created.&lt;/p&gt;
&lt;p&gt;I really just want to 'have the answer' for this, but I know that the journey will be the best part of getting this project completed.&lt;/p&gt;
&lt;p&gt;So for now, I continue to read the &lt;a href="https://developer.github.com/v3/"&gt;GitHub API Documentation&lt;/a&gt; to discover exactly how to do what I want to do.&lt;/p&gt;</content><category term="Automation"></category><category term="Github"></category><category term="Workflow"></category></entry></feed>