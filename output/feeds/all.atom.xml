<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Place on the Internet</title><link href="https://www.ryancheley.com/" rel="alternate"></link><link href="https://www.ryancheley.com/feeds/all.atom.xml" rel="self"></link><id>https://www.ryancheley.com/</id><updated>2021-06-13T11:00:00+02:00</updated><entry><title>Debugging Setting up a Django Project</title><link href="https://www.ryancheley.com/debugging-setting-up-a-django-project.html" rel="alternate"></link><published>2021-06-13T11:00:00+02:00</published><updated>2021-06-13T11:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-06-13:/debugging-setting-up-a-django-project.html</id><summary type="html">&lt;p&gt;Normally when I start a new Django project I’ll use the PyCharm setup wizard, but recently I wanted to try out VS Code for a Django project and was super stumped when I would get a message like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Normally when I start a new Django project I’ll use the PyCharm setup wizard, but recently I wanted to try out VS Code for a Django project and was super stumped when I would get a message like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha224&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha224&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha384&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha384&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha512&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha512&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here are the steps I was using to get started&lt;/p&gt;
&lt;p&gt;From a directory I wanted to create the project I would set up my virtual environment&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then activate it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I would install Django&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, using the &lt;code&gt;startproject&lt;/code&gt; command per the &lt;a href="https://docs.djangoproject.com/en/3.2/ref/django-admin/#startproject" title="Start a new Django Project"&gt;docs&lt;/a&gt; I would&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;django-admin startproject my_great_project .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And get the error message above 🤦🏻‍♂️&lt;/p&gt;
&lt;p&gt;The strangest part about the error message is that it references Python2.7 everywhere … which is odd because I’m in a Python3 virtual environment.&lt;/p&gt;
&lt;p&gt;I did a &lt;code&gt;pip list&lt;/code&gt; and got:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Package    Version
---------- -------
asgiref    3.3.4
Django     3.2.4
pip        21.1.2
pytz       2021.1
setuptools 49.2.1
sqlparse   0.4.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … so everything is in my virtual environment. Let’s drop into the REPL and see what’s going on&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-506" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-7.52.36-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;Well, that looks to be OK.&lt;/p&gt;
&lt;p&gt;Next, I checked the contents of my directory using &lt;code&gt;tree -L 2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
├── &lt;span class="nv"&gt;my_great_project&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__init__&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;settings&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;urls&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   └── &lt;span class="nv"&gt;wsgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
└── &lt;span class="nv"&gt;venv&lt;/span&gt;
    ├── &lt;span class="nv"&gt;bin&lt;/span&gt;
    ├── &lt;span class="k"&gt;include&lt;/span&gt;
    ├── &lt;span class="nv"&gt;lib&lt;/span&gt;
    └── &lt;span class="nv"&gt;pyvenv&lt;/span&gt;.&lt;span class="nv"&gt;cfg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Yep … that looks good too.&lt;/p&gt;
&lt;p&gt;OK, let’s go look at the installed packages for Python 2.7 then. On macOS they’re installed at&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/local/lib/python2.7/site-packages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Looking in there and I see that Django is installed.&lt;/p&gt;
&lt;p&gt;OK, let’s use pip to uninstall Django from Python2.7, except that &lt;code&gt;pip&lt;/code&gt; gives essentially the same result as running the &lt;code&gt;django-admin&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;OK, let’s just remove it manually. After a bit of googling I found this &lt;a href="https://stackoverflow.com/a/8146552"&gt;Stackoverflow&lt;/a&gt; answer on how to remove the offending package (which is what I assumed would be the answer, but better to check, right?)&lt;/p&gt;
&lt;p&gt;After removing the &lt;code&gt;Django&lt;/code&gt; install from Python 2.7 and running &lt;code&gt;django-admin --version&lt;/code&gt; I get&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-507" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-8.05.55-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;So I googled that error message and found another answers on &lt;a href="https://stackoverflow.com/a/10756446"&gt;Stackoverflow&lt;/a&gt; which lead me to look at the &lt;code&gt;manage.py&lt;/code&gt; file. When I &lt;code&gt;cat&lt;/code&gt; the file I get:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That first line SHOULD be finding the Python executable in my virtual environment, but it’s not.&lt;/p&gt;
&lt;p&gt;Next I googled the error message &lt;code&gt;django-admin code for hash sha384 was not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Which lead to this &lt;a href="https://stackoverflow.com/a/60575879"&gt;Stackoverflow&lt;/a&gt; answer. I checked to see if Python2 was installed with brew using&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew leaves | grep python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which returned &lt;code&gt;python@2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Based on the answer above, the solution was to uninstall the Python2 that was installed by &lt;code&gt;brew&lt;/code&gt;. Now, although &lt;a href="https://www.python.org/doc/sunset-python-2/"&gt;Python2 has retired&lt;/a&gt;, I was leery of uninstalling it on my system without first verifying that I could remove the brew version without impacting the system version which is needed by macOS.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;brew info python@2&lt;/code&gt; I determined where &lt;code&gt;brew&lt;/code&gt; installed Python2 and compared it to where Python2 is installed by macOS and they are indeed different&lt;/p&gt;
&lt;p&gt;Output of &lt;code&gt;brew info python@2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.7.15&lt;/span&gt;&lt;span class="n"&gt;_1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;515&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;122.4&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="n"&gt;Built&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="mi"&gt;2018-08&lt;/span&gt;&lt;span class="mo"&gt;-05&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Output of &lt;code&gt;which python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK, now we can remove the version of Python2 installed by &lt;code&gt;brew&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;uninstall&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now with all of that cleaned up, lets try again. From a clean project directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
source venv/bin/activate
pip install django
django-admin --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last command returned&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;zsh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="nl"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;span class="mf"&gt;3.2.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK, I can get the version number and it mostly works, but can I create a new project?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;django-admin startproject my_great_project .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which returns&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;zsh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="nl"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;BUT, the project was installed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── &lt;span class="nv"&gt;db&lt;/span&gt;.&lt;span class="nv"&gt;sqlite3&lt;/span&gt;
├── &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
├── &lt;span class="nv"&gt;my_great_project&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__init__&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__pycache__&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;asgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;settings&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;urls&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   └── &lt;span class="nv"&gt;wsgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
└── &lt;span class="nv"&gt;venv&lt;/span&gt;
    ├── &lt;span class="nv"&gt;bin&lt;/span&gt;
    ├── &lt;span class="k"&gt;include&lt;/span&gt;
    ├── &lt;span class="nv"&gt;lib&lt;/span&gt;
    └── &lt;span class="nv"&gt;pyvenv&lt;/span&gt;.&lt;span class="nv"&gt;cfg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I was able to run it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" class="wp-image-508" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-9.01.19-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;Success! I’ve still got that last bug to deal with, but that’s a story for a different day!&lt;/p&gt;
&lt;h2&gt;Short Note&lt;/h2&gt;
&lt;p&gt;My initial fix, and my initial draft for this article, was to use the old adage, turn it off and turn it back on. In this case, the implementation would be the &lt;code&gt;deactivate&lt;/code&gt; and then re &lt;code&gt;activate&lt;/code&gt; the virtual environment and that’s what I’d been doing.&lt;/p&gt;
&lt;p&gt;As I was writing up this article I was hugely influenced by the work of &lt;a href="https://twitter.com/b0rk"&gt;Julie Evans&lt;/a&gt; and kept asking, “but why?”. She’s been writing a lot of awesome, amazing things, and has several &lt;a href="https://wizardzines.com"&gt;zines for purchase&lt;/a&gt; that I would highly recommend.&lt;/p&gt;
&lt;p&gt;She’s also generated a few &lt;a href="https://jvns.ca/blog/2021/04/16/notes-on-debugging-puzzles/"&gt;debugging ‘games’&lt;/a&gt; that are a lot of fun.&lt;/p&gt;
&lt;p&gt;Anyway, thanks Julie for pushing me to figure out the why for this issue.&lt;/p&gt;
&lt;h2&gt;Post Script&lt;/h2&gt;
&lt;p&gt;I figured out the error message above and figured, well, I might as well update the post! I thought it had to do with &lt;code&gt;zsh&lt;/code&gt;, but no, it was just more of the same.&lt;/p&gt;
&lt;p&gt;The issue was that Django had been installed in the base Python2 (which I knew). All I had to do was to uninstall it with pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip uninstall django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The trick was that pip wasn't working out for me ... it was generating errors. So I had to run the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m pip uninstall django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I had to run this AFTER I put the Django folder back into &lt;code&gt;/usr/local/lib/python2.7/site-packages&lt;/code&gt; (if you'll recall from above, I removed it from the folder)&lt;/p&gt;
&lt;p&gt;After that clean up was done, everything worked out as expected! I just had to keep digging!&lt;/p&gt;</content><category term="Django"></category><category term="Debugging"></category><category term="macOS"></category><category term="python"></category></entry><entry><title>My First Python Package</title><link href="https://www.ryancheley.com/my-first-python-package.html" rel="alternate"></link><published>2021-06-06T18:11:00+02:00</published><updated>2021-06-06T18:11:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-06-06:/my-first-python-package.html</id><summary type="html">&lt;p&gt;A few months ago I was inspired by &lt;a href="https://simonwillison.net" title="Simon, creator of Datasette"&gt;Simon Willison&lt;/a&gt; and his project &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and it’s related ecosystem to write a Python Package for it.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; to track my time at work and I thought this would be a great opportunity use that data with &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few months ago I was inspired by &lt;a href="https://simonwillison.net" title="Simon, creator of Datasette"&gt;Simon Willison&lt;/a&gt; and his project &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and it’s related ecosystem to write a Python Package for it.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; to track my time at work and I thought this would be a great opportunity use that data with &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and see if I couldn’t answer some interesting questions, or at the very least, do some neat data discovery.&lt;/p&gt;
&lt;p&gt;The purpose of this package is to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a SQLite database containing data from your &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; account&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I followed the &lt;a href="https://packaging.python.org/tutorials/packaging-projects/" title="How do I add a package to PyPi?"&gt;tutorial for committing a package to PyPi&lt;/a&gt; and did the first few pushes manually. Then, using a GitHub action from one of Simon’s &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; projects, I was able to automate it when I make a release on GitHub!&lt;/p&gt;
&lt;p&gt;Since the initial commit on March 7 (my birthday BTW) I’ve had 10 releases, with the most recent one coming yesterday which removed an issue with one of the tables reporting back an API key which, if published on the internet could be a bad thing ... so hooray for security enhancements!&lt;/p&gt;
&lt;p&gt;Anyway, it was a fun project, and got me more interested in authoring Python packages. I’m hoping to do a few more related to &lt;a href="https://datasette.io"&gt;Datasette&lt;/a&gt; (although I’m not sure what to write honestly!).&lt;/p&gt;
&lt;p&gt;Be sure to check out the package on &lt;a href="https://pypi.org/project/toggl-to-sqlite/" title="toggl-to-SQLite"&gt;PyPi.org&lt;/a&gt; and the source code on &lt;a href="https://github.com/ryancheley/toggl-to-sqlite/" title="GitHub repo of toggl-to-sqlite"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"></category><category term="datasette"></category><category term="python"></category><category term="python package"></category></entry><entry><title>How does my Django site connect to the internet anyway?</title><link href="https://www.ryancheley.com/how-does-my-django-site-connect-to-the-internet-anyway.html" rel="alternate"></link><published>2021-05-31T12:49:00+02:00</published><updated>2021-05-31T12:49:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-05-31:/how-does-my-django-site-connect-to-the-internet-anyway.html</id><summary type="html">&lt;p&gt;I created a Django site to troll my cousin Barry who is a big &lt;a href="https://www.mlb.com/padres" title="San Diego Padres"&gt;San Diego Padres&lt;/a&gt; fan. Their Shortstop is a guy called &lt;a href="https://www.baseball-reference.com/players/t/tatisfe02.shtml" title="Fernando “Error Maker” Tatis Jr."&gt;Fernando Tatis Jr.&lt;/a&gt; and he’s really good. Like &lt;strong&gt;really&lt;/strong&gt; good. He’s also young, and arrogant, and is everything an old dude like me doesn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I created a Django site to troll my cousin Barry who is a big &lt;a href="https://www.mlb.com/padres" title="San Diego Padres"&gt;San Diego Padres&lt;/a&gt; fan. Their Shortstop is a guy called &lt;a href="https://www.baseball-reference.com/players/t/tatisfe02.shtml" title="Fernando “Error Maker” Tatis Jr."&gt;Fernando Tatis Jr.&lt;/a&gt; and he’s really good. Like &lt;strong&gt;really&lt;/strong&gt; good. He’s also young, and arrogant, and is everything an old dude like me doesn’t like about the ‘new generation’ of ball players that are changing the way the game is played.&lt;/p&gt;
&lt;p&gt;In all honesty though, it’s fun to watch him play (anyone but the Dodgers).&lt;/p&gt;
&lt;p&gt;The thing about him though, is that while he’s really good at the plate, he’s less good at playing defense. He currently leads the league in errors. Not just for all shortstops, but for ALL players!&lt;/p&gt;
&lt;p&gt;Anyway, back to the point. I made this Django site call &lt;a href="https://www.doestatisjrhaveanerrortoday.com" title="Not Yet"&gt;Does Tatis Jr Have an Error Today?&lt;/a&gt;It is a simple site that only does one thing ... tells you if Tatis Jr has made an error today. If he hasn’t, then it says &lt;code&gt;No&lt;/code&gt;, and if he has, then it says &lt;code&gt;Yes&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It’s a dumb site that doesn’t do anything else. At all.&lt;/p&gt;
&lt;p&gt;But, what it did do was lead me down a path to answer the question, “How does my site connect to the internet anyway?”&lt;/p&gt;
&lt;p&gt;Seems like a simple enough question to answer, and it is, but it wasn’t really what I thought when I started.&lt;/p&gt;
&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;I use a MacBook Pro to work on the code. I then deploy it to a Digital Ocean server using GitHub Actions. But they say, a picture is worth a thousand words, so here's a chart of the workflow:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Workflow" src="https://raw.githubusercontent.com/ryancheley/tatis/main/custom_resources/workflow.png"&gt;&lt;/p&gt;
&lt;p&gt;This shows the development cycle, but that doesn’t answer the question, how does the site connect to the internet!&lt;/p&gt;
&lt;p&gt;How is it that when I go to the site, I see anything? I thought I understood it, and when I tried to actually draw it out, turns out I didn't!&lt;/p&gt;
&lt;p&gt;After a bit of Googling, I found &lt;a href="https://serverfault.com/a/331263" title="How does Gunicorn interact with NgInx?"&gt;this&lt;/a&gt; and it helped me to create this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/ryancheley/tatis/main/custom_resources/internal_working.png"&gt;&lt;/p&gt;
&lt;p&gt;My site runs on an Ubuntu 18.04 server using Nginx as proxy server. Nginx determines if the request is for a static asset (a css file for example) or dynamic one (something served up by the Django App, like answering if Tatis Jr. has an error today).&lt;/p&gt;
&lt;p&gt;If the request is static, then Nginx just gets the static data and server it. If it’s dynamic data it hands off the request to Gunicorn which then interacts with the Django App.&lt;/p&gt;
&lt;p&gt;So, what actually handles the HTTP request? From the &lt;a href="https://serverfault.com/a/331263"&gt;serverfault.com answer above&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[T]he simple answer is Gunicorn. The complete answer is both Nginx and Gunicorn handle the request. Basically, Nginx will receive the request and if it's a dynamic request (generally based on URL patterns) then it will give that request to Gunicorn, which will process it, and then return a response to Nginx which then forwards the response back to the original client.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my head, I thought that Nginx was ONLY there to handle the static requests (and it is) but I wasn’t clean on how dynamic requests were handled ... but drawing this out really made me stop and ask, “Wait, how DOES that actually work?”&lt;/p&gt;
&lt;p&gt;Now I know, and hopefully you do to!&lt;/p&gt;
&lt;h2&gt;Notes:&lt;/h2&gt;
&lt;p&gt;These diagrams are generated using the amazing library &lt;a href="https://github.com/mingrammer/diagrams" title="Diagrams"&gt;Diagrams&lt;/a&gt;. The code used to generate them is &lt;a href="https://github.com/ryancheley/tatis/blob/main/generate_diagram.py"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="django"></category><category term="nginx"></category></entry><entry><title>Enhancements: Using GitHub Actions to Deploy</title><link href="https://www.ryancheley.com/enhancements-using-github-actions-to-deploy.html" rel="alternate"></link><published>2021-03-14T11:00:00+01:00</published><updated>2021-03-14T11:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-03-14:/enhancements-using-github-actions-to-deploy.html</id><summary type="html">&lt;p&gt;Integrating a version control system into your development cycle is just kind of one of those things that you do, right? I use GutHub for my version control, and it’s GitHub Actions to help with my deployment process.&lt;/p&gt;
&lt;p&gt;There are 3 &lt;code&gt;yaml&lt;/code&gt; files I have to get my local …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Integrating a version control system into your development cycle is just kind of one of those things that you do, right? I use GutHub for my version control, and it’s GitHub Actions to help with my deployment process.&lt;/p&gt;
&lt;p&gt;There are 3 &lt;code&gt;yaml&lt;/code&gt; files I have to get my local code deployed to my production server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;django.yaml&lt;/li&gt;
&lt;li&gt;dev.yaml&lt;/li&gt;
&lt;li&gt;prod.yaml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each one serving it’s own purpose&lt;/p&gt;
&lt;h2&gt;django.yaml&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;django.yaml&lt;/code&gt; file is used to run my tests and other actions on a GitHub runner. It does this in 9 distinct steps and one Postgres service.&lt;/p&gt;
&lt;p&gt;The steps are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set up Python 3.8 - setting up Python 3.8 on the docker image provided by GitHub&lt;/li&gt;
&lt;li&gt;psycopg2 prerequisites - setting up &lt;code&gt;psycopg2&lt;/code&gt; to use the Postgres service created&lt;/li&gt;
&lt;li&gt;graphviz prerequisites - setting up the requirements for graphviz which creates an image of the relationships between the various models&lt;/li&gt;
&lt;li&gt;Install dependencies - installs all of my Python package requirements via pip&lt;/li&gt;
&lt;li&gt;Run migrations - runs the migrations for the Django App&lt;/li&gt;
&lt;li&gt;Load Fixtures - loads data into the database&lt;/li&gt;
&lt;li&gt;Lint - runs &lt;code&gt;black&lt;/code&gt; on my code&lt;/li&gt;
&lt;li&gt;Flake8 - runs &lt;code&gt;flake8&lt;/code&gt; on my code&lt;/li&gt;
&lt;li&gt;Run Tests - runs all of the tests to ensure they pass&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Django&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;12.2&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;github_actions&lt;/span&gt;
        &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;
        &lt;span class="c1"&gt;# needed because the postgres container does not provide a healthcheck&lt;/span&gt;
        &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="n"&gt;pg_isready&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;retries&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;
      &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;hashFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;**/requirements.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="n"&gt;restore&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt; &lt;span class="n"&gt;prerequisites&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libpq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;graphviz&lt;/span&gt; &lt;span class="n"&gt;prerequisites&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;graphviz&lt;/span&gt; &lt;span class="n"&gt;libgraphviz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;
        &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt;
        &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Run&lt;/span&gt; &lt;span class="n"&gt;migrations&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Load&lt;/span&gt; &lt;span class="n"&gt;Fixtures&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Sport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;League&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Conference&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Division&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Venue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Team&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Lint&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;black&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flake8&lt;/span&gt;
      &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cclauss&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Flake8&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;5.0&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Run&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pytest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;dev.yaml&lt;/h2&gt;
&lt;p&gt;The code here does essentially they same thing that is done in the &lt;code&gt;deploy.sh&lt;/code&gt; in my earlier post &lt;a href="/automating-the-deployment.html"&gt;Automating the Deployment&lt;/a&gt; except that it pulls code from my &lt;code&gt;dev&lt;/code&gt; branch on GitHub onto the server. The other difference is that this is on my UAT server, not my production server, so if something goes off the rails, I don’t hose production.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dev&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appleboy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;
        &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_HOST_TEST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_KEY_TEST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_USERNAME&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

          &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="n"&gt;StadiaTracker&lt;/span&gt;
            &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;branch&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ryancheley&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;

            &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;

            &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;

            &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;
            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;staticfiles&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;

            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;stadiatracker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;prod.yaml&lt;/h2&gt;
&lt;p&gt;Again, the code here does essentially they same thing that is done in the &lt;code&gt;deploy.sh&lt;/code&gt; in my earlier post &lt;a href="/automating-the-deployment.html"&gt;Automating the Deployment&lt;/a&gt; except that it pulls code from my &lt;code&gt;main&lt;/code&gt; branch on GitHub onto the server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Prod&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appleboy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;
        &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_HOST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_KEY&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_USERNAME&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

          &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="n"&gt;StadiaTracker&lt;/span&gt;
            &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ryancheley&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;

            &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;

            &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;

            &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;
            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;staticfiles&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;

            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;stadiatracker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The general workflow is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a branch on my local computer with &lt;code&gt;git switch -c branch_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the code changes to GitHub which kicks off the &lt;code&gt;django.yaml&lt;/code&gt; workflow.&lt;/li&gt;
&lt;li&gt;If everything passes then I do a pull request from &lt;code&gt;branch_name&lt;/code&gt; into &lt;code&gt;dev&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This kicks off the &lt;code&gt;dev.yaml&lt;/code&gt; workflow which will update UAT&lt;/li&gt;
&lt;li&gt;I check UAT to make sure that everything works like I expect it to (it almost always does … and when it doesn’t it’s because I’ve mucked around with a server configuration which is the problem, not my code)&lt;/li&gt;
&lt;li&gt;I do a pull request from &lt;code&gt;dev&lt;/code&gt; to &lt;code&gt;main&lt;/code&gt; which updates my production server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My next enhancement is to kick off the &lt;code&gt;dev.yaml&lt;/code&gt; process if the tests from &lt;code&gt;django.yaml&lt;/code&gt; all pass, i.e. do an auto merge from &lt;code&gt;branch_name&lt;/code&gt; to &lt;code&gt;dev&lt;/code&gt;, but I haven’t done that yet.&lt;/p&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="github actions"></category><category term="series"></category></entry><entry><title>Setting up multiple Django Sites on a Digital Ocean server</title><link href="https://www.ryancheley.com/setting-up-multiple-django-sites-on-a-digital-ocean-server.html" rel="alternate"></link><published>2021-03-07T12:00:00+01:00</published><updated>2021-03-07T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-03-07:/setting-up-multiple-django-sites-on-a-digital-ocean-server.html</id><summary type="html">&lt;p&gt;If you want to have more than 1 Django site on a single server, you can. It’s not too hard, and using the Digital Ocean tutorial as a starting point, you can get there.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04"&gt;this tutorial&lt;/a&gt; as a start, we set up so that there are multiple Django …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to have more than 1 Django site on a single server, you can. It’s not too hard, and using the Digital Ocean tutorial as a starting point, you can get there.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04"&gt;this tutorial&lt;/a&gt; as a start, we set up so that there are multiple Django sites being served by &lt;code&gt;gunicorn&lt;/code&gt; and &lt;code&gt;nginx&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Creating &lt;code&gt;systemd&lt;/code&gt; Socket and Service Files for Gunicorn&lt;/h2&gt;
&lt;p&gt;The first thing to do is to set up 2 Django sites on your server. You’ll want to follow the tutorial referenced above and just repeat for each.&lt;/p&gt;
&lt;p&gt;Start by creating and opening two systemd socket file for Gunicorn with sudo privileges:&lt;/p&gt;
&lt;p&gt;Site 1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/site1.socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Site 2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/site2.socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The contents of the files will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;siteX socket&lt;/span&gt;

&lt;span class="k"&gt;[Socket]&lt;/span&gt;
&lt;span class="na"&gt;ListenStream&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/run/siteX.sock&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sockets.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;siteX&lt;/code&gt; is the site you want to server from that socket&lt;/p&gt;
&lt;p&gt;Next, create and open a systemd service file for Gunicorn with sudo privileges in your text editor. The service filename should match the socket filename with the exception of the extension&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/siteX.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The contents of the file will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gunicorn daemon&lt;/span&gt;
&lt;span class="na"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;siteX.socket&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sammy&lt;/span&gt;
&lt;span class="na"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;span class="na"&gt;WorkingDirectory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;path/to/directory&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;path/to/gunicorn/directory   &lt;/span&gt;
         &lt;span class="na"&gt;--access-logfile -   &lt;/span&gt;
         &lt;span class="na"&gt;--workers 3   &lt;/span&gt;
         &lt;span class="na"&gt;--bind unix:/run/gunicorn.sock   &lt;/span&gt;
         &lt;span class="na"&gt;myproject.wsgi:application&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again &lt;code&gt;siteX&lt;/code&gt; is the socket you want to serve&lt;/p&gt;
&lt;p&gt;Follow tutorial for testing Gunicorn&lt;/p&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;server_name&lt;/span&gt; &lt;span class="err"&gt;server_domain_or_IP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;/favicon.ico&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;access_log&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;log_not_found&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/path/to/project&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;proxy_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;siteX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again &lt;code&gt;siteX&lt;/code&gt; is the socket you want to serve&lt;/p&gt;
&lt;p&gt;Next, link to enabled sites&lt;/p&gt;
&lt;p&gt;Test Nginx&lt;/p&gt;
&lt;p&gt;Open firewall&lt;/p&gt;
&lt;p&gt;Should now be able to see sites at domain names&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Using PostgreSQL</title><link href="https://www.ryancheley.com/using-postgresql.html" rel="alternate"></link><published>2021-02-28T12:00:00+01:00</published><updated>2021-02-28T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-28:/using-postgresql.html</id><summary type="html">&lt;p&gt;Once you’ve deployed your code to a web server, you’ll be pretty stoked. I know I was. One thing you’ll need to start thinking about though is converting your SQLite database to a ‘real’ database. I say ‘real’ because SQLite is a great engine to start off …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Once you’ve deployed your code to a web server, you’ll be pretty stoked. I know I was. One thing you’ll need to start thinking about though is converting your SQLite database to a ‘real’ database. I say ‘real’ because SQLite is a great engine to start off with, but once you have more than 1 user, you’ll really need to have a database that can support concurrency, and can scale when you need it to.&lt;/p&gt;
&lt;p&gt;Enter PostgreSQL. Django offers built-in database support for several different databases, but Postgres is the preferred engine.&lt;/p&gt;
&lt;p&gt;We’ll take care of this in stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the database&lt;/li&gt;
&lt;li&gt;Prep project for use of Postgres&lt;ol&gt;
&lt;li&gt;Install needed package&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;settings.py&lt;/code&gt; to change to Postgres&lt;/li&gt;
&lt;li&gt;Run the migration locally&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Deploy updates to server&lt;/li&gt;
&lt;li&gt;Script it all out&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Create the database&lt;/h2&gt;
&lt;p&gt;I’m going to assume that you already have Postgres installed locally. If you don’t, there are many good tutorials to walk you through it.&lt;/p&gt;
&lt;p&gt;You’ll need three things to create a database in Postgres&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Database name&lt;/li&gt;
&lt;li&gt;Database user&lt;/li&gt;
&lt;li&gt;Database password for your user&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For this example, I’ll be as generic as possible and choose the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database name will be &lt;code&gt;my_database&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Database user will be &lt;code&gt;my_database_user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Database password will be &lt;code&gt;my_database_user_password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From our terminal we’ll run a couple of commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# This will open the Postgres Shell

psql

# From the psql shell

CREATE DATABASE my_database;
CREATE USER my_database_user WITH PASSWORD &amp;#39;my_database_user_password&amp;#39;;
ALTER ROLE my_database_user SET client_encoding TO &amp;#39;utf8&amp;#39;;
ALTER ROLE my_database_user SET default_transaction_isolation TO &amp;#39;read committed&amp;#39;;
ALTER ROLE my_database_user SET timezone TO &amp;#39;UTC&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last 3 &lt;code&gt;ALTER&lt;/code&gt; commands are based on Django recommendations for Postgres user.&lt;/p&gt;
&lt;p&gt;One thing to note, before you go creating databases and users, you should make sure that they don’t already exist. The &lt;code&gt;\l&lt;/code&gt; will list the various databases present. If this is your first time in the psql shell you’ll see three databases list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgres
template0
template1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To see a list of the users &lt;code&gt;\du&lt;/code&gt; will display that. If this is your first time in the psql shell you’ll see one user listed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … the database has been created. Next, we start updating our project to use this new database engine&lt;/p&gt;
&lt;h2&gt;Prep project for use of Postgres&lt;/h2&gt;
&lt;h3&gt;Install Needed Package&lt;/h3&gt;
&lt;p&gt;The only python package needed to use Postgres is &lt;code&gt;psycopg2-binary&lt;/code&gt; so we’ll&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install psycopg2-binary
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Update &lt;code&gt;settings.py&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;DATABASES&lt;/code&gt; portion of the &lt;code&gt;settings.py&lt;/code&gt; is set to use SQLite by default and will look (something) like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.sqlite3&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;mydatabase&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Django documentation is really good on what changes need to be made. From the &lt;a href="https://docs.djangoproject.com/en/3.0/ref/settings/#databases"&gt;documentation&lt;/a&gt; we see that we need to update the &lt;code&gt;DATABASES&lt;/code&gt; section to be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.postgresql&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;mydatabase&amp;#39;,
        &amp;#39;USER&amp;#39;: &amp;#39;mydatabaseuser&amp;#39;,
        &amp;#39;PASSWORD&amp;#39;: &amp;#39;mypassword&amp;#39;,
        &amp;#39;HOST&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
        &amp;#39;PORT&amp;#39;: &amp;#39;5432&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With our database from above, ours will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.postgresql&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;my_database&amp;#39;,
        &amp;#39;USER&amp;#39;: &amp;#39;my_database_user&amp;#39;,
        &amp;#39;PASSWORD&amp;#39;: &amp;#39;my_database_user_password&amp;#39;,
        &amp;#39;HOST&amp;#39;: &amp;#39;localhost&amp;#39;,
        &amp;#39;PORT&amp;#39;: &amp;#39;&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;HOST&lt;/code&gt; is changed to &lt;code&gt;localhost&lt;/code&gt; and we remove the value for &lt;code&gt;PORT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once we get ready to push this to our web server we’ll want to replace the &lt;code&gt;NAME&lt;/code&gt;, &lt;code&gt;USER&lt;/code&gt;, and &lt;code&gt;PASSWORD&lt;/code&gt; with environment variables, but we’ll get to that later&lt;/p&gt;
&lt;h3&gt;Run migrations&lt;/h3&gt;
&lt;p&gt;OK, we’ve got our database set up, we’ve got our settings updated to use the new database, now we can run set that database up.&lt;/p&gt;
&lt;p&gt;All that we need to do is to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will run any migrations that we had created previously on our new Postgres database.&lt;/p&gt;
&lt;p&gt;A few things to note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You will need to create a new &lt;code&gt;superuser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You will need to migrate over any data from the old SQLite database^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations! You’ve migrated from SQLite to Postgres!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[This can be done with the &lt;code&gt;datadump&lt;/code&gt; and &lt;code&gt;dataload&lt;/code&gt; commands available in &lt;code&gt;manage.py&lt;/code&gt; &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="postgres"></category><category term="series"></category></entry><entry><title>Automating the deployment</title><link href="https://www.ryancheley.com/automating-the-deployment.html" rel="alternate"></link><published>2021-02-21T12:00:00+01:00</published><updated>2021-02-21T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-21:/automating-the-deployment.html</id><summary type="html">&lt;p&gt;We got everything set up, and now we want to automate the deployment.&lt;/p&gt;
&lt;p&gt;Why would we want to do this you ask? Let’s say that you’ve decided that you need to set up a test version of your site (what some might call UAT) on a new server …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We got everything set up, and now we want to automate the deployment.&lt;/p&gt;
&lt;p&gt;Why would we want to do this you ask? Let’s say that you’ve decided that you need to set up a test version of your site (what some might call UAT) on a new server (at some point I’ll write something up about about multiple Django Sites on the same server and part of this will still apply then). How can you do it?&lt;/p&gt;
&lt;p&gt;Well you’ll want to write yourself some scripts!&lt;/p&gt;
&lt;p&gt;I have a mix of Python and Shell scripts set up to do this. They are a bit piece meal, but they also allow me to run specific parts of the process without having to try and execute a script with ‘commented’ out pieces.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;create_server.py&lt;/p&gt;
&lt;p&gt;destroy_droplet.py&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;copy_for_deploy.sh&lt;/p&gt;
&lt;p&gt;create_db.sh&lt;/p&gt;
&lt;p&gt;create_server.sh&lt;/p&gt;
&lt;p&gt;deploy.sh&lt;/p&gt;
&lt;p&gt;deploy_env_variables.sh&lt;/p&gt;
&lt;p&gt;install-code.sh&lt;/p&gt;
&lt;p&gt;setup-server.sh&lt;/p&gt;
&lt;p&gt;setup_nginx.sh&lt;/p&gt;
&lt;p&gt;setup_ssl.sh&lt;/p&gt;
&lt;p&gt;super.sh&lt;/p&gt;
&lt;p&gt;upload-code.sh&lt;/p&gt;
&lt;p&gt;The Python script &lt;code&gt;create_server.py&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# create_server.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;attrgetter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;created ip_address name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;doat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DIGITAL_OCEAN_ACCESS_TOKEN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Create Droplet&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bearer &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;doat&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;data_keys&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Creating Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Server Created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Waiting for Server Stand up&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Getting Droplet Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;per_page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;get_droplets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;server_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_droplets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;networks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;v4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ip_address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;server_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;server_ip_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip_address&lt;/span&gt;
&lt;span class="n"&gt;db_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DJANGO_PG_DB_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DJANGO_PG_USER_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;server_ip_address&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;production_server_id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Run server setup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./setup-server.sh &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;server_ip_address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Server setup complete. You need to add &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;server_ip_address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; to the ALLOWED_HOSTS section of your settings.py file &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WARNING: Running Server set up will destroy your current production server. Aborting process&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Earlier I said that I liked Digital Ocean because of it’s nice API for interacting with it’s servers (i.e. Droplets). Here we start to see some.&lt;/p&gt;
&lt;p&gt;The First part of the script uses my Digital Ocean Token and some input parameters to create a Droplet via the Command Line. The &lt;code&gt;sleep(90)&lt;/code&gt; allows the process to complete before I try and get the IP address. Ninety seconds is a bit longer than is needed, but I figure, better safe than sorry … I’m sure that there’s a way to call to DO and ask if the just created droplet has an IP address, but I haven’t figured it out yet.&lt;/p&gt;
&lt;p&gt;After we create the droplet AND is has an IP address, we get it to pass to the bash script &lt;code&gt;server-setup.sh&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# server-setup.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# Create the server on Digital Ocean&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Take secret key as 2nd argument&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for server ip address1&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Setting up $SERVER&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Updating apt sources&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Upgrading apt packages&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing apt packages&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="n"&gt;supervisor&lt;/span&gt; &lt;span class="n"&gt;postgresql&lt;/span&gt; &lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Create User to Run Web App&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;getent&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
      &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; User already present&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;gecos&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt;
      &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Add newly created user to www-data&amp;quot;&lt;/span&gt;
      &lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Make directory for code to be deployed to&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/burningfiddle/BurningFiddle&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping Deploy Folder creation - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;


    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Create VirtualEnv in this directory&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/burningfiddle/venv&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
      &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping virtualenv creation - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="c1"&gt;# I don&amp;#39;t think i need this anymore&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Start and Enable gunicorn&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;
    &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;


&lt;span class="n"&gt;EOF&lt;/span&gt;

&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;setup_nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;deploy_env_variables&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All of that stuff we did before, logging into the server and running commands, we’re now doing via a script. What the above does is attempt to keep the server in an idempotent state (that is to say you can run it as many times as you want and you don’t get weird artifacts … if you’re a math nerd you may have heard idempotent in Linear Algebra to describe the multiplication of a matrix by itself and returning the original matrix … same idea here!)&lt;/p&gt;
&lt;p&gt;The one thing that is new here is the part&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh root@$SERVER /bin/bash &amp;lt;&amp;lt; EOF
    ...
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A block like that says, “take everything in between &lt;code&gt;EOF&lt;/code&gt; and run it on the server I just ssh’d into using bash.&lt;/p&gt;
&lt;p&gt;At the end we run 3 shell scripts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup_nginx.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy_env_variables.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s review these scripts&lt;/p&gt;
&lt;p&gt;The script &lt;code&gt;setup_nginx.sh&lt;/code&gt; copies several files needed for the &lt;code&gt;nginx&lt;/code&gt; service:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gunicorn.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gunicorn.sockets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It then sets up a link between the &lt;code&gt;available-sites&lt;/code&gt; and &lt;code&gt;enabled-sites&lt;/code&gt; for &lt;code&gt;nginx&lt;/code&gt; and finally restarts &lt;code&gt;nginx&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# setup_nginx.sh&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;sitename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;sitename&lt;/span&gt;

&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Set up site to be linked in Nginx&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;sitename&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Restart Nginx&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Allow Nginx Full access&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;ufw&lt;/span&gt; &lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Nginx Full&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script &lt;code&gt;deploy_env_variables.sh&lt;/code&gt; copies environment variables. There are packages (and other methods) that help to manage environment variables better than this, and that is one of the enhancements I’ll be looking at.&lt;/p&gt;
&lt;p&gt;This script captures the values of various environment variables (one at a time) and then passes them through to the server. It then checks to see if these environment variables exist on the server and will place them in the &lt;code&gt;/etc/environment&lt;/code&gt; file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;DJANGO_SECRET_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_SECRET_KEY&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_PASSWORD&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_USER_NAME&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_DB_NAME&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_SUPERUSER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_SUPERUSER_PASSWORD&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_SECRET_KEY - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_PASSWORD=$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_PASSWORD - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_USER_NAME=$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_USER_NAME - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_DB_NAME=$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_DB_NAME - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_DEBUG=$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_DEBUG - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;deploy.sh&lt;/code&gt; calls two scripts itself:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;span class="c1"&gt;# Deploy Django project.&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="c1"&gt;#./scripts/backup-database.sh&lt;/span&gt;
./upload-code.sh
./install-code.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The final two scripts!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;upload-code.sh&lt;/code&gt; script uploads the files to the &lt;code&gt;deploy&lt;/code&gt; folder of the server while the &lt;code&gt;install-code.sh&lt;/code&gt; script move all of the files to where then need to be on the server and restart any services.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# upload-code.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying Django project files to server.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$SERVER&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for SERVER.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Preparing scripts locally.&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="n"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;htmlcov&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;venv&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*__pycache__*&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*staticfiles*&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.pyc&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying files to the server.&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rm -rf /root/deploy/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Finished copying Django project files to server.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# install-code.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# Install Django app on server.&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing Django project on server.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$SERVER&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for SERVER.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
  &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Activate the Virtual Environment&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;


  &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Deleting old files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying new files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing Python packages&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Running Django migrations&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Creating Superuser&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;createsuperuser&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="n"&gt;bfadmin&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="n"&gt;rcheley&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="bp"&gt;true&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Load Initial Data&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Collecting static files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Reloading Gunicorn&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;

&lt;span class="n"&gt;EOF&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Finished installing Django project on server.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Preparing the code for deployment to Digital Ocean</title><link href="https://www.ryancheley.com/preparing-the-code-for-deployment-to-digital-ocean.html" rel="alternate"></link><published>2021-02-14T12:00:00+01:00</published><updated>2021-02-14T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-14:/preparing-the-code-for-deployment-to-digital-ocean.html</id><summary type="html">&lt;p&gt;OK, we’ve got our server ready for our Django App. We set up Gunicorn and Nginx. We created the user which will run our app and set up all of the folders that will be needed.&lt;/p&gt;
&lt;p&gt;Now, we work on deploying the code!&lt;/p&gt;
&lt;h2&gt;Deploying the Code&lt;/h2&gt;
&lt;p&gt;There are 3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, we’ve got our server ready for our Django App. We set up Gunicorn and Nginx. We created the user which will run our app and set up all of the folders that will be needed.&lt;/p&gt;
&lt;p&gt;Now, we work on deploying the code!&lt;/p&gt;
&lt;h2&gt;Deploying the Code&lt;/h2&gt;
&lt;p&gt;There are 3 parts for deploying our code:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Collect Locally&lt;/li&gt;
&lt;li&gt;Copy to Server&lt;/li&gt;
&lt;li&gt;Place in correct directory  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Why don’t we just copy to the spot on the server we want o finally be in? Because we’ll need to restart Nginx once we’re fully deployed and it’s easier to have that done in 2 steps than in 1.&lt;/p&gt;
&lt;h3&gt;Collect the Code Locally&lt;/h3&gt;
&lt;p&gt;My project is structured such that there is a &lt;code&gt;deploy&lt;/code&gt; folder which is on the Same Level as my Django Project Folder. That is to say&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-475" src="/images/uploads/2021/02/DraggedImage-4.png"&gt;&lt;/p&gt;
&lt;p&gt;We want to clear out any old code. To do this we run from the same level that the Django Project Folder is in&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf deploy/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will remove ALL of the files and folders that were present. Next, we want to copy the data from the &lt;code&gt;yoursite&lt;/code&gt; folder to the deploy folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rsync -rv --exclude &amp;#39;htmlcov&amp;#39; --exclude &amp;#39;venv&amp;#39; --exclude &amp;#39;*__pycache__*&amp;#39; --exclude &amp;#39;*staticfiles*&amp;#39; --exclude &amp;#39;*.pyc&amp;#39;  yoursite/* deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, running this form the same folder. I’m using &lt;code&gt;rsync&lt;/code&gt; here as it has a really good API for allowing me to exclude items (I’m sure the above could be done better with a mix of Regular Expressions, but this gets the jobs done)&lt;/p&gt;
&lt;h3&gt;Copy to the Server&lt;/h3&gt;
&lt;p&gt;We have the files collected, now we need to copy them to the server.&lt;/p&gt;
&lt;p&gt;This is done in two steps. Again, we want to remove ALL of the files in the deploy folder on the server (see rationale from above)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh root@$SERVER &amp;quot;rm -rf /root/deploy/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we use &lt;code&gt;scp&lt;/code&gt; to secure copy the files to the server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scp -r deploy root@$SERVER:/root/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Our files are now on the server!&lt;/p&gt;
&lt;h3&gt;Installing the Code&lt;/h3&gt;
&lt;p&gt;We have several steps to get through in order to install the code. They are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Activate the Virtual Environment&lt;/li&gt;
&lt;li&gt;Deleting old files&lt;/li&gt;
&lt;li&gt;Copying new files&lt;/li&gt;
&lt;li&gt;Installing Python packages&lt;/li&gt;
&lt;li&gt;Running Django migrations&lt;/li&gt;
&lt;li&gt;Collecting static files&lt;/li&gt;
&lt;li&gt;Reloading Gunicorn  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Before we can do any of this we’ll need to &lt;code&gt;ssh&lt;/code&gt; into our server. Once that’s done, we can proceed with the steps below.&lt;/p&gt;
&lt;p&gt;Above we created our virtual environment in a folder called &lt;code&gt;venv&lt;/code&gt; located in &lt;code&gt;/home/yoursite/&lt;/code&gt;. We’ll want to activate it now (1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source /home/yoursite/venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we change directory into the yoursite home directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd /home/yoursite/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we delete the old files from the last install (2):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf /home/yoursite/yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copy our new files (3)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp -r /root/deploy/ /home/yoursite/yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install our Python packages (4)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install -r /home/yoursite/yoursite/requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run any migrations (5)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python /home/yoursite/yoursite/manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Collect Static Files (6)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python /home/yoursite/yoursite/manage.py collectstatic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, reload Gunicorn&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When we visit our domain we should see our Django Site &lt;a href="#" title="There are other steps that are neccesary like creating a superuser"&gt;fn&lt;/a&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Getting your Domain to point to Digital Ocean Your Server</title><link href="https://www.ryancheley.com/getting-your-domain-to-point-to-digital-ocean-your-server.html" rel="alternate"></link><published>2021-02-07T12:00:00+01:00</published><updated>2021-02-07T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-07:/getting-your-domain-to-point-to-digital-ocean-your-server.html</id><summary type="html">&lt;p&gt;I use Hover for my domain purchases and management. Why? Because they have a clean, easy to use, not-slimy interface, and because I listed to enough Tech Podcasts that I’ve drank the Kool-Aid.&lt;/p&gt;
&lt;p&gt;When I was trying to get my Hover Domain to point to my Digital Ocean server …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use Hover for my domain purchases and management. Why? Because they have a clean, easy to use, not-slimy interface, and because I listed to enough Tech Podcasts that I’ve drank the Kool-Aid.&lt;/p&gt;
&lt;p&gt;When I was trying to get my Hover Domain to point to my Digital Ocean server it seemed much harder to me than it needed to be. Specifically, I couldn’t find any guide on doing it! Many of the tutorials I did find were basically like, it’s all the same. We’ll show you with GoDaddy and then you can figure it out.&lt;/p&gt;
&lt;p&gt;Yes, I can figure it out, but it wasn’t as easy as it could have been. That’s why I’m writing this up.&lt;/p&gt;
&lt;h2&gt;Digital Ocean&lt;/h2&gt;
&lt;p&gt;From Droplet screen click ‘Add a Domain’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;figure class=&amp;quot;aligncenter&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" class="wp-image-470" src="/images/uploads/2021/02/DraggedImage.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add 2 ‘A’ records (one for www and one without the www)&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-469" src="/images/uploads/2021/02/DraggedImage-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Make note of the name servers&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-471" src="/images/uploads/2021/02/DraggedImage-2.png"&gt;&lt;/p&gt;
&lt;h2&gt;Hover&lt;/h2&gt;
&lt;p&gt;In your account at Hover.com change your Name Servers to Point to Digital Ocean ones from above.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-468" src="/images/uploads/2021/02/DraggedImage-3.png"&gt;&lt;/p&gt;
&lt;h2&gt;Wait&lt;/h2&gt;
&lt;p&gt;DNS … does anyone &lt;em&gt;really&lt;/em&gt; know how it works?^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ I just know that sometimes when I make a change it’s out there almost immediately for me, and sometimes it takes hours or days.&lt;/p&gt;
&lt;p&gt;At this point, you’re just going to potentially need to wait. Why? Because DNS that’s why. Ugh!&lt;/p&gt;
&lt;h2&gt;Setting up directory structure&lt;/h2&gt;
&lt;p&gt;While we’re waiting for the DNS to propagate, now would be a good time to set up some file structures for when we push our code to the server.&lt;/p&gt;
&lt;p&gt;For my code deploy I’ll be using a user called &lt;code&gt;burningfiddle&lt;/code&gt;. We have to do two things here, create the user, and add them to the &lt;code&gt;www-data&lt;/code&gt; user group on our Linux server.&lt;/p&gt;
&lt;p&gt;We can run these commands to take care of that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;adduser --disabled-password --gecos &amp;quot;&amp;quot; yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first line will add the user with no password and disable them to be able to log in until a password has been set. Since this user will NEVER log into the server, we’re done with the user creation piece!&lt;/p&gt;
&lt;p&gt;Next, add the user to the proper group&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;adduser yoursite www-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we have a user and they’ve been added to the group we need them to be added. In creating the user, we also created a directory for them in the &lt;code&gt;home&lt;/code&gt; directory called &lt;code&gt;yoursite&lt;/code&gt;. You should now be able to run this command without error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls /home/yoursite/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If that returns an error indicating no such directory, then you may not have created the user properly.&lt;/p&gt;
&lt;p&gt;Now we’re going to make a directory for our code to be run from.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir /home/yoursite/yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To run our Django app we’ll be using virtualenv. We can create our virtualenv directory by running this command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv /home/yoursite/venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Configuring Gunicorn&lt;/h2&gt;
&lt;p&gt;There are two files needed for Gunicorn to run:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gunicorn.socket&lt;/li&gt;
&lt;li&gt;gunicorn.service  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For our setup, this is what they look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Socket&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;ListenStream&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;EnvironmentFile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;WorkingDirectory&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;logfile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;workers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;wsgi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more on the details of the sections in both &lt;code&gt;gunicorn.service&lt;/code&gt; and &lt;code&gt;gunicorn.socket&lt;/code&gt; see this &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files" title="Understanding systemd units and unit files"&gt;article&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Environment Variables&lt;/h2&gt;
&lt;p&gt;The only environment variables we have to worry about here (since we’re using SQLite) are the DJANGO_SECRET_KEY and DJANGO_DEBUG&lt;/p&gt;
&lt;p&gt;We’ll want to edit &lt;code&gt;/etc/environment&lt;/code&gt; with our favorite editor (I’m partial to &lt;code&gt;vim&lt;/code&gt; but use whatever you like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim /etc/environment
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this file you’ll add your DJANGO_SECRET_KEY and DJANGO_DEBUG. The file will look something like this once you’re done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&amp;quot;
DJANGO_SECRET_KEY=my_super_secret_key_goes_here
DJANGO_DEBUG=False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Setting up Nginx&lt;/h2&gt;
&lt;p&gt;Now we need to create our &lt;code&gt;.conf&lt;/code&gt; file for Nginx. The file needs to be placed in &lt;code&gt;/etc/nginx/sites-available/$sitename&lt;/code&gt; where &lt;code&gt;$sitename&lt;/code&gt; is the name of your site. &lt;a href="#" title="In my case I'm leaving off the tld but you could just as easily name it with the tld"&gt;fn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The final file will look (something) like this &lt;a href="#" title="Note that my site is called yoursite in this example"&gt;fn&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;server_name&lt;/span&gt; &lt;span class="err"&gt;www.yoursite.com&lt;/span&gt; &lt;span class="err"&gt;yoursite.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;/favicon.ico&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;access_log&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;log_not_found&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/home/yoursite/yoursite/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;proxy_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;.conf&lt;/code&gt; file above tells Nginx to listen for requests to either &lt;code&gt;www.buringfiddle.com&lt;/code&gt; or &lt;code&gt;buringfiddle.com&lt;/code&gt; and then route them to the location &lt;code&gt;/home/yoursite/yoursite/&lt;/code&gt; which is where our files are located for our Django project.&lt;/p&gt;
&lt;p&gt;With that in place all that’s left to do is to make it enabled by running replacing &lt;code&gt;$sitename&lt;/code&gt; with your file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ln -s /etc/nginx/sites-available/$sitename /etc/nginx/sites-enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll want to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to make sure there aren’t any errors. If no errors occur you’ll need to restart Nginx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last thing to do is to allow full access to Nginx. You do this by running&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ufw allow &amp;#39;Nginx Full&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;[Probably just &lt;a href="https://jvns.ca/blog/how-updating-dns-works/"&gt;Julia Evans&lt;/a&gt; &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Web"></category><category term="digital ocean"></category><category term="series"></category><category term="server"></category><category term="setup"></category></entry><entry><title>Setting up the Server (on Digital Ocean)</title><link href="https://www.ryancheley.com/setting-up-the-server-on-digital-ocean.html" rel="alternate"></link><published>2021-01-31T12:00:00+01:00</published><updated>2021-01-31T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-31:/setting-up-the-server-on-digital-ocean.html</id><summary type="html">&lt;h2&gt;The initial setup&lt;/h2&gt;
&lt;p&gt;Digital Ocean has a pretty nice API which makes it easy to automate the creation of their servers (which they call &lt;code&gt;Droplets&lt;/code&gt;. This is nice when you’re trying to work towards automation of the entire process (like I was).&lt;/p&gt;
&lt;p&gt;I won’t jump into the automation …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The initial setup&lt;/h2&gt;
&lt;p&gt;Digital Ocean has a pretty nice API which makes it easy to automate the creation of their servers (which they call &lt;code&gt;Droplets&lt;/code&gt;. This is nice when you’re trying to work towards automation of the entire process (like I was).&lt;/p&gt;
&lt;p&gt;I won’t jump into the automation piece just yet, but once you have your DO account setup (sign up &lt;a href="https://m.do.co/c/cc5fdad15654"&gt;here&lt;/a&gt; if you don’t have one), it’s a simple interface to &lt;a href="https://www.digitalocean.com/docs/droplets/how-to/create/"&gt;Setup Your Droplet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I chose the Ubuntu 18.04 LTS image with a \$5 server (1GB Ram, 1CPU, 25GB SSD Space, 1000GB Transfer) hosted in their San Francisco data center (SFO2^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^).&lt;/p&gt;
&lt;h2&gt;We’ve got a server … now what?&lt;/h2&gt;
&lt;p&gt;We’re going to want to update, upgrade, and install all of the (non-Python) packages for the server. For my case, that meant running the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-get update
apt-get upgrade
apt-get install python3 python3-pip python3-venv tree postgresql postgresql-contrib nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it! We’ve now got a server that is ready to be setup for our Django Project.&lt;/p&gt;
&lt;p&gt;In the next post, I’ll walk through how to get your Domain Name to point to the Digital Ocean Server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[SFO2 is disabled for new customers and you will now need to use SFO3 unless you already have resources on SFO2, but if you’re following along you probably don’t. What’s the difference between the two? Nothing 😁 &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Server"></category><category term="Deployment"></category><category term="series"></category></entry><entry><title>Writing tests for Django Admin Custom Functionality</title><link href="https://www.ryancheley.com/writing-tests-for-django-admin-custom-functionality.html" rel="alternate"></link><published>2021-01-27T12:00:00+01:00</published><updated>2021-01-27T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-27:/writing-tests-for-django-admin-custom-functionality.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django app side project for a while and came across the need to write a custom filter for the Django Admin section.&lt;/p&gt;
&lt;p&gt;This was a first for me, and it was pretty straight forward to accomplish the task. I wanted to add a filter …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django app side project for a while and came across the need to write a custom filter for the Django Admin section.&lt;/p&gt;
&lt;p&gt;This was a first for me, and it was pretty straight forward to accomplish the task. I wanted to add a filter on the drop down list so that only certain records would appear.&lt;/p&gt;
&lt;p&gt;To do this, I sub-classed the Django Admin &lt;code&gt;SimpleListFilter&lt;/code&gt; with the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;(&lt;span class="n"&gt;admin&lt;/span&gt;.&lt;span class="n"&gt;SimpleListFilter&lt;/span&gt;):
    &lt;span class="n"&gt;title&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;parameter_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;employee&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;lookups&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;request&lt;/span&gt;, &lt;span class="n"&gt;model_admin&lt;/span&gt;):
        &lt;span class="n"&gt;employees&lt;/span&gt; = []
        &lt;span class="s"&gt;qs = Employee.objects.filter(status__status=&amp;quot;Active&amp;quot;&lt;/span&gt;).&lt;span class="n"&gt;order_by&lt;/span&gt;(&lt;span class="s"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;)
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt; &lt;span class="nb"&gt;in&lt;/span&gt; &lt;span class="s"&gt;qs:&lt;/span&gt;
&lt;span class="s"&gt;            employees.append((employee.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;, &lt;span class="nb"&gt;f&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{employee.first_name} {employee.last_name}&amp;quot;&lt;/span&gt;))
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;request&lt;/span&gt;, &lt;span class="n"&gt;queryset&lt;/span&gt;):
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="nb"&gt;value&lt;/span&gt;():
            &lt;span class="s"&gt;qs = queryset.filter(employee__id=&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="nb"&gt;value&lt;/span&gt;())
        &lt;span class="n"&gt;else:&lt;/span&gt;
            &lt;span class="s"&gt;qs = queryset&lt;/span&gt;
&lt;span class="s"&gt;        return qs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And implemented it like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;@admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EmployeeO3NoteAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;list_filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;o3_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was, as I said, relatively straight forward to do, but what was less clear to me was how to write tests for this functionality. My project has 100% test coverage, and therefore testing isn’t something I’m unfamiliar with, but in this context, I wasn’t sure where to start.&lt;/p&gt;
&lt;p&gt;There are two parts that need to be tested:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;lookups&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queryset&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Additionally, the &lt;code&gt;queryset&lt;/code&gt;has two states that need to be tested&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;With &lt;code&gt;self.value()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Without &lt;code&gt;self.value()&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This gives a total of 3 tests to write&lt;/p&gt;
&lt;p&gt;The thing that helps me out the most when trying to determine how to write tests is to use the Django Shell in PyCharm. To do this I:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import necessary parts of Django App&lt;/li&gt;
&lt;li&gt;Instantiate the &lt;code&gt;EmployeeListFilter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;See what errors I get&lt;/li&gt;
&lt;li&gt;Google how to fix the errors&lt;/li&gt;
&lt;li&gt;Repeat  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is what the test ended up looking like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.tests.factories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EmployeeO3NoteFactory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EmployeeStatusFactory&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.admin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;


&lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;termed_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt;
    &lt;span class="n"&gt;termed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeStatusFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Termed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;termed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;all_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;active_employees&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;termed_employees&lt;/span&gt;
    &lt;span class="n"&gt;o3_notes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_employees&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;o3_notes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3NoteFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;all_employees&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;o3_notes&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_filter_active_employee_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lookup_choices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_query_set_unfiltered_results_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;total_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;total_employees&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_query_set_filtered_results_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;employee_to_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;employee_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;queryset_to_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee__id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;employee_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Django"></category><category term="admin"></category><category term="tests"></category></entry><entry><title>Deploying a Django Site to Digital Ocean - A Series</title><link href="https://www.ryancheley.com/deploying-a-django-site-to-digital-ocean-a-series.html" rel="alternate"></link><published>2021-01-24T12:00:00+01:00</published><updated>2021-01-24T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-24:/deploying-a-django-site-to-digital-ocean-a-series.html</id><summary type="html">&lt;h2&gt;Previous Efforts&lt;/h2&gt;
&lt;p&gt;When I first heard of Django I thought it looks like a really interesting, and Pythonic way, to get a website up and running. I spent a whole weekend putting together a site locally and then, using Digital Ocean, decided to push my idea up onto a live …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Previous Efforts&lt;/h2&gt;
&lt;p&gt;When I first heard of Django I thought it looks like a really interesting, and Pythonic way, to get a website up and running. I spent a whole weekend putting together a site locally and then, using Digital Ocean, decided to push my idea up onto a live site.&lt;/p&gt;
&lt;p&gt;One problem that I ran into, which EVERY new Django Developer will run into was static files. I couldn’t get static files to work. No matter what I did, they were just … missing. I proceeded to spend the next few weekends trying to figure out why, but alas, I was not very good (or patient) with reading documentation and gave up.&lt;/p&gt;
&lt;p&gt;Fast forward a few years, and while taking the 100 Days of Code on the Web Python course from Talk Python to Me I was able to follow along on a part of the course that pushed up a Django App to Heroku.&lt;/p&gt;
&lt;p&gt;I wrote about that effort &lt;a href="https://pybit.es/my-first-django-app.html"&gt;here&lt;/a&gt;. Needless to say, I was pretty pumped. But, I was wondering, is there a way I can actually get a Django site to work on a non-Heroku (PaaS) type infrastructure.&lt;/p&gt;
&lt;h2&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;While going through my Twitter timeline I cam across a retweet from TestDrive.io of &lt;a href="https://mattsegal.dev/simple-django-deployment.html"&gt;Matt Segal&lt;/a&gt;. He has an &lt;strong&gt;amazing&lt;/strong&gt; walk through of deploying a Django site on the hard level (i.e. using Windows). It’s a mix of Blog posts and YouTube Videos and I highly recommend it. There is some NSFW language, BUT if you can get past that (and I can) it’s a great resource.&lt;/p&gt;
&lt;p&gt;This series is meant to be a written record of what I did to implement these recommendations and suggestions, and then to push myself a bit further to expand the complexity of the app.&lt;/p&gt;
&lt;h2&gt;Articles&lt;/h2&gt;
&lt;p&gt;A list of the Articles will go here. For now, here’s a rough outline of the planned posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/setting-up-the-server-on-digital-ocean.html"&gt;Setting up the Server (on Digital Ocean)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/getting-your-domain-to-point-to-digital-ocean-your-server.html"&gt;Getting your Domain to point to Digital Ocean Your Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/preparing-the-code-for-deployment-to-digital-ocean.html"&gt;Preparing the code for deployment to Digital Ocean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/automating-the-deployment.html"&gt;Automating the deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enhancements  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ‘Enhancements’ will be multiple follow up posts (hopefully) as I catalog improvements make to the site. My currently planned enhancements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating the App&lt;/li&gt;
&lt;li&gt;&lt;a href="/using-postgresql.html"&gt;Migrating from SQLite to Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Integrating Git&lt;/li&gt;
&lt;li&gt;&lt;a href="/setting-up-multiple-django-sites-on-a-digital-ocean-server.html"&gt;Having Multiple Sites on a single Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adding Caching&lt;/li&gt;
&lt;li&gt;Integrating S3 on AWS to store Static Files and Media Files&lt;/li&gt;
&lt;li&gt;Migrate to Docker / Kubernetes  &lt;/li&gt;
&lt;/ul&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="series"></category></entry><entry><title>Django form filters</title><link href="https://www.ryancheley.com/django-form-filters.html" rel="alternate"></link><published>2021-01-23T12:00:00+01:00</published><updated>2021-01-23T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-23:/django-form-filters.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django Project for a while and one of the apps I have tracks candidates. These candidates have dates of a specific type.&lt;/p&gt;
&lt;p&gt;The models look like this:&lt;/p&gt;
&lt;h2&gt;Candidate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Candidate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;first_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="n"&gt;last_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="nb"&gt;resume&lt;/span&gt; = &lt;span class="n"&gt;models …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django Project for a while and one of the apps I have tracks candidates. These candidates have dates of a specific type.&lt;/p&gt;
&lt;p&gt;The models look like this:&lt;/p&gt;
&lt;h2&gt;Candidate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Candidate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;first_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="n"&gt;last_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="nb"&gt;resume&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;FileField&lt;/span&gt;(&lt;span class="n"&gt;storage&lt;/span&gt;=&lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;(), &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;cover_leter&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;FileField&lt;/span&gt;(&lt;span class="n"&gt;storage&lt;/span&gt;=&lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;(), &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;email_address&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;EmailField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;linkedin&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;github&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;rejected&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;BooleanField&lt;/span&gt;()
    &lt;span class="n"&gt;position&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;positions.Position&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;hired&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;BooleanField&lt;/span&gt;(&lt;span class="k"&gt;default&lt;/span&gt;=&lt;span class="nb"&gt;False&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;CandidateDate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;candidate&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;Candidate&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;date_type&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;CandidateDateType&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;candidate_date&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;DateField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;candidate_date_note&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;TextField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;meeting_link&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Meta:&lt;/span&gt;
        &lt;span class="n"&gt;ordering&lt;/span&gt; = [&lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;-candidate_date&amp;quot;&lt;/span&gt;]
        &lt;span class="n"&gt;unique_together&lt;/span&gt; = (
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;date_type&amp;quot;&lt;/span&gt;,
        )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;CandidateDateType&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDateType&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;date_type&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;24&lt;/span&gt;)
    &lt;span class="n"&gt;description&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;255&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll see from the CandidateDate model that the fields &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;date_type&lt;/code&gt; are unique. One problem that I’ve been running into is how to help make that an easier thing to see in the form where the dates are entered.&lt;/p&gt;
&lt;p&gt;The Django built in validation will display an error message if a user were to try and select a &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;date_type&lt;/code&gt; that already existed, but it felt like this could be done better.&lt;/p&gt;
&lt;p&gt;I did a fair amount of Googling and had a couple of different &lt;em&gt;bright&lt;/em&gt; ideas, but ultimately it came down to a pretty simple implementation of the &lt;code&gt;exclude&lt;/code&gt; keyword in the ORM&lt;/p&gt;
&lt;p&gt;The initial &lt;code&gt;Form&lt;/code&gt; looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDateForm&lt;/span&gt;(&lt;span class="n"&gt;ModelForm&lt;/span&gt;):
   &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Meta:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; = &lt;span class="n"&gt;CandidateDate&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; = [
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;date_type&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;candidate_date&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;meeting_link&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;candidate_date_note&amp;quot;&lt;/span&gt;,
        ]
        &lt;span class="n"&gt;widgets&lt;/span&gt; = {
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;: &lt;span class="n"&gt;HiddenInput&lt;/span&gt;,
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I updated it to include a &lt;code&gt;__init__&lt;/code&gt; method which overrode the options in the drop down.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def __init__(self, *args, **kwargs):
    super(CandidateDateForm, self).__init__(*args, **kwargs)
    try:
        candidate = kwargs[&amp;quot;initial&amp;quot;][&amp;quot;candidate&amp;quot;]
        candidate_date_set = CandidateDate.objects.filter(candidate=candidate).values_list(&amp;quot;date_type&amp;quot;, flat=True)
        qs = CandidateDateType.objects.exclude(id__in=candidate_date_set)
        self.fields[&amp;quot;date_type&amp;quot;].queryset = qs
    except KeyError:
        pass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, with this method the drop down will only show items which can be selected, not all &lt;code&gt;CandidateDateType&lt;/code&gt; options.&lt;/p&gt;
&lt;p&gt;Seems like a better user experience AND I got to learn a bit about the Django ORM&lt;/p&gt;</content><category term="Django"></category><category term="filters"></category><category term="forms"></category></entry><entry><title>Using different .env files</title><link href="https://www.ryancheley.com/using-different-env-files.html" rel="alternate"></link><published>2021-01-16T14:53:00+01:00</published><updated>2021-01-16T14:53:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-16:/using-different-env-files.html</id><summary type="html">&lt;p&gt;In a Django project I’m working on I use a library called &lt;code&gt;Django-environ&lt;/code&gt; which&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;allows you to utilize 12factor inspired environment variables to configure your Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s a pretty sweet library as well. You create a .env file to store your variable that you don’t want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a Django project I’m working on I use a library called &lt;code&gt;Django-environ&lt;/code&gt; which&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;allows you to utilize 12factor inspired environment variables to configure your Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s a pretty sweet library as well. You create a .env file to store your variable that you don’t want in a public repo for your &lt;code&gt;settings.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The big issue I have is that my &lt;code&gt;.env&lt;/code&gt; file for my local development isn’t what I want on my production server (obviously ... never set &lt;code&gt;DEBIG=True&lt;/code&gt; in production!)&lt;/p&gt;
&lt;p&gt;I had tried to use a different &lt;code&gt;.env&lt;/code&gt; file using an assortment of methods, but to no avail. And the documentation wasn’t much of a help for using Multiple env file&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is possible to have multiple env files and select one using environment variables.&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;ENV_PATH=other-env ./manage.py runserver&lt;/code&gt; uses &lt;code&gt;other-env&lt;/code&gt; while &lt;code&gt;./manage.py runserver&lt;/code&gt; uses &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But there’s no example about how to actually set that up 🤦🏻‍♂️^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^.&lt;/p&gt;
&lt;p&gt;In fact, this bit in the documentation reminded me of this&lt;a href="https://youtu.be/MAlSjtxy5ak" title="Every Programming Tutorial"&gt;video&lt;/a&gt; on YouTube.&lt;/p&gt;
&lt;p&gt;Instead of trying to figure out the use of multiple &lt;code&gt;.env&lt;/code&gt; files I instead used a &lt;a href="https://github.com/casey/just"&gt;just&lt;/a&gt; recipe in my &lt;code&gt;justfile&lt;/code&gt; to get the job done.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="nv"&gt;checks&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;deployment&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;prod&lt;/span&gt; &lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="c1"&gt;; will return error if the check doesn&amp;#39;t pass&lt;/span&gt;
&lt;span class="nv"&gt;check&lt;/span&gt;:
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_staging&lt;/span&gt;
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_prod&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;python&lt;/span&gt; &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt; &lt;span class="nv"&gt;check&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;deploy&lt;/span&gt;
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_staging&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK. What does this recipe do?&lt;/p&gt;
&lt;p&gt;First, we copy the development &lt;code&gt;.env&lt;/code&gt; file to a &lt;code&gt;.env_staging&lt;/code&gt; file to keep the original development settings ‘somewhere’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; cp core/.env core/.env_staging
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we copy the &lt;code&gt;.env_prod&lt;/code&gt; to the &lt;code&gt;.env&lt;/code&gt; so that we can use it when we run &lt;code&gt;-python manage.py check --deploy&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp core/.env_prod core/.env
-python manage.py check --deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Why do we use the &lt;code&gt;-&lt;/code&gt;? That allows the &lt;code&gt;justfile&lt;/code&gt; to keep going if it runs into an error. Since we’re updating our main &lt;code&gt;.env&lt;/code&gt; file I want to make sure it gets restored to its original state … just in case!&lt;/p&gt;
&lt;p&gt;Finally, we copy the original contents of the &lt;code&gt;.env&lt;/code&gt; file from the &lt;code&gt;.env_staging&lt;/code&gt; back to the &lt;code&gt;.env&lt;/code&gt; to restore it to its development settings.&lt;/p&gt;
&lt;p&gt;Now, I can simply run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;just check
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I’ll know if I have passed the 12 factor checking for my Django project or somehow introduced something that makes the check not pass.&lt;/p&gt;
&lt;p&gt;I’d like to figure out how to set up multiple &lt;code&gt;.env&lt;/code&gt; files, create an example and contribute to the docs ... but honestly I have &lt;em&gt;no freaking clue&lt;/em&gt; how to do it. If I am able to figure it out, you can bet I’m going to write up a PR for the docs!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[I’d like to figure out how to set up multiple &lt;code&gt;.env&lt;/code&gt; files, create an example and contribute to the docs ... but honestly I have &lt;em&gt;no freaking clue&lt;/em&gt; how to do it. If I am able to figure it out, you can bet I’m going to write up a PR for the docs! &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="DevOps"></category><category term="JustFile"></category></entry><entry><title>Logging in a Django App</title><link href="https://www.ryancheley.com/logging-in-a-django-app.html" rel="alternate"></link><published>2020-10-21T17:39:00+02:00</published><updated>2020-10-21T17:39:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-10-21:/logging-in-a-django-app.html</id><summary type="html">&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-ADMINS"&gt;Django Documentation&lt;/a&gt; you can set up&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A list of all the people who get code error notifications. When DEBUG=False and AdminEmailHandler is configured in LOGGING (done by default), Django emails these people the details of exceptions raised in the request/response cycle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to set this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-ADMINS"&gt;Django Documentation&lt;/a&gt; you can set up&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A list of all the people who get code error notifications. When DEBUG=False and AdminEmailHandler is configured in LOGGING (done by default), Django emails these people the details of exceptions raised in the request/response cycle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to set this up you need to include in your &lt;code&gt;settings.py&lt;/code&gt; file something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ADMINS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;
&lt;span class="n"&gt;    (&amp;#39;John&amp;#39;, &amp;#39;john@example.com&amp;#39;), &lt;/span&gt;
&lt;span class="n"&gt;    (&amp;#39;Mary&amp;#39;, &amp;#39;mary@example.com&amp;#39;)&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The difficulties I always ran into were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to set up the AdminEmailHandler&lt;/li&gt;
&lt;li&gt;How to set up a way to actually email from the Django Server  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Again, per the &lt;a href="https://docs.djangoproject.com/en/3.1/topics/logging/#django.utils.log.AdminEmailHandler" title="AdminEmailHandler"&gt;Django Documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Django provides one log handler in addition to those provided by the Python logging module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reading through the documentation didn’t &lt;strong&gt;really&lt;/strong&gt; help me all that much. The docs show the following example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;#39;handlers&amp;#39;: {
    &amp;#39;mail_admins&amp;#39;: {
        &amp;#39;level&amp;#39;: &amp;#39;ERROR&amp;#39;,
        &amp;#39;class&amp;#39;: &amp;#39;django.utils.log.AdminEmailHandler&amp;#39;,
        &amp;#39;include_html&amp;#39;: True,
    }
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s great, but there’s not a direct link (that I could find) to the example of how to configure the logging in that section. It is instead at the &lt;strong&gt;VERY&lt;/strong&gt; bottom of the documentation page in the Contents section in the &lt;a href="https://docs.djangoproject.com/en/3.1/topics/logging/#configuring-logging"&gt;Configured logging &gt; Examples&lt;/a&gt; section ... and you &lt;em&gt;really&lt;/em&gt; need to know that you have to look for it!&lt;/p&gt;
&lt;p&gt;The important thing to do is to include the above in the appropriate &lt;code&gt;LOGGING&lt;/code&gt; setting, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGGING = {
    &amp;#39;version&amp;#39;: 1,
    &amp;#39;disable_existing_loggers&amp;#39;: False,
    &amp;#39;handlers&amp;#39;: {
        &amp;#39;mail_admins&amp;#39;: {
            &amp;#39;level&amp;#39;: &amp;#39;ERROR&amp;#39;,
            &amp;#39;class&amp;#39;: &amp;#39;django.utils.log.AdminEmailHandler&amp;#39;,
            &amp;#39;include_html&amp;#39;: True,
        }
       },
    },
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Sending an email with Logging information&lt;/h2&gt;
&lt;p&gt;We’ve got the logging and it will be sent via email, but there’s no way for the email to get sent out yet!&lt;/p&gt;
&lt;p&gt;In order to accomplish this I use &lt;a href="https://sendgrid.com" title="SendGrid"&gt;SendGrid&lt;/a&gt;. No real reason other than that’s what I’ve used in the past.&lt;/p&gt;
&lt;p&gt;There are &lt;a href="https://sendgrid.com/docs/for-developers/sending-email/django/" title="Django and SendGrid Tutorials"&gt;great tutorials online&lt;/a&gt; for how to get SendGrid integrated with Django, so I won’t rehash that here. I’ll just drop my the settings I used in my &lt;code&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SENDGRID_API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SENDGRID_API_KEY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;EMAIL_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;smtp.sendgrid.net&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apikey&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SENDGRID_API_KEY&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_USE_TLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One final thing I needed to do was to update the email address that was being used to send the email. By default it uses &lt;code&gt;root@localhost&lt;/code&gt; which isn’t ideal.&lt;/p&gt;
&lt;p&gt;You can override this by setting&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SERVER_EMAIL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myemail&lt;/span&gt;&lt;span class="nv"&gt;@mydomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With those three settings, everything should just work.&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="django"></category></entry><entry><title>Writing a Raffle Script</title><link href="https://www.ryancheley.com/writing-a-raffle-script.html" rel="alternate"></link><published>2020-06-29T05:24:00+02:00</published><updated>2020-06-29T05:24:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-06-29:/writing-a-raffle-script.html</id><summary type="html">&lt;p&gt;Due to the COVID Pandemic, many things are ... different. One thing that needed to be different this year was the way that students at my daughters middle school got to spend their ‘Hero Points’.&lt;/p&gt;
&lt;p&gt;Hero Points are points earned for good behavior. In a typical year the students would get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Due to the COVID Pandemic, many things are ... different. One thing that needed to be different this year was the way that students at my daughters middle school got to spend their ‘Hero Points’.&lt;/p&gt;
&lt;p&gt;Hero Points are points earned for good behavior. In a typical year the students would get to spend them at the student store, but with all of the closures, this wasn’t possible. For the students in my daughter’s 8th grade this was a big deal as they’re going on to High School next year, so we can just roll them over to next year!&lt;/p&gt;
&lt;p&gt;Instead of having the kids ‘spend’ their Hero Points the PTO offered up the solution of a raffle based on the number of Hero Points they had. But they weren’t sure how to do it.&lt;/p&gt;
&lt;p&gt;I jumped at the chance to write something like this up (especially after all of my works on the PyBites &lt;a href="https://codechalleng.es" title="CodeChalleng.es"&gt;CodeChalleng.es&lt;/a&gt; platform) and so my wife volunteered me 😁&lt;/p&gt;
&lt;p&gt;In order to really get my head wrapped around the problem, I wanted to treat my solution like a real world analog. For example, in a real work raffle, when you get your tickets, there are two tickets with the same number. One that you get to hold onto, and one that goes into a bowl (or other vessel) that is randomly drawn from.&lt;/p&gt;
&lt;p&gt;How many tickets?&lt;/p&gt;
&lt;p&gt;Each student had some number of Hero Points. The PTO decided that 10 Hero Points would equal 1 Raffle ticket. Further, it was decided that we would ALWAYS round up. This means that 1 Hero Point would equal 1 Raffle Ticket, but that 9 Hero Points would also equal 1 Raffle Ticket.&lt;/p&gt;
&lt;h2&gt;Create tickets&lt;/h2&gt;
&lt;p&gt;I decided to use a &lt;code&gt;namedtuple&lt;/code&gt; to store the Raffle Tickets. Specifically, I store the student name, ticket numbers they drew, and the number of tickets they have&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Raffle_Tickets = namedtuple(&amp;#39;Raffle_Tickets&amp;#39;, [&amp;#39;name&amp;#39;, &amp;#39;ticket_numbers&amp;#39;, &amp;#39;tickets&amp;#39;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The list of student names and total Hero Points was stored in an Excel File (.xlsx) so I decided to use the Pandas Package to import it and manipulate it into a dataframe. The structure of the excel file is: Student Name, Grade, Available Points.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;df = pd.read_excel (r&amp;#39;/Users/ryan/Documents/python-files/8th  Hero Points.xlsx&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After a bit of review it turned out that there were a couple of students with NEGATIVE Hero Points. I’m not really sure how that happened, but I was not properly accounting for that originally, so I had to update my dataframe.&lt;/p&gt;
&lt;p&gt;The code below filters the dataframe to only return students with positive ‘Available Points’ and then reindex. Finally, it calculates the number of Raffle tickets by dividing by 10 and rounding up using Python’s &lt;code&gt;ceil&lt;/code&gt; function. It puts all of this into a list called &lt;code&gt;tickets&lt;/code&gt;. We append our &lt;code&gt;tickets&lt;/code&gt; list to the original dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Available Points&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;]
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;reset_index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;, &lt;span class="nv"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Available Points&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;:
    &lt;span class="nv"&gt;tickets&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ceil&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Tickets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;tickets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Our dataframe now looks like this: Student Name, Grade, Available Points, Tickets.&lt;/p&gt;
&lt;p&gt;Next, we need to figure out the Raffle ticket numbers. To do that I count the total number of Tickets available. I’m also using some extra features of the range function which allows me to set the start number of the Raffle.^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Tickets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ticket_number_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;
&lt;span class="nv"&gt;ticket_number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;range&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ticket_number_start&lt;/span&gt;, &lt;span class="nv"&gt;ticket_number_start&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;ticket_number_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once we have the list of ticket numbers I want to make a copy of it … remember there are two tickets, one that goes in the bowl and one that the student ‘gets’. Extending the metaphor of having two different, but related, tickets, I decided to use the &lt;code&gt;deepcopy&lt;/code&gt; function on the &lt;code&gt;ticket_number_list&lt;/code&gt; to create a list called &lt;code&gt;assigned_ticket_number_list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For more on deepcopy versus (shallow) copy &lt;a href="https://docs.python.org/3/library/copy.html" title="Deepcopy"&gt;see the documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, I reindex the dataframe just to add a bit more randomness to the list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;reindex&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;np&lt;/span&gt;.&lt;span class="k"&gt;random&lt;/span&gt;.&lt;span class="nv"&gt;permutation&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Assign Tickets&lt;/h2&gt;
&lt;p&gt;Next we’ll assign the tickets randomly to the students.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;raffle_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tickets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;raffle_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Raffle_Tickets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … the code above looks pretty dense, but basically all we’re doing is looping through the students to determine the number of tickets they each have. Once we have that we loop through the available ticket numbers and randomly assign it to the student. At the end we add a &lt;code&gt;namedtuple&lt;/code&gt; object called &lt;code&gt;Raffle_Tickets&lt;/code&gt; that we defined above to the raffle_list to store the student’s name, their ticket numbers, and the number of tickets that they received.&lt;/p&gt;
&lt;h2&gt;Draw Tickets&lt;/h2&gt;
&lt;p&gt;Now we want to ‘draw’ the tickets from the ‘bowl’. We want to select 25 winners, but we also don’t want to have any student win more than once. Honestly, the ’25 winning tickets with 25 distinct winners’ was the hardest part to get through.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;selected_tickets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number_index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number_index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;raffle_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;ticket_numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x for x in ticket_number_list if x not in r.ticket_numbers&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_tickets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We see above that we’ll select 25 items from the ‘bowl’ of tickets. We select the tickets one at a time. For each ticket we determine what set of tickets that selected ticket is in. Once we know that, we then remove &lt;strong&gt;all&lt;/strong&gt; tickets associated with that winning ticket so that we can guarantee 25 unique winners.&lt;/p&gt;
&lt;h2&gt;Find the Winners&lt;/h2&gt;
&lt;p&gt;We now have 25 tickets with 25 winners. Now we just need to get their names!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;winners_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;[]
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;raffle_list&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;ticket_numbers&lt;/span&gt;:
        &lt;span class="nv"&gt;student_winning_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;selected_tickets&lt;/span&gt;:
            &lt;span class="nv"&gt;student_winning_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;winners_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;Raffle_Tickets&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;student_winning_list&lt;/span&gt;, &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;student_winning_list&lt;/span&gt;&lt;span class="ss"&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, we construct a list of &lt;code&gt;namedtuple&lt;/code&gt; &lt;code&gt;Raffle\_Tickets&lt;/code&gt; only this time it’s just the winners.&lt;/p&gt;
&lt;h2&gt;Output winners&lt;/h2&gt;
&lt;p&gt;Whew! Now that we have the results we want to write them to a file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/ryan/PyBites/Raffle/winners_new.txt&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;w+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;winner&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;winners_list&lt;/span&gt;:
        &lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ticket_count&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;winner&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;percent_chance_of_winning&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
        &lt;span class="nv"&gt;percent_chance_of_winning_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;{:.2f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;percent_chance_of_winning&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{winner.name} with winning ticket {winner.ticket_numbers[0]}. They had {tickets} tickets and a {percent_chance_of_winning_string}% chance of winning.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One of the reasons that I stored the number of tickets above was so that we could see what the chance was of a student winning given the number of tickets they started with.&lt;/p&gt;
&lt;p&gt;For each student we output to a line to a file with the student’s name, the winning tickets number, the number of tickets they started with and their chance of winning (the ratio of tickets the student had to the total number of starting tickets)&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This was a fun project for me because it was needed for a real world application, allowed me to use MANY of the concepts I learned at PyBites &lt;a href="https://codechalleng.es"&gt;CodeChalleng.es&lt;/a&gt; AND helped my daughter’s school.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Why am I doing this, versus just stating a &lt;code&gt;0&lt;/code&gt;? Mostly because I wanted the Raffle Ticket numbers to look like &lt;em&gt;real&lt;/em&gt; Raffle Ticket Numbers. How many times have you seen a raffle ticket with number 0 on it? &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="PyBites"></category><category term="python"></category></entry><entry><title>Issues with psycopg2 … again</title><link href="https://www.ryancheley.com/issues-with-psycopg2-again.html" rel="alternate"></link><published>2020-05-03T14:00:00+02:00</published><updated>2020-05-03T14:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-05-03:/issues-with-psycopg2-again.html</id><summary type="html">&lt;p&gt;In a &lt;a href="/mischief-managed/"&gt;previous post&lt;/a&gt; I had written about an issue I’d had with upgrading, installing, or just generally maintaining the python package &lt;code&gt;psycopg2&lt;/code&gt; (&lt;a href="https://www.psycopg.org"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I ran into that issue again today, and thought to myself, “Hey, I’ve had this problem before AND wrote something up about it. Let …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a &lt;a href="/mischief-managed/"&gt;previous post&lt;/a&gt; I had written about an issue I’d had with upgrading, installing, or just generally maintaining the python package &lt;code&gt;psycopg2&lt;/code&gt; (&lt;a href="https://www.psycopg.org"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I ran into that issue again today, and thought to myself, “Hey, I’ve had this problem before AND wrote something up about it. Let me go see what I did last time.”&lt;/p&gt;
&lt;p&gt;I searched my site for &lt;code&gt;psycopg2&lt;/code&gt; and tried the solution, but I got the same &lt;a href="https://thegoodplace.fandom.com/wiki/Censored_Curse_Words"&gt;forking&lt;/a&gt; error.&lt;/p&gt;
&lt;p&gt;OK … let’s turn to the experts on the internet.&lt;/p&gt;
&lt;p&gt;After a while I came across &lt;a href="https://stackoverflow.com/questions/26288042/error-installing-psycopg2-library-not-found-for-lssl"&gt;this&lt;/a&gt; article on StackOverflow but this &lt;a href="https://stackoverflow.com/a/56146592"&gt;specific answer&lt;/a&gt; helped get me up and running.&lt;/p&gt;
&lt;p&gt;A side effect of all of this is that I upgraded from Python 3.7.5 to Python 3.8.1. I also updated all of my brew packages, and basically did a lot of cleaning up that I had neglected.&lt;/p&gt;
&lt;p&gt;Not how I expected to spend my morning, but productive nonetheless.&lt;/p&gt;</content><category term="Python"></category><category term="package"></category><category term="python"></category></entry><entry><title>My First Django Project</title><link href="https://www.ryancheley.com/my-first-django-project.html" rel="alternate"></link><published>2020-05-02T14:43:00+02:00</published><updated>2020-05-02T14:43:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-05-02:/my-first-django-project.html</id><summary type="html">&lt;p&gt;I've been writing code for about 15 years (on and off) and Python for about 4 or 5 years. With Python it's mostly small scripts and such. I’ve never considered myself a ‘real programmer’ (Python or otherwise).&lt;/p&gt;
&lt;p&gt;About a year ago, I decided to change that (for Python at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been writing code for about 15 years (on and off) and Python for about 4 or 5 years. With Python it's mostly small scripts and such. I’ve never considered myself a ‘real programmer’ (Python or otherwise).&lt;/p&gt;
&lt;p&gt;About a year ago, I decided to change that (for Python at the very least) when I set out to do &lt;a href="https://training.talkpython.fm/courses/details/100-days-of-web-in-python"&gt;100 Days Of Web in Python&lt;/a&gt; from &lt;a href="https://talkpython.fm/home"&gt;Talk Python To Me&lt;/a&gt;. Part of that course were two sections taught by &lt;a href="https://pybit.es/author/bob.html"&gt;Bob&lt;/a&gt; regarding &lt;a href="https://www.djangoproject.com"&gt;Django&lt;/a&gt;. I had tried learn &lt;a href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt; before and found it ... overwhelming to say the least.&lt;/p&gt;
&lt;p&gt;Sure, you could get a ‘hello world’ app in 5 lines of code, but then what? If you wanted to do just about anything it required ‘something’ else.&lt;/p&gt;
&lt;p&gt;I had tried Django before, but wasn't able to get over the 'hump' of deploying. Watching the Django section in the course made it just click for me. Finally, a tool to help me make AND deploy something! But what?&lt;/p&gt;
&lt;h2&gt;The Django App I wanted to create&lt;/h2&gt;
&lt;p&gt;A small project I had done previously was to write a short &lt;a href="https://github.com/ryancheley/itfdb"&gt;script&lt;/a&gt; for my Raspberry Pi to tell me when LA Dodger (Baseball) games were on (it also has beloved Dodger Announcer &lt;a href="https://en.wikipedia.org/wiki/Vin_Scully"&gt;Vin Scully&lt;/a&gt; say his catch phrase, “It’s time for Dodger baseball!!!”).&lt;/p&gt;
&lt;p&gt;I love the Dodgers. But I also love baseball. I love baseball so much I have on my bucket list a trip to visit all 30 MLB stadia. Given my love of baseball, and my new found fondness of Django, I thought I could write something to keep track of visited stadia. I mean, how hard could it &lt;em&gt;really&lt;/em&gt; be?&lt;/p&gt;
&lt;h2&gt;What does it do?&lt;/h2&gt;
&lt;p&gt;My Django Site uses the &lt;a href="https://statsapi.mlb.com"&gt;MLB API&lt;/a&gt; to search for games and allows a user to indicate a game seen in person. This allows them to track which stadia you've been to. My site is composed of 4 apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;Content&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;Stadium Tracker  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The API is written using &lt;a href="https://www.django-rest-framework.org"&gt;Django Rest Framework (DRF)&lt;/a&gt; and is super simple to implement. It’s also &lt;a href="/updating-the-models-for-my-django-rest-framework-api/"&gt;really easy to changes to your models if you need to&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Users app was inspired by &lt;a href="https://wsvincent.com"&gt;Will S Vincent&lt;/a&gt; ( a member of the &lt;a href="https://www.djangoproject.com/foundation/"&gt;Django Software Foundation&lt;/a&gt;, author, and &lt;a href="https://djangochat.com"&gt;podcaster&lt;/a&gt;). He (and others) recommend creating a custom user model to more easily extend the User model later on. Almost all of what’s in my Users App is directly taken from his recommendations.&lt;/p&gt;
&lt;p&gt;The Content App was created to allow me to update the &lt;a href="https://stadium-tracker-api.herokuapp.com"&gt;home page&lt;/a&gt;, and &lt;a href="https://stadium-tracker-api.herokuapp.com/Pages/About"&gt;about page&lt;/a&gt; (and any other content based page) using the database instead of updating html in a template.&lt;/p&gt;
&lt;p&gt;The last App, and the reason for the site itself, is the Stadium Tracker! I created a search tool that allows a user to find a game on a specific day between two teams. Once found, the user can add that game to ‘Games Seen’. This will then update the list of games seen for that user AND mark the location of the game as a stadium visited. The best part is that because the game is from the MLB API I can do some interesting things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I can get the actual stadium from visited which allows the user to indicate historic (i.e. retired) stadia&lt;/li&gt;
&lt;li&gt;I can get details of the game (final score, hits, runs, errors, stories from MLB, etc) and display them on a details page.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's great and all, but what does it look like?&lt;/p&gt;
&lt;h3&gt;The Search Tool&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-440" src="/images/uploads/2020/05/add-a-game.png"&gt;&lt;/p&gt;
&lt;h3&gt;Stadia Listing&lt;/h3&gt;
&lt;h4&gt;National League West&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-439" src="/images/uploads/2020/05/visited-stadia-nl-west.png"&gt;&lt;/p&gt;
&lt;h4&gt;American League West&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-438" src="/images/uploads/2020/05/visited-stadia-al-west.png"&gt;&lt;/p&gt;
&lt;h2&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;I had created a roadmap at one point and was able to get through some (but not all) of those items. Items left to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get Test coverage to at least 80% across the app (currently sits at 70%)&lt;/li&gt;
&lt;li&gt;Allow users to be based on social networks (right now I’m looking at Twitter, and Instagram) probably with the &lt;a href="https://django-allauth.readthedocs.io/en/latest/installation.html"&gt;Django Allauth Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add ability to for minor league team search and stadium tracking (this is already part of the MLB API, I just never implemented it)&lt;/li&gt;
&lt;li&gt;Allow user to search for range of dates for teams&lt;/li&gt;
&lt;li&gt;Update the theme ... it’s the default MUI CSS which is nice, but I’d rather it was something a little bit different&lt;/li&gt;
&lt;li&gt;Convert Swagger implementation from &lt;code&gt;django-rest-swagger&lt;/code&gt; to &lt;code&gt;drf-yasg&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;Writing this app did several things for me.&lt;/p&gt;
&lt;p&gt;First, it removed some of the tutorial paralysis that I felt. Until I wrote this I didn’t think I was a web programmer (and I still don’t really), and therefore had no business writing a web app.&lt;/p&gt;
&lt;p&gt;Second, it taught me how to use git more effectively. This directly lead to me &lt;a href="/my-first-commit-to-an-open-source-project-django.html"&gt;contributing to Django itself&lt;/a&gt; (in a very small way via updates to documentation). It also allowed me to feel comfortable enough to write my first post on &lt;a href="https://pybit.es/using-python-to-check-for-file-changes-in-excel.html"&gt;this very blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, it introduced me to the wonderful ecosystem around Django. There is so much to learn, but the great thing is that EVERYONE is learning something. There isn’t anyone that knows it all which makes it easier to ask questions! And helps me in feeling more confident to answer questions when asked.&lt;/p&gt;
&lt;p&gt;The site is deployed on &lt;a href="https://www.heroku.com"&gt;Heroku&lt;/a&gt; and can be seen &lt;a href="https://stadium-tracker-api.herokuapp.com"&gt;here&lt;/a&gt;. The code for the site can be seen &lt;a href="https://github.com/ryancheley/StadiumTrackerAPIPublic"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article was also posted on the &lt;a href="https://pybit.es/my-first-django-app.html"&gt;PyBit.es Blog&lt;/a&gt;&lt;/p&gt;</content><category term="Django"></category><category term="doing"></category><category term="python"></category></entry><entry><title>Using Python to Check for File Changes in Excel</title><link href="https://www.ryancheley.com/using-python-to-check-for-file-changes-in-excel.html" rel="alternate"></link><published>2020-03-28T13:49:00+01:00</published><updated>2020-03-28T13:49:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-03-28:/using-python-to-check-for-file-changes-in-excel.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Data exchange in healthcare is ... harder than it needs to be. Not all partners in the healthcare arena understand and use technology to its fullest benefit.&lt;/p&gt;
&lt;p&gt;Take for example several health plans which want data reported to them for CMS (Centers for Medicare and Medicaid Services) regulations. They …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Data exchange in healthcare is ... harder than it needs to be. Not all partners in the healthcare arena understand and use technology to its fullest benefit.&lt;/p&gt;
&lt;p&gt;Take for example several health plans which want data reported to them for CMS (Centers for Medicare and Medicaid Services) regulations. They will ask their 'delegated' groups to fill out an excel file. As in, they expect you will &lt;em&gt;actually&lt;/em&gt; fill out an excel file, either by manually entering the data OR by potentially copying and pasting your data into their excel file.&lt;/p&gt;
&lt;p&gt;They will also, quite frequently, change their mind on what they want AND the order in which they want the data to appear in their excel file. But there's no change log to tell you what (if anything has changed). All that you will get is an email which states, "Here's the new template to be used for report XYZ" ... even if this 'new' report is the same as the last one that was sent.&lt;/p&gt;
&lt;p&gt;Some solutions might be to use versioning software (like Git) but all they will do is tell you that there is a difference, not &lt;em&gt;what&lt;/em&gt; the difference is. For example, when looking at a simple excel file added to git and using &lt;code&gt;git diff&lt;/code&gt; you see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Book3.xlsx b/Book3.xlsx&lt;/span&gt;
&lt;span class="gh"&gt;index 05a8b41..e96cdb5 100644&lt;/span&gt;
Binary files a/Book3.xlsx and b/Book3.xlsx differ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This has been a giant pain in the butt for a while, but with the recent shelter-in-place directives, I have a bit more time on the weekends to solve these kinds of problems.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Why Python of Course!&lt;/p&gt;
&lt;p&gt;Only two libraries are needed to make the comparison: (1) os, (2) pandas&lt;/p&gt;
&lt;p&gt;The basic idea is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load the files&lt;/li&gt;
&lt;li&gt;use pandas to compare the files&lt;/li&gt;
&lt;li&gt;write out the differences, if they exist  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Load the Files&lt;/h3&gt;
&lt;p&gt;The code below loads the necessary libraries, and then loads the excel files into 2 pandas dataframes. One thing that my team has to watch out for are tab names that have leading spaces that aren't easy to see inside of excel. This can cause all sorts of nightmares from a troubleshooting perspective.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;file_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\\&lt;span class="n"&gt;path&lt;/span&gt;\\&lt;span class="n"&gt;to&lt;/span&gt;\\&lt;span class="n"&gt;original&lt;/span&gt;\\&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;original_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlsx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;file_new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\\&lt;span class="n"&gt;path&lt;/span&gt;\\&lt;span class="n"&gt;to&lt;/span&gt;\\&lt;span class="n"&gt;new&lt;/span&gt;\\&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlsx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sheet_name_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_of_sheet_in_original_file&lt;/span&gt;
&lt;span class="n"&gt;sheet_name_new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_of_sheet_in_new_file&lt;/span&gt;

&lt;span class="n"&gt;df1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_original&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet_name_original&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet_name_new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Use Pandas to compare&lt;/h3&gt;
&lt;p&gt;This is just a one liner, but is super powerful. Pandas DataFrames have a method to see if two frames are the same. So easy!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;data_frame_same = df1.equals(df2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Write out the differences if they exist:&lt;/h3&gt;
&lt;p&gt;First we specify where we're going to write out the differences to. We use &lt;code&gt;w+&lt;/code&gt; because we'll be writing out to a file AND potentially appending, depending on differences that are found. The &lt;code&gt;f.truncate(0)&lt;/code&gt; will clear out the file so that we get just the differences on this run. If we don't do this then we'll just append to the file over and over again ... and that can get confusing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;f.open(\\path\\to\\file\\to\\write\\differences.txt, &amp;#39;w+&amp;#39;)
f.truncate(0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we check to see if there are any differences and if they are, we write a simple message to our text file from above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;data_frame_same&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;No differences detected&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If differences are found, then we loop through the lines of the file, finding the differences and and writing them to our file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*** WARNING *** Differences Found\n\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;header1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;header2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;header1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;header2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Headers are the same: {header1}\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Difference Found: {header1} -&amp;gt; {header2}\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ow"&gt;except&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above finds the largest column header list (the file may have had a new column added) and uses a &lt;code&gt;try/except&lt;/code&gt; to let us get the max of that to loop over.&lt;/p&gt;
&lt;p&gt;Next, we check for differences between &lt;code&gt;header1&lt;/code&gt; and &lt;code&gt;header2&lt;/code&gt;. If they are the same, we just write that out, if they aren't, we indicate that &lt;code&gt;header1&lt;/code&gt; was transformed to &lt;code&gt;header2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A sample of the output when the column headers have changed is below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="n"&gt;WARNING&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="n"&gt;Differences&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;

&lt;span class="n"&gt;Headers&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;beneficiary&lt;/span&gt; &lt;span class="kr"&gt;first&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Difference&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Future Enhancements&lt;/h2&gt;
&lt;p&gt;In just using it a couple of times I've already spotted a couple of spots for enhancements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use &lt;code&gt;input&lt;/code&gt; to allow the user to enter the names/locations of the files&lt;/li&gt;
&lt;li&gt;Read the tab names and allow user to select from command line  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I'm looking forward to implementing the enhancements mentioned above to make this even more user friendly. In the mean time, it'll get the job done and allow someone on my team to work on something more interesting then comparing excel files to try (and hopefully find) differences.&lt;/p&gt;</content><category term="Python"></category><category term="excel"></category><category term="os"></category><category term="pandas"></category><category term="python"></category></entry><entry><title>Getting asked for Advice on being a Data Analyst</title><link href="https://www.ryancheley.com/getting-asked-for-advice-on-being-a-data-analyst.html" rel="alternate"></link><published>2020-02-15T15:14:00+01:00</published><updated>2020-02-15T15:14:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-02-15:/getting-asked-for-advice-on-being-a-data-analyst.html</id><summary type="html">&lt;p&gt;I got a message on LinkedIn from a former colleague of my from &lt;a href="https://azprioritycare.com"&gt;Arizona Priority Care&lt;/a&gt; asking me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wanted to pick your brain on something. what do you think the outlook is for a data analyst? Debating a masters program in that and covers a few things but also includes …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I got a message on LinkedIn from a former colleague of my from &lt;a href="https://azprioritycare.com"&gt;Arizona Priority Care&lt;/a&gt; asking me:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wanted to pick your brain on something. what do you think the outlook is for a data analyst? Debating a masters program in that and covers a few things but also includes certifications in SAS. Trying to decide if that will “pay off” in the long run or if I should explore different disciplines.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was a &lt;strong&gt;really&lt;/strong&gt; good question and I thought about it a bit. My response was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think Data Analysis (or Data Science, or Analytics) are all going to play a huge role in business going forward and that it would be a smart move to get a masters degree in one of those. I would avoid any certification programs though, just because they can be less rigorous and don’t seem to have the same weight as a full degree.&lt;/p&gt;
&lt;p&gt;SAS is an interesting language, but I’d investigate what companies use SAS and make sure that you’d like to work for them (or in the industry). Many companies are turning towards open source Data Analytics tools (like R and Python). But in general, don’t get too hung up on the tool (SAS, Python, R) but really understand what you’re doing with them. Why would I choose this Standard Regression over Two Stage Least Squares. When do I wan to use a Logistics regression model and why. What does the output tell me, and what is it missing.&lt;/p&gt;
&lt;p&gt;Developing that understanding will allow you to really standout.&lt;/p&gt;
&lt;p&gt;Good luck with your decision. Let me know which direction you decide to go in,&lt;/p&gt;
&lt;p&gt;Best,&lt;/p&gt;
&lt;p&gt;Ryan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I hope that I was able to help my former colleague and was super happy that he reached out to me.&lt;/p&gt;
&lt;p&gt;I wanted to write this into a more public form just in case in helps someone, or just in case I look back on it at some point and it helps me.&lt;/p&gt;</content><category term="Musings"></category><category term="advice"></category></entry><entry><title>Mischief Managed</title><link href="https://www.ryancheley.com/mischief-managed.html" rel="alternate"></link><published>2020-02-10T05:36:00+01:00</published><updated>2020-02-10T05:36:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-02-10:/mischief-managed.html</id><summary type="html">&lt;p&gt;A few weeks back I decided to try and update my Python version with Homebrew. I had already been through an issue where the an update like this was going to cause an issue, but I also knew what the fix &lt;a href="/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew/" title="Homebrew and PyCharm don’t mix"&gt;was&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this knowledge in hand I happily performed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few weeks back I decided to try and update my Python version with Homebrew. I had already been through an issue where the an update like this was going to cause an issue, but I also knew what the fix &lt;a href="/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew/" title="Homebrew and PyCharm don’t mix"&gt;was&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this knowledge in hand I happily performed the update. To my surprise, 2 things happened:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The update seemed to have me go from Python 3.7.6 to 3.7.3&lt;/li&gt;
&lt;li&gt;When trying to reestablish my &lt;code&gt;Virtual Environment&lt;/code&gt; two packages wouldn’t installed: &lt;code&gt;psycopg2&lt;/code&gt; and &lt;code&gt;django-heroku&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, the update/backdate isn’t the end of the world. Quite honestly, next weekend I’m going to just ditch homebrew and go with the standard download from &lt;a href="https://www.python.org" title="Python"&gt;Python.org&lt;/a&gt; because I’m hoping that this non-sense won’t be an issue anymore&lt;/p&gt;
&lt;p&gt;The second issue was a bit more irritating though. I spent several hours trying to figure out what the problem was, only to find out, there wasn’t one really.&lt;/p&gt;
&lt;p&gt;The ‘fix’ to the issue was to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open PyCharm&lt;/li&gt;
&lt;li&gt;Go to Setting&lt;/li&gt;
&lt;li&gt;Go to ‘Project Interpreter’&lt;/li&gt;
&lt;li&gt;Click the ‘+’ to add a package&lt;/li&gt;
&lt;li&gt;Look for the package that wouldn’t install&lt;/li&gt;
&lt;li&gt;Click ‘Install Package’&lt;/li&gt;
&lt;li&gt;Viola ... &lt;a href="https://www.hp-lexicon.org/magic/mischief-managed/"&gt;mischief managed&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The next time this happens I’m just buying a new computer&lt;/p&gt;</content><category term="macOS"></category><category term="PyCharm"></category><category term="python"></category></entry><entry><title>CBV - PasswordChangeDoneView</title><link href="https://www.ryancheley.com/cbv-passwordchangedoneview.html" rel="alternate"></link><published>2019-12-25T10:00:00+01:00</published><updated>2019-12-25T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-25:/cbv-passwordchangedoneview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeDoneView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeDoneView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;template_name: Much like the &lt;code&gt;LogoutView&lt;/code&gt; the default view is the Django skin. Create your own &lt;code&gt;password_change_done.html&lt;/code&gt; file to keep the user experience consistent across the site.&lt;/li&gt;
&lt;li&gt;title: the default uses …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeDoneView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeDoneView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;template_name: Much like the &lt;code&gt;LogoutView&lt;/code&gt; the default view is the Django skin. Create your own &lt;code&gt;password_change_done.html&lt;/code&gt; file to keep the user experience consistent across the site.&lt;/li&gt;
&lt;li&gt;title: the default uses the function &lt;code&gt;gettext_lazy()&lt;/code&gt; and passes the string ‘Password change successful’. The function &lt;code&gt;gettext_lazy()&lt;/code&gt; will translate the text into the local language if a translation is available. I’d just keep the default on this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myPasswordChangeDoneView&lt;/span&gt;(&lt;span class="n"&gt;PasswordChangeDoneView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;password_change_done_view/&amp;#39;, views.myPasswordChangeDoneView.as_view(), name=&amp;#39;password_change_done_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;password_change_done.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password changed&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGIN_URL = &amp;#39;/&amp;lt;app_name&amp;gt;/login_view/&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above assumes that have this set up in your &lt;code&gt;urls.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Special Notes&lt;/h2&gt;
&lt;p&gt;You need to set the &lt;code&gt;URL_LOGIN&lt;/code&gt; value in your &lt;code&gt;settings.py&lt;/code&gt;. It defaults to &lt;code&gt;/accounts/login/&lt;/code&gt;. If that path isn’t valid you’ll get a 404 error.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;PasswordChangeDoneView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BPasswordContextMixin%7Bbg:white%7D%5D%5E-%5BPasswordChangeDoneView%7Bbg:green%7D%5D,%20%5BTemplateView%7Bbg:lightblue%7D%5D%5E-%5BPasswordChangeDoneView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Again, not much to do here. Let Django do all of the heavy lifting, but be mindful of the needed work in &lt;code&gt;settings.py&lt;/code&gt; and the new template you’ll need/want to create&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - PasswordChangeView</title><link href="https://www.ryancheley.com/cbv-passwordchangeview.html" rel="alternate"></link><published>2019-12-22T10:00:00+01:00</published><updated>2019-12-22T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-22:/cbv-passwordchangeview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;PasswordChangeForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;success_url: If you’ve created your own custom PasswordChangeDoneView then you’ll need to update this …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;PasswordChangeForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;success_url: If you’ve created your own custom PasswordChangeDoneView then you’ll need to update this. The default is to use Django’s but unless you have a top level &lt;code&gt;urls.py&lt;/code&gt; has the name of &lt;code&gt;password_change_done&lt;/code&gt; you’ll get an error.&lt;/li&gt;
&lt;li&gt;title: defaults to ‘Password Change’ and is translated into local language&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myPasswordChangeView&lt;/span&gt;(&lt;span class="n"&gt;PasswordChangeView&lt;/span&gt;):
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:password_change_done_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;password_change_view/&amp;#39;, views.myPasswordChangeView.as_view(), name=&amp;#39;password_change_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;password_change_form.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password changed&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;PasswordChangeView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BPasswordContextMixin%7Bbg:white%7D%5D%5E-%5BPasswordChangeView%7Bbg:green%7D%5D,%20%5BFormView%7Bbg:lightblue%7D%5D%5E-%5BPasswordChangeView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The only thing to keep in mind here is the success_url that will most likely need to be set based on the application you’ve written. If you get an error about not being able to use &lt;code&gt;reverse&lt;/code&gt; to find your template, that’s the issue.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>A beginners guide to Tableau Conference - 2019 edition</title><link href="https://www.ryancheley.com/a-beginners-guide-to-tableau-conference-2019-edition.html" rel="alternate"></link><published>2019-12-17T06:01:00+01:00</published><updated>2019-12-17T06:01:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-17:/a-beginners-guide-to-tableau-conference-2019-edition.html</id><summary type="html">&lt;p&gt;The &lt;a href="https://tc19.tableau.com"&gt;Tableau Conference&lt;/a&gt; was held at the Mandalay Bay Convention Center this year (and will be again next year in 2020). I had the opportunity to attend (several weeks ago) and decided to write up my thoughts about it.&lt;/p&gt;
&lt;p&gt;This is an introverted newbie’s guide navigating the conference.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="https://tc19.tableau.com"&gt;Tableau Conference&lt;/a&gt; was held at the Mandalay Bay Convention Center this year (and will be again next year in 2020). I had the opportunity to attend (several weeks ago) and decided to write up my thoughts about it.&lt;/p&gt;
&lt;p&gt;This is an introverted newbie’s guide navigating the conference.&lt;/p&gt;
&lt;p&gt;The conference started on Tuesday with pre-conference sessions that you had to register (and pay for). I did not attend those.&lt;/p&gt;
&lt;p&gt;Tuesday night there was a big welcome reception that I very nearly bailed on because of how many people there were, but I decided to give it a shot anyway. I’m glad I did.&lt;/p&gt;
&lt;p&gt;The welcome reception (as well as all of the meals) were held in the data village (basically the convention show floor) which was a little weird but it worked.&lt;/p&gt;
&lt;p&gt;In the reception they had industry specific areas (healthcare being one of them). I didn’t know this going in ... I just kind of stumbled into it.&lt;/p&gt;
&lt;p&gt;This was the luckiest break I could have had as I sat there there entire night and met about 10 people. Three of them (Josh, Kerry, and Molly) I spoke to the most, so much so that we decided that we’d go to the ' Data Night Out’ (the client party) together.&lt;/p&gt;
&lt;p&gt;Being super introverted this was not my jam, but I’m glad I went, and I will go again next year.&lt;/p&gt;
&lt;p&gt;Each day is jam packed full of sessions. I didn’t come across any sessions that were not worthwhile, although some were better than others.&lt;/p&gt;
&lt;p&gt;You do have to register for the session in order to gain admittance to the room (they scan your badge to make sure you belong) but there seemed to be stand by room in most of the sessions I attended.&lt;/p&gt;
&lt;h2&gt;Keynote events&lt;/h2&gt;
&lt;p&gt;There are ‘Key Note’ events to kick off each day. They happen in the Mandalay Bay events center, but there is also an overflow room you can watch them from.&lt;/p&gt;
&lt;p&gt;I would recommend going to at least one event in the events center, but as an introvert the overflow was really more my speed. A room that could sit 500 people with only 50 in it ... yes please!&lt;/p&gt;
&lt;h2&gt;Iron Viz&lt;/h2&gt;
&lt;p&gt;A take on Iron Chef, Iron Viz was a chance for 3 Tableau wizards to showcase their skills with Tableau and a shared data set. It was really interesting to see the different ways that the data could be presented and the different stories that each competitor told for their visualizations.&lt;/p&gt;
&lt;h2&gt;Data Night Out&lt;/h2&gt;
&lt;p&gt;I didn’t do this, mostly because by Thursday I was pretty overwhelmed and just needed a quite night in. I don’t regret not going, but I think I will make myself go next year&lt;/p&gt;
&lt;h2&gt;Data Culture&lt;/h2&gt;
&lt;p&gt;I’m going to write more on this once I get my head really wrapped around it, but suffice it to say, this is something that I think is going to be very important going forward for the organization I work for.&lt;/p&gt;</content><category term="Conferences"></category><category term="Beginner"></category><category term="Tableau"></category></entry><entry><title>CBV - LoginView</title><link href="https://www.ryancheley.com/cbv-loginview.html" rel="alternate"></link><published>2019-12-15T10:00:00+01:00</published><updated>2019-12-15T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-15:/cbv-loginview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LoginView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LoginView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Display the login form and handle the login action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;authentication_form: Allows you to subclass &lt;code&gt;AuthenticationForm&lt;/code&gt; if needed. You would want to do this IF you need other fields besides username and password for login OR you want to implement other logic than just …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LoginView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LoginView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Display the login form and handle the login action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;authentication_form: Allows you to subclass &lt;code&gt;AuthenticationForm&lt;/code&gt; if needed. You would want to do this IF you need other fields besides username and password for login OR you want to implement other logic than just account creation, i.e. account verification must be done as well. For details see &lt;a href="https://simpleisbetterthancomplex.com/tips/2016/08/12/django-tip-10-authentication-form-custom-login-policy.html"&gt;example&lt;/a&gt; by Vitor Freitas for more details&lt;/li&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;redirect_authenticated_user: If the user is logged in then when they attempt to go to your login page it will redirect them to the &lt;code&gt;LOGIN_REDIRECT_URL&lt;/code&gt; configured in your &lt;code&gt;settings.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;redirect_field_name: similar idea to updating what the &lt;code&gt;next&lt;/code&gt; field will be from the &lt;code&gt;DetailView&lt;/code&gt;. If this is specified then you’ll most likely need to create a custom login template.&lt;/li&gt;
&lt;li&gt;template_name: The default value for this is &lt;code&gt;registration\login.html&lt;/code&gt;, i.e. a file called &lt;code&gt;login.html&lt;/code&gt; in the &lt;code&gt;registration&lt;/code&gt; directory of the &lt;code&gt;templates&lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are no required attributes for this view, which is nice because you can just add &lt;code&gt;pass&lt;/code&gt; to the view and you’re set (for the view anyway you still need an html file).&lt;/p&gt;
&lt;p&gt;You’ll also need to update &lt;code&gt;settings.py&lt;/code&gt; to include a value for the &lt;code&gt;LOGIN_REDIRECT_URL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Note on redirect_field_name&lt;/h3&gt;
&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.decorators.login_required"&gt;Django Documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If the user isn’t logged in, redirect to settings.LOGIN&lt;em&gt;URL, passing the current absolute path in the query string. Example: /accounts/login/?next=/polls/3/.&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;If &lt;code&gt;redirect_field_name&lt;/code&gt; is set then the URL would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/accounts/login/?&amp;lt;redirect_field_name&amp;gt;=/polls/3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basically, you only use this if you have a pretty good reason.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myLoginView&lt;/span&gt;(&lt;span class="n"&gt;LoginView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;login_view/&amp;#39;, views.myLoginView.as_view(), name=&amp;#39;login_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;registration/login.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui--text-danger&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;error&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;form.non_field_errors&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;error&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-textfield&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.username.label&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.username&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-textfield&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.password.label&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.password&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-btn mui-btn--primary&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Log in&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;next&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;request.GET.next&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-divider&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGIN_REDIRECT_URL = &amp;#39;/&amp;lt;app_name&amp;gt;/&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;LoginView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSuccessURLAllowedHostsMixin%7Bbg:white%7D%5D%5E-%5BLoginView%7Bbg:green%7D%5D,%20%5BFormView%7Bbg:lightblue%7D%5D%5E-%5BLoginView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Really easy to implement right out of the box but allows some nice customization. That being said, make those customizations IF you need to, not just because you think you want to.&lt;/p&gt;</content><category term="Django"></category><category term="authentication"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - LogoutView</title><link href="https://www.ryancheley.com/cbv-logoutview.html" rel="alternate"></link><published>2019-12-15T10:00:00+01:00</published><updated>2019-12-15T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-15:/cbv-logoutview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LogoutView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LogoutView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Log out the user and display the 'You are logged out' message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;next_page: redirects the user on logout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.views.LogoutView"&gt;redirect_field_name&lt;/a&gt;: The name of a GET field containing the URL to redirect to after log out. Defaults to next. Overrides the next_page URL if the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LogoutView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LogoutView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Log out the user and display the 'You are logged out' message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;next_page: redirects the user on logout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.views.LogoutView"&gt;redirect_field_name&lt;/a&gt;: The name of a GET field containing the URL to redirect to after log out. Defaults to next. Overrides the next_page URL if the given GET parameter is passed.^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/li&gt;
&lt;li&gt;template_name: defaults to &lt;code&gt;registration\logged_out.html&lt;/code&gt;. Even if you don’t have a template the view does get rendered but it uses the default Django skin. You’ll want to create your own to allow the user to logout AND to keep the look and feel of the site.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myLogoutView&lt;/span&gt;(&lt;span class="n"&gt;LogoutView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;logout_view/&amp;#39;, views.myLogoutView.as_view(), name=&amp;#39;logout_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;registrationlogged_out.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Logged out&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;LogoutView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;Image Link from CCBV YUML goes here&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I’m not sure how it could be much easier to implement a logout page.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Per Django Docs &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="authentication"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DeleteView</title><link href="https://www.ryancheley.com/cbv-deleteview.html" rel="alternate"></link><published>2019-12-11T10:00:00+01:00</published><updated>2019-12-11T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-11:/cbv-deleteview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/DeleteView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DeleteView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for deleting an object retrieved with self.get&lt;em&gt;object(), with a&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;response rendered by a template.&lt;/p&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are no new attributes, but 2 that we’ve seen are required: (1) &lt;code&gt;queryset&lt;/code&gt; or &lt;code&gt;model&lt;/code&gt;; and (2) &lt;code&gt;success_url&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDeleteView&lt;/span&gt;(&lt;span class="n"&gt;DeleteView …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/DeleteView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DeleteView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for deleting an object retrieved with self.get&lt;em&gt;object(), with a&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;response rendered by a template.&lt;/p&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are no new attributes, but 2 that we’ve seen are required: (1) &lt;code&gt;queryset&lt;/code&gt; or &lt;code&gt;model&lt;/code&gt;; and (2) &lt;code&gt;success_url&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDeleteView&lt;/span&gt;(&lt;span class="n"&gt;DeleteView&lt;/span&gt;):
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;delete_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myDeleteView.as_view(), name=&amp;#39;delete_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template_name&gt;.html&lt;/p&gt;
&lt;p&gt;Below is just the form that would be needed to get the delete to work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;border=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;First Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Last Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Back&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Delete&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DeleteView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BDeleteView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseDeleteView%7Bbg:white%7D%5D%5E-%5BDeleteView%7Bbg:green%7D%5D,%20%5BDeletionMixin%7Bbg:white%7D%5D%5E-%5BBaseDeleteView%7Bbg:white%7D%5D,%20%5BBaseDetailView%7Bbg:white%7D%5D%5E-%5BBaseDeleteView%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDetailView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDetailView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As far as implementations, the ability to add a form to delete data is about the easiest thing you can do in Django. It requires next to nothing in terms of implementing. We now have step 4 of a CRUD app!&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - UpdateView</title><link href="https://www.ryancheley.com/cbv-updateview.html" rel="alternate"></link><published>2019-12-08T10:00:00+01:00</published><updated>2019-12-08T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-08:/cbv-updateview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/UpdateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;UpdateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for updating an object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Two attributes are required to get the template to render. We’ve seen &lt;code&gt;queryset&lt;/code&gt; before and in &lt;a href="/cbv-createview/"&gt;CreateView&lt;/a&gt; we saw &lt;code&gt;fields&lt;/code&gt;. As a brief refresher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/UpdateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;UpdateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for updating an object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Two attributes are required to get the template to render. We’ve seen &lt;code&gt;queryset&lt;/code&gt; before and in &lt;a href="/cbv-createview/"&gt;CreateView&lt;/a&gt; we saw &lt;code&gt;fields&lt;/code&gt;. As a brief refresher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the model or queryset will be displayed on the rendered template. You can you set &lt;code&gt;fields&lt;/code&gt; to &lt;code&gt;__all__&lt;/code&gt; if you want to return all of the fields&lt;/li&gt;
&lt;li&gt;success_url: you’ll want to specify this after the record has been updated so that you know the update was made.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myUpdateView&lt;/span&gt;(&lt;span class="n"&gt;UpdateView&lt;/span&gt;):
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;fields&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;__all__&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;extra_context&lt;/span&gt; = {
        &lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;: &lt;span class="s"&gt;&amp;#39;Update&amp;#39;&lt;/span&gt;
    }
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;update_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myUpdateView.as_view(), name=&amp;#39;update_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Create&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:update_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;object.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;UpdateView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BUpdateView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseUpdateView%7Bbg:white%7D%5D%5E-%5BUpdateView%7Bbg:green%7D%5D,%20%5BModelFormMixin%7Bbg:white%7D%5D%5E-%5BBaseUpdateView%7Bbg:white%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseUpdateView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A simple way to implement a form to update data in a model. Step 3 for a CR&lt;strong&gt;U&lt;/strong&gt;D app is now complete!&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>My first commit to an Open Source Project: Django</title><link href="https://www.ryancheley.com/my-first-commit-to-an-open-source-project-django.html" rel="alternate"></link><published>2019-12-07T15:54:00+01:00</published><updated>2019-12-07T15:54:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-07:/my-first-commit-to-an-open-source-project-django.html</id><summary type="html">&lt;p&gt;Last September the annual Django Con was held in San Diego. I &lt;strong&gt;really&lt;/strong&gt; wanted to go, but because of other projects and conferences for my job, I wasn’t able to make it.&lt;/p&gt;
&lt;p&gt;The next best thing to to watch the &lt;a href="https://www.youtube.com/playlist?list=PL2NFhrDSOxgXXUMIGOs8lNe2B-f4pXOX-"&gt;videos from DjangoCon on YouTube&lt;/a&gt;. I watched a couple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last September the annual Django Con was held in San Diego. I &lt;strong&gt;really&lt;/strong&gt; wanted to go, but because of other projects and conferences for my job, I wasn’t able to make it.&lt;/p&gt;
&lt;p&gt;The next best thing to to watch the &lt;a href="https://www.youtube.com/playlist?list=PL2NFhrDSOxgXXUMIGOs8lNe2B-f4pXOX-"&gt;videos from DjangoCon on YouTube&lt;/a&gt;. I watched a couple of the videos, but one that really caught my attention was by &lt;a href="https://github.com/carltongibson"&gt;Carlton Gibson&lt;/a&gt; titled “&lt;a href="https://www.youtube.com/watch?v=LjTRSH0pNBo"&gt;Your Web Framework Needs You: An Update by Carlton Gibson&lt;/a&gt;”.&lt;/p&gt;
&lt;p&gt;I took what Carlton said to heart and thought, I really should be able to do &lt;em&gt;something&lt;/em&gt; to help.&lt;/p&gt;
&lt;p&gt;I went to the &lt;a href="https://code.djangoproject.com/"&gt;Django Issues site&lt;/a&gt; and searched for an &lt;strong&gt;Easy Pickings&lt;/strong&gt; issue that involved documentation and found &lt;a href="https://code.djangoproject.com/ticket/31006"&gt;issue 31006 “Document how to escape a date/time format character for the |date and |time filters.”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I read the &lt;a href="https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/working-with-git/#publishing-work"&gt;steps on what I needed to do to submit a pull request&lt;/a&gt;, but since it was my first time &lt;strong&gt;ever&lt;/strong&gt; participating like this … I was a bit lost.&lt;/p&gt;
&lt;p&gt;Luckily there isn’t anything that you can break, so I was able to wonder around for a bit and get my bearings.&lt;/p&gt;
&lt;p&gt;I forked the GitHub repo and I cloned it locally.&lt;/p&gt;
&lt;p&gt;I then spent an &lt;strong&gt;embarasingly&lt;/strong&gt; long time trying to figure out where the change was going to need to be made, and exactly what needed to change.&lt;/p&gt;
&lt;p&gt;Finally, with my changes made, I &lt;a href="https://github.com/django/django/pull/12128#issue-344767579"&gt;pushed my code changes&lt;/a&gt; to GitHub and waited.&lt;/p&gt;
&lt;p&gt;Within a few hours &lt;a href="https://github.com/django/django/pull/12128#issuecomment-557804299"&gt;Mariusz Felisiak replied back&lt;/a&gt; and asked about a suggestion he had made (but which I missed). I dug back into the documentation, found what he was referring to, and made (what I thought) was his suggested change.&lt;/p&gt;
&lt;p&gt;Another push and a bit more waiting.&lt;/p&gt;
&lt;p&gt;Mariusz Felisiak replied back with some input about the change I pushed up, and I realized I had missed the mark on what he was suggesting.&lt;/p&gt;
&lt;p&gt;OK. &lt;a href="#"&gt;Third time’s a charm&lt;/a&gt;, right?&lt;/p&gt;
&lt;p&gt;Turns out, in this case it was. &lt;a href="https://github.com/django/django/pull/12128#issuecomment-560278417"&gt;I pushed up one last time&lt;/a&gt; and this time, my changes were &lt;a href="https://github.com/django/django/commit/cd7f48e85e3e4b9f13df6c0ef5f1d95abc079ff6#diff-7be9aaef6dad344e74188264c0e95daa"&gt;merged&lt;/a&gt; into the master and just like that, I am now a contributor to Django (albeit a very, very, very minor contributor).&lt;/p&gt;
&lt;p&gt;Overall, this was a great experience, both with respect to learning about contributing to an open source project, as well as learning about GitHub.&lt;/p&gt;
&lt;p&gt;I’m hoping that with the holidays upon us I’ll be able to find the time to pick up one or two (maybe even three) &lt;strong&gt;Easy Pickings&lt;/strong&gt; issues from the Django issue tracker.&lt;/p&gt;</content><category term="Django"></category><category term="django"></category><category term="documentation"></category><category term="Github"></category></entry><entry><title>CBV - FormView</title><link href="https://www.ryancheley.com/cbv-formview.html" rel="alternate"></link><published>2019-12-04T10:00:00+01:00</published><updated>2019-12-04T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-04:/cbv-formview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/FormView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;The only new attribute to review this time is &lt;code&gt;form_class&lt;/code&gt;. That being said, there are a few implementation details to cover&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_class: takes a Form class and is used to render the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/FormView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;The only new attribute to review this time is &lt;code&gt;form_class&lt;/code&gt;. That being said, there are a few implementation details to cover&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_class: takes a Form class and is used to render the form on the &lt;code&gt;html&lt;/code&gt; template later on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Methods&lt;/h2&gt;
&lt;p&gt;Up to this point we haven’t really needed to override a method to get any of the views to work. This time though, we need someway for the view to verify that the data is valid and then save it somewhere.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_valid: used to verify that the data entered is valid and then saves to the database. Without this method your form doesn’t do anything&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;This example is a bit more than previous examples. A new file called &lt;code&gt;forms.py&lt;/code&gt; is used to define the form that will be used.&lt;/p&gt;
&lt;p&gt;forms.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ModelForm&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rango.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PersonForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myFormView&lt;/span&gt;(&lt;span class="n"&gt;FormView&lt;/span&gt;):
    &lt;span class="n"&gt;form_class&lt;/span&gt; = &lt;span class="n"&gt;PersonForm&lt;/span&gt;
    &lt;span class="n"&gt;template_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango/person_form.html&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;extra_context&lt;/span&gt; = {
        &lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;: &lt;span class="s"&gt;&amp;#39;Form&amp;#39;&lt;/span&gt;
    }
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;form_valid&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;form&lt;/span&gt;):
        &lt;span class="n"&gt;person&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="n"&gt;create&lt;/span&gt;(
            &lt;span class="n"&gt;first_name&lt;/span&gt;=&lt;span class="n"&gt;form&lt;/span&gt;.&lt;span class="n"&gt;cleaned_data&lt;/span&gt;[&lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;],
            &lt;span class="n"&gt;last_name&lt;/span&gt;=&lt;span class="n"&gt;form&lt;/span&gt;.&lt;span class="n"&gt;cleaned_data&lt;/span&gt;[&lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;],
            &lt;span class="n"&gt;post_date&lt;/span&gt;=&lt;span class="n"&gt;datetime&lt;/span&gt;.&lt;span class="nb"&gt;now&lt;/span&gt;(),
        )
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;super&lt;/span&gt;(&lt;span class="n"&gt;myFormView&lt;/span&gt;, &lt;span class="nb"&gt;self&lt;/span&gt;).&lt;span class="n"&gt;form_valid&lt;/span&gt;(&lt;span class="n"&gt;form&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;form_view/&amp;#39;, views.myFormView.as_view(), name=&amp;#39;form_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template_name&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Update&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:update_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;object.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;FormView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:green%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:green%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really struggled with understanding &lt;em&gt;why&lt;/em&gt; you would want to implement &lt;code&gt;FormView&lt;/code&gt;. I found this explanation on &lt;a href="https://www.agiliq.com/blog/2019/01/django-formview/"&gt;Agiliq&lt;/a&gt; and it helped me grok the why:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;FormView should be used when you need a form on the page and want to perform certain action when a valid form is submitted. eg: Having a contact us form and sending an email on form submission.&lt;/p&gt;
&lt;p&gt;CreateView would probably be a better choice if you want to insert a model instance in database on form submission.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;While my example above works, it’s not the intended use of &lt;code&gt;FormView&lt;/code&gt;. Really, it’s just an implementation of &lt;code&gt;CreateView&lt;/code&gt; using &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - CreateView</title><link href="https://www.ryancheley.com/cbv-createview.html" rel="alternate"></link><published>2019-12-01T10:00:00+01:00</published><updated>2019-12-01T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-01:/cbv-createview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/CreateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;CreateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for creating a new object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Three attributes are required to get the template to render. Two we’ve seen before (&lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;template_name&lt;/code&gt;). The new one we haven’t see before is the &lt;code&gt;fields&lt;/code&gt; attribute …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/CreateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;CreateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for creating a new object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Three attributes are required to get the template to render. Two we’ve seen before (&lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;template_name&lt;/code&gt;). The new one we haven’t see before is the &lt;code&gt;fields&lt;/code&gt; attribute.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the model or queryset will be displayed on the rendered template. You can you set &lt;code&gt;fields&lt;/code&gt; to &lt;code&gt;__all__&lt;/code&gt; if you want to return all of the fields&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;queryset = Person.objects.all()
fields = &amp;#39;__all__&amp;#39;
template_name = &amp;#39;rango/person_form.html&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;create_view/&amp;#39;, views.myCreateView.as_view(), name=&amp;#39;create_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;


&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;CreateView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BCreateView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseCreateView%7Bbg:white%7D%5D%5E-%5BCreateView%7Bbg:green%7D%5D,%20%5BModelFormMixin%7Bbg:white%7D%5D%5E-%5BBaseCreateView%7Bbg:white%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseCreateView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A simple way to implement a form to create items for a model. We’ve completed step 1 for a basic &lt;strong&gt;C&lt;/strong&gt;RUD application.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DayArchiveView</title><link href="https://www.ryancheley.com/cbv-dayarchiveview.html" rel="alternate"></link><published>2019-11-27T10:00:00+01:00</published><updated>2019-11-27T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-27:/cbv-dayarchiveview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/DayArchiveView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DayArchiveView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List of objects published on a given day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are six new attributes to review here … well really 3 new ones and then a formatting attribute for each of these 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;day: The day to be viewed&lt;/li&gt;
&lt;li&gt;day_format: The format of the day …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/DayArchiveView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DayArchiveView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List of objects published on a given day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are six new attributes to review here … well really 3 new ones and then a formatting attribute for each of these 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;day: The day to be viewed&lt;/li&gt;
&lt;li&gt;day_format: The format of the day to be passed. Defaults to &lt;code&gt;%d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;month: The month to be viewed&lt;/li&gt;
&lt;li&gt;month_format: The format of the month to be passed. Defaults to &lt;code&gt;%b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;year: The year to be viewed&lt;/li&gt;
&lt;li&gt;year_format: The format of the year to be passed. Defaults to &lt;code&gt;%Y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Required Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;day&lt;/li&gt;
&lt;li&gt;month&lt;/li&gt;
&lt;li&gt;year&lt;/li&gt;
&lt;li&gt;date_field: The field that holds the date that will drive every else. We saw this in &lt;a href="/cbv-archiveindexview"&gt;ArchiveIndexView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally you also need &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;year&lt;/code&gt; can be passed via &lt;code&gt;urls.py&lt;/code&gt; so that they do’t need to be specified in the view itself.&lt;/p&gt;
&lt;h2&gt;Example:&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDayArchiveView&lt;/span&gt;(&lt;span class="n"&gt;DayArchiveView&lt;/span&gt;):
    &lt;span class="n"&gt;month_format&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;%m&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;date_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;context_object_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;person&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;paginate_by&lt;/span&gt; = &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;page_kwarg&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;day_archive_view/&amp;lt;int:year&amp;gt;/&amp;lt;int:month&amp;gt;/&amp;lt;int:day&amp;gt;/&amp;#39;, views.myDayArchiveView.as_view(), name=&amp;#39;day_archive_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;model_name&gt;_archiveday.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;


&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:detail_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;is_paginated&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-list--inline mui--text-body2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.has_previous&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page_obj.previous_page_number&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;laquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;laquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;paginator.page_range&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sr-only&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;(current)&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.has_next&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page_obj.next_page_number&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DayArchiveView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BDayArchiveView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseDayArchiveView%7Bbg:white%7D%5D%5E-%5BDayArchiveView%7Bbg:green%7D%5D,%20%5BYearMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BMonthMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BDayMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BBaseDateListView%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BDateMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you have date based content a great tool to use and again super easy to implement.&lt;/p&gt;
&lt;p&gt;There are other time based CBV for Today, Date, Week, Month, and Year. They all do the same thing (generally) so I won’t review those.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - ArchiveIndexView</title><link href="https://www.ryancheley.com/cbv-archiveindexview.html" rel="alternate"></link><published>2019-11-24T10:00:00+01:00</published><updated>2019-11-24T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-24:/cbv-archiveindexview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/ArchiveIndexView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ArchiveIndexView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-level archive of date-based items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are 20 attributes that can be set for the &lt;code&gt;ArchiveIndexView&lt;/code&gt; but most of them are based on ancestral Classes of the CBV so we won’t be going into them in Detail.&lt;/p&gt;
&lt;h3&gt;DateMixin Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;allow_future: Defaults to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/ArchiveIndexView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ArchiveIndexView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-level archive of date-based items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are 20 attributes that can be set for the &lt;code&gt;ArchiveIndexView&lt;/code&gt; but most of them are based on ancestral Classes of the CBV so we won’t be going into them in Detail.&lt;/p&gt;
&lt;h3&gt;DateMixin Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;allow_future: Defaults to False. If set to True you can show items that have dates that are in the future where the future is anything after the current date/time on the server.&lt;/li&gt;
&lt;li&gt;date_field: the field that the view will use to filter the date on. If this is not set an error will be generated&lt;/li&gt;
&lt;li&gt;uses_datetime_field: Convert a date into a datetime when the date field is a DateTimeField. When time zone support is enabled, &lt;code&gt;date&lt;/code&gt; is assumed to be in the current time zone, so that displayed items are consistent with the URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;BaseDateListView Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;allow_empty: Defaults to &lt;code&gt;False&lt;/code&gt;. This means that if there is no data a &lt;code&gt;404&lt;/code&gt; error will be returned with the message  &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;No __str__ Available&lt;/code&gt; where ‘&lt;code&gt;__str__&lt;/code&gt;’ is the display of your model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;date_list_period: This attribute allows you to break down by a specific period of time (years, months, days, etc.) and group your date driven items by the period specified. See below for implementation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For &lt;code&gt;year&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;date_list_period=&amp;#39;year&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;Nothing special needs to be done&lt;/p&gt;
&lt;p&gt;\&amp;lt;file_name_&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;date_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;date.year&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;date.year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;p.post_date.year&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Will render:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-394" height="542" src="/images/uploads/2019/11/634B59DC-6BA6-4C5F-B969-E8B924123FFA.jpeg" width="866"&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;month&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;date_list_period=&amp;#39;month&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;Nothing special needs to be done&lt;/p&gt;
&lt;p&gt;\&amp;lt;file_name_&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;date_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;date.month&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;date.month&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;p.post_date.month&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Will render:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-395" height="668" src="/images/uploads/2019/11/04B40CD4-3B85-440D-810D-4050727D6120.jpeg" width="1061"&gt;&lt;/p&gt;
&lt;h3&gt;BaseArchiveIndexView Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;context_object_name: Name the object used in the template. As stated before, you’re going to want to do this so you don’t hate yourself (or have other developers hate you).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Attributes&lt;/h2&gt;
&lt;h3&gt;MultipleObjectMixin Attributes&lt;/h3&gt;
&lt;p&gt;These attributes were all reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;model = None&lt;/li&gt;
&lt;li&gt;ordering = None&lt;/li&gt;
&lt;li&gt;page_kwarg = 'page'&lt;/li&gt;
&lt;li&gt;paginate_by = None&lt;/li&gt;
&lt;li&gt;paginate_orphans = 0&lt;/li&gt;
&lt;li&gt;paginator_class = \&amp;lt;class 'django.core.paginator.Paginator'&gt;&lt;/li&gt;
&lt;li&gt;queryset = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;TemplateResponseMixin Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ContextMixin Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extra_context = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;View Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-view.html"&gt;View&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names = ['get', 'post', 'put', 'patch', 'delete', 'head', 'options', 'trace']&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;TemplateResponseMixin Attributes&lt;/h3&gt;
&lt;p&gt;These attributes were all reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;response_class = \&amp;lt;class 'django.template.response.TemplateResponse'&gt;&lt;/li&gt;
&lt;li&gt;template_engine = None&lt;/li&gt;
&lt;li&gt;template_name = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;ArchiveIndexView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BArchiveIndexView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseArchiveIndexView%7Bbg:white%7D%5D%5E-%5BArchiveIndexView%7Bbg:green%7D%5D,%20%5BBaseDateListView%7Bbg:white%7D%5D%5E-%5BBaseArchiveIndexView%7Bbg:white%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BDateMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With date driven data (articles, blogs, etc.) The &lt;code&gt;ArchiveIndexView&lt;/code&gt; is a great CBV and super easy to implement.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DetailView</title><link href="https://www.ryancheley.com/cbv-detailview.html" rel="alternate"></link><published>2019-11-24T10:00:00+01:00</published><updated>2019-11-24T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-24:/cbv-detailview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.detail/DetailView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DetailView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a "detail" view of an object.&lt;/p&gt;
&lt;p&gt;By default this is a model instance looked up from &lt;code&gt;self.queryset&lt;/code&gt;, but the view will support display of &lt;em&gt;any&lt;/em&gt; object by overriding &lt;code&gt;self.get_object()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 7 attributes for the &lt;code&gt;DetailView&lt;/code&gt; that are derived from the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.detail/DetailView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DetailView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a "detail" view of an object.&lt;/p&gt;
&lt;p&gt;By default this is a model instance looked up from &lt;code&gt;self.queryset&lt;/code&gt;, but the view will support display of &lt;em&gt;any&lt;/em&gt; object by overriding &lt;code&gt;self.get_object()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 7 attributes for the &lt;code&gt;DetailView&lt;/code&gt; that are derived from the &lt;code&gt;SingleObjectMixin&lt;/code&gt;. I’ll talk about five of them and the go over the ‘slug’ fields in their own section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;context_object_name: similar to the &lt;code&gt;ListView&lt;/code&gt; it allows you to give a more memorable name to the object in the template. You’ll want to use this if you want to have future developers (i.e. you) not hate you&lt;/li&gt;
&lt;li&gt;model: similar to the &lt;code&gt;ListView&lt;/code&gt; except it only returns a single record instead of all records for the model based on a filter parameter passed via the &lt;code&gt;slug&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pk_url_kwarg: you can set this to be something other than pk if you want … though I’m not sure why you’d want to&lt;/li&gt;
&lt;li&gt;query_pk_and_slug: The Django Docs have a pretty clear explanation of what it does&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This attribute can help mitigate &lt;a href="https://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References"&gt;insecure direct object reference&lt;/a&gt; attacks. When applications allow access to individual objects by a sequential primary key, an attacker could brute-force guess all URLs; thereby obtaining a list of all objects in the application. If users with access to individual objects should be prevented from obtaining this list, setting query&lt;em&gt;pk&lt;/em&gt;and&lt;em&gt;slug to True will help prevent the guessing of URLs as each URL will require two correct, non-sequential arguments. Simply using a unique slug may serve the same purpose, but this scheme allows you to have non-unique slugs.&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;queryset: used to return data to the view. It will supersede the value supplied for &lt;code&gt;model&lt;/code&gt; if both are present&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Slug Fields&lt;/h2&gt;
&lt;p&gt;There are two attributes that I want to talk about separately from the others:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slug_field&lt;/li&gt;
&lt;li&gt;slug_url_kwarg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If neither &lt;code&gt;slug_field&lt;/code&gt; nor &lt;code&gt;slug_url_kwarg&lt;/code&gt; are set the the url must contain &lt;code&gt;&amp;lt;int:pk&amp;gt;&lt;/code&gt;. The url in the template needs to include &lt;code&gt;o.id&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;p&gt;There is nothing to show in the &lt;code&gt;views.py&lt;/code&gt; file in this example&lt;/p&gt;
&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.id %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;slug_field&lt;/code&gt; is set but &lt;code&gt;slug_url_kwarg&lt;/code&gt; is NOT set then the url can be &lt;code&gt;&amp;lt;slug&amp;gt;&lt;/code&gt;. The url in the template needs to include &lt;code&gt;o.&amp;lt;slug_field&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDetailView&lt;/span&gt;(&lt;span class="n"&gt;DetailView&lt;/span&gt;):
    &lt;span class="n"&gt;slug_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;slug&amp;gt;/&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.first_name %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;slug_field&lt;/code&gt; is not set but &lt;code&gt;slug_url_kwarg&lt;/code&gt; is set then you get an error. Don’t do this one.&lt;/p&gt;
&lt;p&gt;If both &lt;code&gt;slug_field&lt;/code&gt; and &lt;code&gt;slug_url_kwarg&lt;/code&gt; are set then the url must be &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; where value is what the parameters are set to. The url in the template needs to include &lt;code&gt;o.&amp;lt;slug_field&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDetailView&lt;/span&gt;(&lt;span class="n"&gt;DetailView&lt;/span&gt;):
    &lt;span class="n"&gt;slug_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;slug_url_kwarg&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;first_name&amp;gt;/&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.first_name %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DetailView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseListView%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I think the most important part of the &lt;code&gt;DetailView&lt;/code&gt; is to remember its relationship to &lt;code&gt;ListView&lt;/code&gt;. Changes you try to implement on the Class for &lt;code&gt;DetailView&lt;/code&gt; need to be incorporated into the template associated with the &lt;code&gt;ListView&lt;/code&gt; you have.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - BaseListView</title><link href="https://www.ryancheley.com/cbv-baselistview.html" rel="alternate"></link><published>2019-11-17T10:00:00+01:00</published><updated>2019-11-17T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-17:/cbv-baselistview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/BaseListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;BaseListView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;And from the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/generic-display/#listview"&gt;Django Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects. It is not intended to be used directly, but rather as a parent class of the django.views.generic.list.ListView …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/BaseListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;BaseListView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;And from the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/generic-display/#listview"&gt;Django Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects. It is not intended to be used directly, but rather as a parent class of the django.views.generic.list.ListView or other views representing lists of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Almost all of the functionality of &lt;code&gt;BaseListView&lt;/code&gt; comes from the &lt;code&gt;MultipleObjectMixin&lt;/code&gt;. Since the Django Docs specifically say don’t use this directly, I won’t go into it too much.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;BaseListView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:green%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Don’t use this. It should be subclassed into a usable view (a la &lt;code&gt;ListView&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;There are many &lt;strong&gt;Base&lt;/strong&gt; views that are ancestors for other views. I’m not going to cover any more of them going forward &lt;strong&gt;UNLESS&lt;/strong&gt; the documentation says there’s a specific reason to.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - ListView</title><link href="https://www.ryancheley.com/cbv-listview.html" rel="alternate"></link><published>2019-11-17T10:00:00+01:00</published><updated>2019-11-17T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-17:/cbv-listview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/ListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ListView&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render some list of objects, set by &lt;code&gt;self.model&lt;/code&gt; or &lt;code&gt;self.queryset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.queryset&lt;/code&gt; can actually be any iterable of items, not just a queryset.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 16 attributes for the &lt;code&gt;ListView&lt;/code&gt; but only 2 types are required to make the page return something …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/ListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ListView&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render some list of objects, set by &lt;code&gt;self.model&lt;/code&gt; or &lt;code&gt;self.queryset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.queryset&lt;/code&gt; can actually be any iterable of items, not just a queryset.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 16 attributes for the &lt;code&gt;ListView&lt;/code&gt; but only 2 types are required to make the page return something other than a &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_errors"&gt;500&lt;/a&gt; error:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;Template Name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data Attributes&lt;/h2&gt;
&lt;p&gt;You have a choice of either using &lt;code&gt;Model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt; to specify &lt;strong&gt;what&lt;/strong&gt; data to return. Without it you get an error.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Model&lt;/code&gt; attribute gives you less control but is easier to implement. If you want to see ALL of the records of your model, just set&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;model = ModelName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, if you want to have a bit more control over what is going to be displayed you’ll want to use &lt;code&gt;queryset&lt;/code&gt; which will allow you to add methods to the specified model, ie &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;order_by&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;queryset = ModelName.objects.filter(field_name=&amp;#39;filter&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you specify both &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; then &lt;code&gt;queryset&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;h2&gt;Template Name Attributes&lt;/h2&gt;
&lt;p&gt;You have a choice of using &lt;code&gt;template_name&lt;/code&gt; or &lt;code&gt;template_name_suffix&lt;/code&gt;. The &lt;code&gt;template_name&lt;/code&gt; allows you to directly control what template will be used. For example, if you have a template called &lt;code&gt;list_view.html&lt;/code&gt; you can specify it directly in &lt;code&gt;template_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;template_name_suffix&lt;/code&gt; will calculate what the template name should be by using the app name, model name, and appending the value set to the &lt;code&gt;template_name_suffix&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In pseudo code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;templates/&amp;lt;app_name&amp;gt;/&amp;lt;model_name&amp;gt;_&amp;lt;template_name_suffix&amp;gt;.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For an app named &lt;code&gt;rango&lt;/code&gt; and a model named &lt;code&gt;person&lt;/code&gt; setting &lt;code&gt;template_name_suffix&lt;/code&gt; to &lt;code&gt;_test&lt;/code&gt; would resolve to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;templates/rango/person_test.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Other Attributes&lt;/h2&gt;
&lt;p&gt;If you want to return something interesting you’ll also need to specify&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;allow_empty: The default for this is true which allows the page to render if there are no records. If you set this to &lt;code&gt;false&lt;/code&gt; then returning no records will result in a 404 error&lt;/li&gt;
&lt;li&gt;context_object_name: allows you to give a more memorable name to the object in the template. You’ll want to use this if you want to have future developers (i.e. you) not hate you&lt;/li&gt;
&lt;li&gt;ordering: allows you to specify the order that the data will be returned in. The field specified must exist in the &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt; that you’ve used&lt;/li&gt;
&lt;li&gt;page_kwarg: this indicates the name to use when going from page x to y; defaults to &lt;code&gt;name&lt;/code&gt; but overriding it to something more sensible can be helpful for SEO. For example you can use &lt;code&gt;name&lt;/code&gt; instead of &lt;code&gt;page&lt;/code&gt; if you’ve got a page that has a bunch of names&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-387" height="37" src="/images/uploads/2019/11/6FD85C21-0593-42E3-80E3-F835126CDB72_4_5005_c.jpeg" width="488"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;paginate_by: determines the maximum number of records to return on any page.&lt;/li&gt;
&lt;li&gt;paginate_orphans: number of items to add to the last page; this helps keep pages with singletons (or some other small number&lt;/li&gt;
&lt;li&gt;paginator_class: class that defines several of the attributes above. Don’t mess with this unless you have an actual reason to do so. Also … you’re not a special snowflake, there are literal dragons in down this road. Go back!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;ListView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseListView%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;ListView&lt;/code&gt; CBV is a powerful and highly customizable tool that allows you to display the data from a single model quite easily.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>Fixing a PyCharm issue when updating Python made via HomeBrew</title><link href="https://www.ryancheley.com/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew.html" rel="alternate"></link><published>2019-11-14T13:24:00+01:00</published><updated>2019-11-14T13:24:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-14:/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew.html</id><summary type="html">&lt;p&gt;I’ve written before about how easy it is to update your version of Python using homebrew. And it totally is easy.&lt;/p&gt;
&lt;p&gt;The thing that isn’t super clear is that when you do update Python via Homebrew, it seems to break your virtual environments in PyCharm. 🤦‍♂️&lt;/p&gt;
&lt;p&gt;I did a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve written before about how easy it is to update your version of Python using homebrew. And it totally is easy.&lt;/p&gt;
&lt;p&gt;The thing that isn’t super clear is that when you do update Python via Homebrew, it seems to break your virtual environments in PyCharm. 🤦‍♂️&lt;/p&gt;
&lt;p&gt;I did a bit of searching to find this nice &lt;a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000306410-Cannot-use-system-interpreter-in-PyCharm-Pro-2018-1"&gt;post on the JetBrains forum&lt;/a&gt; which indicated&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;unfortunately it's a known issue: &lt;a href="https://youtrack.jetbrains.com/issue/PY-27251"&gt;https://youtrack.jetbrains.com/issue/PY-27251&lt;/a&gt; . Please close Pycharm and remove jdk.table.xml file from \~/Library/Preferences/.PyCharm2018.1/options directory, then start Pycharm again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK. I removed the file, but then you have to rebuild the virtual environments because that file is what stores PyCharms knowledge of those virtual environments.&lt;/p&gt;
&lt;p&gt;In order to get you back to where you need to be, do the following (after removing the &lt;code&gt;jdk.table.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;pip-freeze &gt; requirements.txt&lt;/li&gt;
&lt;li&gt;Remove old virtual environment &lt;code&gt;rm -r venv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a new Virtual Environemtn with PyCharm&lt;ol&gt;
&lt;li&gt;Go to Preferences&lt;/li&gt;
&lt;li&gt;Project &gt; Project Interpreter&lt;/li&gt;
&lt;li&gt;Show All&lt;/li&gt;
&lt;li&gt;Click ‘+’ button&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Restart PyCharm&lt;/li&gt;
&lt;li&gt;You're back&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is a giant PITA but thankfully it didn’t take too much to find the issue, nor to fix it. With that being said, I totally shouldn’t have to do this. But I’m writing it down so that once Python 3.8 is available I’ll be able to remember what I did to fix going from Python 3.7.1 to 3.7.5.&lt;/p&gt;</content><category term="Python"></category><category term="homebrew"></category><category term="macOS"></category><category term="techsupport"></category></entry><entry><title>CBV - RedirectView</title><link href="https://www.ryancheley.com/cbv-redirectview.html" rel="alternate"></link><published>2019-11-10T10:00:00+01:00</published><updated>2019-11-10T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-10:/cbv-redirectview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/RedirectView/"&gt;Classy Class Based View&lt;/a&gt; the &lt;code&gt;RedirectView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Provide a redirect on any GET request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extension of &lt;code&gt;View&lt;/code&gt; and has 5 attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names (from &lt;code&gt;View&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pattern_name: The name of the URL pattern to redirect to. ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ This will be used if no &lt;code&gt;url&lt;/code&gt; is used.&lt;/li&gt;
&lt;li&gt;permanent: a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/RedirectView/"&gt;Classy Class Based View&lt;/a&gt; the &lt;code&gt;RedirectView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Provide a redirect on any GET request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extension of &lt;code&gt;View&lt;/code&gt; and has 5 attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names (from &lt;code&gt;View&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pattern_name: The name of the URL pattern to redirect to. ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ This will be used if no &lt;code&gt;url&lt;/code&gt; is used.&lt;/li&gt;
&lt;li&gt;permanent: a flag to determine if the redirect is permanent or not. If set to &lt;code&gt;True&lt;/code&gt;, then the &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection"&gt;HTTP Status Code&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/HTTP_301"&gt;301&lt;/a&gt; is returned. If set to &lt;code&gt;False&lt;/code&gt; the &lt;a href="https://en.wikipedia.org/wiki/HTTP_302"&gt;302&lt;/a&gt; is returned&lt;/li&gt;
&lt;li&gt;query_string: If &lt;code&gt;True&lt;/code&gt; then it will pass along the query string from the RedirectView. If it’s &lt;code&gt;False&lt;/code&gt; it won’t. If this is set to &lt;code&gt;True&lt;/code&gt; and neither &lt;code&gt;pattern\_name&lt;/code&gt; nor &lt;code&gt;url&lt;/code&gt; are set then nothing will be passed to the &lt;code&gt;RedirectView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;url: Where the Redirect should point. It will take precedence over the patter_name so you should only &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;patter\_name&lt;/code&gt; but not both. This will need to be an absolute url, not a relative one, otherwise you may get a &lt;a href="https://en.wikipedia.org/wiki/HTTP_404"&gt;404&lt;/a&gt; error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The example below will give a &lt;code&gt;301&lt;/code&gt; status code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myRedirectView&lt;/span&gt;(&lt;span class="n"&gt;RedirectView&lt;/span&gt;):
    &lt;span class="n"&gt;pattern_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango:template_view&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;permanent&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;query_string&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While this would be a &lt;code&gt;302&lt;/code&gt; status code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myRedirectView&lt;/span&gt;(&lt;span class="n"&gt;RedirectView&lt;/span&gt;):
    &lt;span class="n"&gt;pattern_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango:template_view&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;permanent&lt;/span&gt; = &lt;span class="nb"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;query_string&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Methods&lt;/h2&gt;
&lt;p&gt;The method &lt;code&gt;get\_redirect\_url&lt;/code&gt; allows you to perform actions when the redirect is called. From the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/#redirectview"&gt;Django Docs&lt;/a&gt; the example given is increasing a counter on an Article Read value.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;RedirectView&lt;/code&gt; derives from &lt;code&gt;View&lt;/code&gt; ^&lt;a class="footnote" href="#fn2" id="ffn2"&gt;2&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BView%7Bbg:lightblue%7D%5D%5E-%5BRedirectView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In general, given the power of the url mapping in Django I’m not sure why you would need to use a the Redirect View. From &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/#redirectview"&gt;Real Python&lt;/a&gt; they concur, stating:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, the class-based approach does not provide any obvious benefit while adding some hidden complexity. That raises the question: &lt;strong&gt;when should you use RedirectView?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to add a redirect directly in your urls.py, using RedirectView makes sense. But if you find yourself overwriting get&lt;em&gt;redirect&lt;/em&gt;url, a function-based view might be easier to understand and more flexible for future enhancements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;[From the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/"&gt;Django Docs&lt;/a&gt; &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;li&gt;[Original Source from Classy Class Based Views &lt;a href="#ffn2"&gt;↩&lt;/a&gt;]{#fn2}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>Updating the models for my Django Rest Framework API</title><link href="https://www.ryancheley.com/updating-the-models-for-my-django-rest-framework-api.html" rel="alternate"></link><published>2019-11-06T20:02:00+01:00</published><updated>2019-11-06T20:02:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-06:/updating-the-models-for-my-django-rest-framework-api.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django project which would allow users to track games that they’ve seen and, therefore, see what stadia they have visited.&lt;/p&gt;
&lt;p&gt;This is all being done at a site i set up called &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;. Initially when constructing my model I kept it relatively …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django project which would allow users to track games that they’ve seen and, therefore, see what stadia they have visited.&lt;/p&gt;
&lt;p&gt;This is all being done at a site i set up called &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;. Initially when constructing my model I kept it relatively simple. I had one model that had two fields. The two fields tied the User from my CustomUser Model to a Game ID that I retrieve from an API that MLB provides.&lt;/p&gt;
&lt;p&gt;I thought this simple approach would be the best approach. In addition to having a Django App I set up a Django Rest Framework (DRF) API. My initial plan was to have a DRF backend with a Vue (or React) front end. (I still want to do that, but I really wanted to try and finish a project before proceeding down that path).&lt;/p&gt;
&lt;p&gt;After some development and testing I quickly realized that the page loads for the app were suffering because of the number of API calls to MLB that were being made.&lt;/p&gt;
&lt;p&gt;I created a new model to tie the user id (still from the CustomUser model I’d created) to the game id, but in addition I’d get and store the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home Team Name&lt;/li&gt;
&lt;li&gt;Home Team Score&lt;/li&gt;
&lt;li&gt;Home Team Hits&lt;/li&gt;
&lt;li&gt;Home Team Errors&lt;/li&gt;
&lt;li&gt;Away Team Name&lt;/li&gt;
&lt;li&gt;Away Team Score&lt;/li&gt;
&lt;li&gt;Away Team Hits&lt;/li&gt;
&lt;li&gt;Away Team Errors&lt;/li&gt;
&lt;li&gt;Game Recap Headline&lt;/li&gt;
&lt;li&gt;Game Recap Summary&lt;/li&gt;
&lt;li&gt;Game Date / Time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By storing all of this my views could render more quickly because they didn’t have to go to the MLB API to get the information.&lt;/p&gt;
&lt;p&gt;Of course, once I did this I realized that the work I had done on the DRF API would also need to be updated.&lt;/p&gt;
&lt;p&gt;Initially I kept putting off the refactoring that was going to have to be done. Finally, I just sat down and did it. And you know what, within 10 minutes I was done.&lt;/p&gt;
&lt;p&gt;I only had to change 3 files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serializers.py&lt;/li&gt;
&lt;li&gt;urls.py&lt;/li&gt;
&lt;li&gt;views.py&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the &lt;code&gt;searializers.py&lt;/code&gt; and &lt;code&gt;views.py&lt;/code&gt; all I had to do was add the new model and then copy and paste what I had done for the previous model.&lt;/p&gt;
&lt;p&gt;For the &lt;code&gt;urls.py&lt;/code&gt; it was just a simple matter of updating the the DRF path and detail path to use the new views I had just created.&lt;/p&gt;
&lt;p&gt;It was so amazingly simple I could barely believe it. This thing I had put off for a couple of weeks because I was afraid it was going to be really hard, just wasn't.&lt;/p&gt;</content><category term="Django"></category><category term="PyCharm"></category><category term="python"></category></entry><entry><title>CBV - Template View</title><link href="https://www.ryancheley.com/cbv-template-view.html" rel="alternate"></link><published>2019-11-03T10:00:00+01:00</published><updated>2019-11-03T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-03:/cbv-template-view.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/TemplateView/"&gt;Classy Class Based Views&lt;/a&gt; the &lt;code&gt;TemplateView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extended version of the &lt;code&gt;View&lt;/code&gt; CBV with the the &lt;code&gt;ContextMixin&lt;/code&gt; and the &lt;code&gt;TemplateResponseMixin&lt;/code&gt; added to it.&lt;/p&gt;
&lt;p&gt;It has several attributes that can be set&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type: will allow …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/TemplateView/"&gt;Classy Class Based Views&lt;/a&gt; the &lt;code&gt;TemplateView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extended version of the &lt;code&gt;View&lt;/code&gt; CBV with the the &lt;code&gt;ContextMixin&lt;/code&gt; and the &lt;code&gt;TemplateResponseMixin&lt;/code&gt; added to it.&lt;/p&gt;
&lt;p&gt;It has several attributes that can be set&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type: will allow you to define the MIME type that the page will return. The default is &lt;code&gt;DEFAULT\_CONTENT\_TYPE&lt;/code&gt; but can be overridden with this attribute.&lt;/li&gt;
&lt;li&gt;extra_context: this can be used as a keyword argument in the &lt;code&gt;as\_view()&lt;/code&gt; but not in the class of the CBV. Adding it there will do nothing&lt;/li&gt;
&lt;li&gt;http_method_name: derived from &lt;code&gt;View&lt;/code&gt; and has the same definition&lt;/li&gt;
&lt;li&gt;response_classes: The response class to be returned by render_to_response method it defaults to a TemplateResponse. See below for further discussion&lt;/li&gt;
&lt;li&gt;template_engine: can be used to specify which template engine to use IF you have configured the use of multiple template engines in your &lt;code&gt;settings.py&lt;/code&gt; file. See the &lt;a href="https://docs.djangoproject.com/en/2.2/topics/templates/#usage"&gt;Usage&lt;/a&gt; section of the Django Documentation on Templates&lt;/li&gt;
&lt;li&gt;template_name: this attribute is required IF the method &lt;code&gt;get\_template\_names()&lt;/code&gt; is not used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More on &lt;code&gt;response_class&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This confuses the ever living crap out of me. The best (only) explanation I have found is by GitHub user &lt;code&gt;spapas&lt;/code&gt; in his article &lt;a href="https://spapas.github.io/2014/09/15/django-non-html-responses/#rendering-to-non-html"&gt;Django non-HTML responses&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;From the previous discussion we can conclude that if your non-HTML response needs a template then you just need to create a subclass of TemplateResponse and assign it to the response&lt;em&gt;class attribute (and also change the content&lt;/em&gt;type attribute). On the other hand, if your non-HTML respond does not need a template to be rendered then you have to override render&lt;em&gt;to&lt;/em&gt;response completely (since the template parameter does not need to be passed now) and either define a subclass of HttpResponse or do the rendering in the render&lt;em&gt;to&lt;/em&gt;response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Basically, if you ever want to use a non-HTML template you’d set this attribute, but it seems available mostly as a ‘just-in-case’ and not something that’s used every day.&lt;/p&gt;
&lt;p&gt;My advise … just leave it as is.&lt;/p&gt;
&lt;h2&gt;When to use the &lt;code&gt;get&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;An answer which makes sense to me that I found on &lt;a href="https://stackoverflow.com/questions/35824904/django-view-get-context-data-vs-get"&gt;StackOverflow&lt;/a&gt; was (slightly modified to make it more understandable)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;if you need to have data available every time, use get_context_data(). If you need the data only for a specific request method (eg. in get), then put it in get.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;When to use the &lt;code&gt;get_template_name&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;This method allows you to easily change a template being used based on values passed through GET.&lt;/p&gt;
&lt;p&gt;This can be helpful if you want to have one template for a super user and another template for a basic user. This helps to keep business logic out of the template and in the view where it belongs.&lt;/p&gt;
&lt;p&gt;This can also be useful if you want to specify several possible templates to use. A list is passed and Django will work through that list from the first element to the last until it finds a template that exists and render it.&lt;/p&gt;
&lt;p&gt;If you don’t specify template_name you have to use this method.&lt;/p&gt;
&lt;h2&gt;When to use the &lt;code&gt;get_context_data&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;See above in the section When to use the &lt;code&gt;get&lt;/code&gt; method&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;TemplateView&lt;/code&gt; derives from &lt;code&gt;View&lt;/code&gt; ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you want to roll your own CBV because you have a super specific use case, starting at the &lt;code&gt;TemplateView&lt;/code&gt; is going to be a good place to start. However, you may find that there is already a view that is going to do what you need it to. Writing your own custom implementation of &lt;code&gt;TemplateView&lt;/code&gt; may be a waste of time &lt;strong&gt;IF&lt;/strong&gt; you haven’t already verified that what you need isn’t already there.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Original Source from Classy Class Based Views &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - View</title><link href="https://www.ryancheley.com/cbv-view.html" rel="alternate"></link><published>2019-10-27T10:00:00+01:00</published><updated>2019-10-27T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-10-27:/cbv-view.html</id><summary type="html">&lt;p&gt;&lt;code&gt;View&lt;/code&gt; is the ancestor of ALL Django CBV. From the great site &lt;a href="http://ccbv.co.uk"&gt;Classy Class Based Views&lt;/a&gt;, they are described as&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Intentionally simple parent class for all views. Only implements dispatch-by-method and simple sanity checking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is no joke. The &lt;code&gt;View&lt;/code&gt; class has almost nothing to it, but it’s a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;View&lt;/code&gt; is the ancestor of ALL Django CBV. From the great site &lt;a href="http://ccbv.co.uk"&gt;Classy Class Based Views&lt;/a&gt;, they are described as&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Intentionally simple parent class for all views. Only implements dispatch-by-method and simple sanity checking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is no joke. The &lt;code&gt;View&lt;/code&gt; class has almost nothing to it, but it’s a solid foundation for everything else that will be done.&lt;/p&gt;
&lt;p&gt;Its implementation has just one attribute &lt;code&gt;http_method_names&lt;/code&gt; which is a list that allows you to specify what http verbs are allowed.&lt;/p&gt;
&lt;p&gt;Other than that, there’s really not much to it. You just write a simple method, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;My Content&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All that gets returned to the page is a simple HTML. You can specify the &lt;code&gt;content_type&lt;/code&gt; if you just want to return JSON or plain text but defining the content_type like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;My Content&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;text plain&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also make the text that is displayed be based on a variable defined in the class.&lt;/p&gt;
&lt;p&gt;First, you need to define the variable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;This is a {View} template and is not used for much of anything but &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;   
             &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;allowing extensions of it for other Views&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then you can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;.&lt;span class="nv"&gt;content&lt;/span&gt;, &lt;span class="nv"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;text/plain&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, as mentioned above you can specify the allowable methods via the attribute &lt;code&gt;http_method_names&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following HTTP methods are allowed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get&lt;/li&gt;
&lt;li&gt;post&lt;/li&gt;
&lt;li&gt;put&lt;/li&gt;
&lt;li&gt;patch&lt;/li&gt;
&lt;li&gt;delete&lt;/li&gt;
&lt;li&gt;head&lt;/li&gt;
&lt;li&gt;options&lt;/li&gt;
&lt;li&gt;trace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default all are allowed.&lt;/p&gt;
&lt;p&gt;If we put all of the pieces together we can see that a really simple &lt;code&gt;View&lt;/code&gt; CBV would look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myView&lt;/span&gt;(&lt;span class="n"&gt;View&lt;/span&gt;):
    &lt;span class="n"&gt;content&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;This is a {View} template and is not used for much of anything but &amp;#39;&lt;/span&gt;   
             &lt;span class="s"&gt;&amp;#39;allowing extensions of it for other Views&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;http_method_names&lt;/span&gt; = [&lt;span class="s"&gt;&amp;#39;get&amp;#39;&lt;/span&gt;]

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="nb"&gt;get&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;_&lt;/span&gt;):
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;content&lt;/span&gt;, &lt;span class="n"&gt;content_type&lt;/span&gt;=&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This &lt;code&gt;View&lt;/code&gt; will return &lt;code&gt;content&lt;/code&gt; to the page rendered as plain text. This CBV is also limited to only allowing &lt;code&gt;get&lt;/code&gt; requests.&lt;/p&gt;
&lt;p&gt;Here’s what it looks like in the browser:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-374" height="320" src="/images/uploads/2019/10/F817D382-9A10-45C6-B30A-D66AAD942F80_4_5005_c.jpeg" width="952"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;View&lt;/code&gt; doesn’t do much, but it’s the case for everything else, so understanding it is going to be important.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>Class Based Views</title><link href="https://www.ryancheley.com/class-based-views.html" rel="alternate"></link><published>2019-10-27T08:00:00+01:00</published><updated>2019-10-27T08:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-10-27:/class-based-views.html</id><summary type="html">&lt;p&gt;As I’ve written about &lt;a href="/my-first-project-after-completing-the-100-days-of-web-in-python.html"&gt;previously&lt;/a&gt; I’m working on a Django app. It’s in a pretty good spot (you should totally check it out over at &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;) and I thought now would be a good time to learn a bit more about some of the ways that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I’ve written about &lt;a href="/my-first-project-after-completing-the-100-days-of-web-in-python.html"&gt;previously&lt;/a&gt; I’m working on a Django app. It’s in a pretty good spot (you should totally check it out over at &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;) and I thought now would be a good time to learn a bit more about some of the ways that I’m rendering the pages.&lt;/p&gt;
&lt;p&gt;I’m using Class Based Views (CBV) and I realized that I really didn’t &lt;a href="https://en.wikipedia.org/wiki/Grok"&gt;grok&lt;/a&gt; how they worked. I wanted to change that.&lt;/p&gt;
&lt;p&gt;I’ll be working on a series where I deep dive into the CBV and work them from several angles and try to get them to do all of the things that they are capable of.&lt;/p&gt;
&lt;p&gt;The first place I’d suggest anyone start to get a good idea of CBV, and the idea of Mixins would be &lt;a href="https://spapas.github.io/2018/03/19/comprehensive-django-cbv-guide/"&gt;SpaPas’ GitHub Page&lt;/a&gt; where he does a really good job of covering many pieces of the CBV. It’s a great resource!&lt;/p&gt;
&lt;p&gt;This is just the intro to this series and my hope is that I’ll publish one of these pieces each week for the next several months as I work my way through all of the various CBV that are available.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>My first project after completing the 100 Days of Web in Python</title><link href="https://www.ryancheley.com/my-first-project-after-completing-the-100-days-of-web-in-python.html" rel="alternate"></link><published>2019-08-31T14:14:00+02:00</published><updated>2019-08-31T14:14:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-08-31:/my-first-project-after-completing-the-100-days-of-web-in-python.html</id><summary type="html">&lt;p&gt;As I mentioned in my last post, after completing the 100 Days of Web in Python I was moving forward with a Django app I wrote.&lt;/p&gt;
&lt;p&gt;I pushed up my first version to Heroku on August 24. At that point it would allow users to add a game that they …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I mentioned in my last post, after completing the 100 Days of Web in Python I was moving forward with a Django app I wrote.&lt;/p&gt;
&lt;p&gt;I pushed up my first version to Heroku on August 24. At that point it would allow users to add a game that they had seen, but when it disaplyed the games it would show a number (the game’s ID) instead of anything useful.&lt;/p&gt;
&lt;p&gt;A few nights ago (Aug 28) I committed a version which allows the user to see which game they add, i.e. there are actual human readable details versus just a number!&lt;/p&gt;
&lt;p&gt;The page can be found &lt;a href="https://www.stadiatracker.com"&gt;here&lt;/a&gt;. It feels really good to have it up in a place where people can actually see it. That being said I discovered a a couple of things on the publish that I’d like to fix.&lt;/p&gt;
&lt;p&gt;I have a method that returns details about the game. One problem is that if any of the elements return &lt;code&gt;None&lt;/code&gt; then the front page returns a Server 500 error ... this is not good.&lt;/p&gt;
&lt;p&gt;It took a bit of googling to see what the issue was. The way I found the answer was to see an idea to turn Debug to True on my ‘prod’ server and see the output. That helped me identify the issue.&lt;/p&gt;
&lt;p&gt;To ‘fix’ it in the short term I just deleted all of the data for the games seen in the database.&lt;/p&gt;
&lt;p&gt;I’m glad that it happened because it taught me some stuff that I knew I needed to do, but maybe didn’t pay enough attention to ... like writing unit tests.&lt;/p&gt;
&lt;p&gt;Based on that experience I wrote out a roadmap of sorts for the updates I want to get into the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tests for all classes and methods&lt;/li&gt;
&lt;li&gt;Ability to add minor league games&lt;/li&gt;
&lt;li&gt;Create a Stadium Listing View&lt;/li&gt;
&lt;li&gt;More robust search tool that allows a single team to be selected&lt;/li&gt;
&lt;li&gt;Logged in user view for only their games&lt;/li&gt;
&lt;li&gt;Create a List View of games logged per stadium&lt;/li&gt;
&lt;li&gt;Create a List View of attendees (i.e. users) at games logged&lt;/li&gt;
&lt;li&gt;Add more user features:&lt;ul&gt;
&lt;li&gt;Ability to add a picture&lt;/li&gt;
&lt;li&gt;Ability to add Twitter handle&lt;/li&gt;
&lt;li&gt;Ability to add Instagram handle&lt;/li&gt;
&lt;li&gt;Ability to add game notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a Heroku Pipeline to ensure that pushes to PROD are done through a UAT site&lt;/li&gt;
&lt;li&gt;Create a blog (as a pelican standalone sub domain)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a lot of things but I’ve already done some things that I wanted to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added SSL&lt;/li&gt;
&lt;li&gt;Set up to go to actual domain instead of Heroku subdomain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll write up how I did the set up for the site so I can do it again. It’s not well documented when your registrar is Hover and you’ve got your site on Heroku. Man ... it was an tough.&lt;/p&gt;</content><category term="Django"></category><category term="django"></category><category term="Heroku"></category><category term="Stadia Tracker"></category></entry><entry><title>My Experience with the 100 Days of Web in Python</title><link href="https://www.ryancheley.com/my-experience-with-the-100-days-of-web-in-python.html" rel="alternate"></link><published>2019-08-18T09:42:00+02:00</published><updated>2019-08-18T09:42:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-08-18:/my-experience-with-the-100-days-of-web-in-python.html</id><summary type="html">&lt;p&gt;As soon as I discovered the Talk Python to me Podcast, I discovered the Talk Python to me courses. Through my job I have a basically free subscription to PluralSight so I wasn’t sure that I needed to pay for the courses when I was effectively getting courses in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As soon as I discovered the Talk Python to me Podcast, I discovered the Talk Python to me courses. Through my job I have a basically free subscription to PluralSight so I wasn’t sure that I needed to pay for the courses when I was effectively getting courses in Python for free.&lt;/p&gt;
&lt;p&gt;After taking a couple ( well, truth be told, all ) of the Python courses at PluralSight, I decided, what the heck, the courses at Talk Python looked interesting, Michael Kennedy has a good instructor’s voice and is genuinely excited about Python, and if it didn’t work out, it didn’t work out.&lt;/p&gt;
&lt;p&gt;I’m so glad I did, and I’m so glad I went through the 100 Days of Web in Python course.&lt;/p&gt;
&lt;p&gt;On May 2, 2019 I saw that the course had been released and I &lt;a href="https://mobile.twitter.com/ryancheley/status/1124127232262152192" title="This!"&gt;tweeted&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This x 1000000! Thank you so much \@TalkPython. I can’t wait to get started!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I started on the course on May 4, 2019 and completed it August 11, 2019. Full details on the course are &lt;a href="https://training.talkpython.fm/courses/details/100-days-of-web-in-python" title="#100DaysOfWeb in Python"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of the 28 concepts that were reviewed over the course, my favorites things were learning &lt;a href="https://www.djangoproject.com" title="Django Project"&gt;Django&lt;/a&gt; and &lt;a href="https://www.django-rest-framework.org" title="DRF"&gt;Django Rest Framework&lt;/a&gt; and &lt;a href="https://blog.getpelican.com" title="Pelican"&gt;Pelican&lt;/a&gt;. Holy crap, those parts were just so much fun for me. Part of my interest in Django and DRF comes from &lt;a href="https://wsvincent.com/books/" title="Will Vincent Books"&gt;William S Vincent’s books&lt;/a&gt; and Podcast &lt;a href="https://djangochat.com" title="Django Chat"&gt;Django Chat&lt;/a&gt;, but having actual videos to watch to get me through some of the things that have been conceptually tougher for me was a godsend.&lt;/p&gt;
&lt;p&gt;The other part that I really liked was actual deployment to a server. I had tried (about 16 months ago) to deploy a Django app to Digital Ocean and it was an unmitigated disaster. No static files no matter what I did. I eventually gave up.&lt;/p&gt;
&lt;p&gt;In this course I really learned how to deploy to both &lt;a href="https://www.heroku.com" title="Heroku"&gt;Heroku&lt;/a&gt; and a Linux box on &lt;a href="https://www.digitalocean.com" title="Digital Ocean"&gt;Digital Ocean&lt;/a&gt;, and so now I feel much more confident that the app I’m working on (more on that below) will actually see the light of day on something other than a dev machine!&lt;/p&gt;
&lt;p&gt;The one thing that I started to build (and am continuing to work on) is an app with a DRF backend and a Vue.js front end that allows a user to track which Baseball &lt;a href="https://www.writing-skills.com/is-it-stadia-or-stadiums" title="I’m going with the proper Latin pluralization because I’m fancy like that"&gt;stadia&lt;/a&gt; they’ve been to. So far I have an API set up via DRF (hosted at Heroku) and sketches of what to do in Vue.js. There's also a Django front end (but it’s not the solution I really want to use).&lt;/p&gt;
&lt;p&gt;Writing code for 100 days is hard. Like really hard. For nearly 20 of those days I was on a family vacation in the Mid Western part of the US, but I made time for both the coding, and my family. My family was super supportive of my goal which was helpful, but the content in the course was really interesting and challenging and made me want to do it every day, which was also super helpful.&lt;/p&gt;
&lt;p&gt;On day 85 I got a video from Bob that helped get me through the last 2 weeks. It was encouraging, and helpful which is just what I needed. So thank you Bob.&lt;/p&gt;
&lt;p&gt;At the end I also got a nice &lt;a href="https://www.bonjoro.com/g/Wveg23mstaE"&gt;congratulatory video&lt;/a&gt; from Julian, which was surprising to say the least, especially because he called out some of the things that I tweeted that I enjoyed about the class, addressed me by name, and just genuinely made me feel good about my accomplishment!&lt;/p&gt;
&lt;p&gt;OK. I just wrapped up the 100 Days of Code with Python and the web. Now what?&lt;/p&gt;
&lt;p&gt;I took a week off to recuperate and am now ready to ‘get back to it’.&lt;/p&gt;
&lt;p&gt;After all, I’ve got baseball stadia to track in my app!&lt;/p&gt;
&lt;h1&gt;Talk Python to me Podcast&lt;/h1&gt;
&lt;p&gt;Why I like the Talk Python Podcast&lt;/p&gt;
&lt;p&gt;When I started listening to it&lt;/p&gt;
&lt;p&gt;Listening to the back catalog (nearly all of it)&lt;/p&gt;</content><category term="Python"></category><category term="coding"></category><category term="python"></category></entry><entry><title>Epic Family Road trip - 2019 edition</title><link href="https://www.ryancheley.com/epic-family-road-trip-2019-edition.html" rel="alternate"></link><published>2019-07-28T11:20:00+02:00</published><updated>2019-07-28T11:20:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-07-28:/epic-family-road-trip-2019-edition.html</id><summary type="html">&lt;p&gt;My daughter Abby was in the Robotics class at school this year. This gave her (and us as a family) the opportunity to go to the &lt;a href="https://kipr.org/global-conference-on-educational-robotics"&gt;Global Conference on Educational and Robotics&lt;/a&gt; which was held in Norman, Oklahoma.&lt;/p&gt;
&lt;p&gt;Being in Oklahoma we had a golden opportunity to road trip from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My daughter Abby was in the Robotics class at school this year. This gave her (and us as a family) the opportunity to go to the &lt;a href="https://kipr.org/global-conference-on-educational-robotics"&gt;Global Conference on Educational and Robotics&lt;/a&gt; which was held in Norman, Oklahoma.&lt;/p&gt;
&lt;p&gt;Being in Oklahoma we had a golden opportunity to road trip from Oklahoma back to home in California, so we did.&lt;/p&gt;
&lt;p&gt;The trip went like this:&lt;/p&gt;
&lt;p&gt;Fly from San Diego to Oklahoma City via Phoenix. Once we landed we were in the Oklahoma City / Norman area for a week as Abby competed in GCER.&lt;/p&gt;
&lt;p&gt;While there, Emily and I were able explore quite a bit visiting Down Town Norman very nearly every day we were there. The neatest part of the Oklahoma segment was our drive down to Washington, OK where Emily’s grand father was born (or spent time as a child ... I’m not really sure).&lt;/p&gt;
&lt;p&gt;Once we left Oklahoma we started the road trip in earnest. I’ve tried to create a Google Maps version of the trip, but the number of places we stopped is more than you can enter into a trip in Google maps.&lt;/p&gt;
&lt;p&gt;Here are the vital statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;miles driven: 3730&lt;/li&gt;
&lt;li&gt;cities visited: 17&lt;/li&gt;
&lt;li&gt;national parks visited: 7&lt;/li&gt;
&lt;li&gt;Baseball games seen: 3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And here are the details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Norman, OK&lt;/li&gt;
&lt;li&gt;Joplin, MO&lt;/li&gt;
&lt;li&gt;St. Louis, MO&lt;/li&gt;
&lt;li&gt;Hermann, MO&lt;/li&gt;
&lt;li&gt;Jefferson City, MO&lt;/li&gt;
&lt;li&gt;Kansas City, MO&lt;/li&gt;
&lt;li&gt;Omaha, NE&lt;/li&gt;
&lt;li&gt;Sioux Falls, SD&lt;/li&gt;
&lt;li&gt;De Smet, SD&lt;/li&gt;
&lt;li&gt;Pierre, SD&lt;/li&gt;
&lt;li&gt;Black Hills, SD&lt;/li&gt;
&lt;li&gt;Box Elder, SD&lt;/li&gt;
&lt;li&gt;Rapid City, SD&lt;/li&gt;
&lt;li&gt;Jewel Cave&lt;/li&gt;
&lt;li&gt;Wind Cave&lt;/li&gt;
&lt;li&gt;Hot Springs, SD&lt;/li&gt;
&lt;li&gt;Cheyenne, WY&lt;/li&gt;
&lt;li&gt;Greely, CO&lt;/li&gt;
&lt;li&gt;Denver, CO&lt;/li&gt;
&lt;li&gt;Grand Junction, CO&lt;/li&gt;
&lt;li&gt;Arches National Park, UT&lt;/li&gt;
&lt;li&gt;Cedar City, UT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We got to watch the OKC Dodgers, St. Louis Cardinals, and Kansas City Royals all play and in each case the home team won. This was good because none of the MLB teams we saw were playing the LA Dodgers, and it’s always fun to see the home team win.&lt;/p&gt;
&lt;p&gt;Finally, I also learned some things on the trip:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a ton of stuff to do in Norman&lt;/li&gt;
&lt;li&gt;Missouri is &lt;em&gt;really&lt;/em&gt; into World War I and its kind of weird&lt;/li&gt;
&lt;li&gt;Omaha is the Silicon Valley of the midwest ... so much so that they call it the Silicon Prairie&lt;/li&gt;
&lt;li&gt;Denver isn't actually in the mountains. It's just really high in the Great Plains on the way to the Rockies&lt;/li&gt;
&lt;li&gt;Grand Junction In NOT a mountain town&lt;/li&gt;
&lt;li&gt;Cedar City is more than just the little Main Street that I've seen before ... we stayed at a farm while we were there&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The family is all glad to be home, and tomorrow it’s back to normal life. I have to say, I’m really looking forward to it.&lt;/p&gt;</content><category term="Musings"></category><category term="personal"></category><category term="roadtrip"></category><category term="vacation"></category></entry><entry><title>Taking Down the RPi Camera Over My Hummingbird Feeder</title><link href="https://www.ryancheley.com/taking-down-the-rpi-camera-over-my-hummingbird-feeder.html" rel="alternate"></link><published>2019-06-23T14:43:00+02:00</published><updated>2019-06-23T14:43:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-06-23:/taking-down-the-rpi-camera-over-my-hummingbird-feeder.html</id><summary type="html">&lt;p&gt;As the temperature heats up it’s time to take down my hummingbird feeder. While the winds have cooled down the valley for the last few days, 100+ days are slowly creeping in and I need to take it down before the CPU melts.&lt;/p&gt;
&lt;p&gt;When I took it down last …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As the temperature heats up it’s time to take down my hummingbird feeder. While the winds have cooled down the valley for the last few days, 100+ days are slowly creeping in and I need to take it down before the CPU melts.&lt;/p&gt;
&lt;p&gt;When I took it down last year I though, meh, how hard could it be to put back up. And then I put it back up in the Fall last year and had nothing but problems.&lt;/p&gt;
&lt;p&gt;This year, I wanted to document the wires and what not so that I can just put it back up once the temps cool down outside.&lt;/p&gt;
&lt;p&gt;Anyway, I could describe it or just take some pictures ... so here are some pictures for when I need to set it up again later this year.&lt;/p&gt;
&lt;p&gt;Above the feeder:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-359" height="3024" src="/images/uploads/2019/06/Image-6-23-19-3-39-PM.png" width="4032"&gt;&lt;/p&gt;
&lt;p&gt;Wires to the sensor:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-357" height="3024" src="/images/uploads/2019/06/Image-6-22-19-11-03-AM.png" width="4032"&gt;&lt;/p&gt;
&lt;p&gt;Wires to the GPIO pins:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-358" height="3024" src="/images/uploads/2019/06/Image-6-22-19-11-03-AM-1.png" width="4032"&gt;&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="Hummingbird"></category><category term="setup"></category></entry><entry><title>Figuring out how Drafts REALLY works</title><link href="https://www.ryancheley.com/figuring-out-how-drafts-really-works.html" rel="alternate"></link><published>2019-05-05T08:15:00+02:00</published><updated>2019-05-05T08:15:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-05-05:/figuring-out-how-drafts-really-works.html</id><summary type="html">&lt;p&gt;On my way back from Arizona a few weeks ago I decided to play around with Drafts a bit. Now I use Drafts every day. When it went to a subscription model more than a year ago it was a no brainer for me. This is a seriously powerful app …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On my way back from Arizona a few weeks ago I decided to play around with Drafts a bit. Now I use Drafts every day. When it went to a subscription model more than a year ago it was a no brainer for me. This is a seriously powerful app when you need it.&lt;/p&gt;
&lt;p&gt;But since my initial workflows and shortcuts I've not really done too &lt;a href="/creating-hastags-for-social-media-with-a-drafts-action.html"&gt;much&lt;/a&gt; with it. But after listening to some stuff from &lt;a href="https://nahumck.me"&gt;Tim Nahumck&lt;/a&gt; I decided I needed to invest a little time ... and honestly there's no better time than cruising at 25k feet on your way back from Phoenix.&lt;/p&gt;
&lt;p&gt;Ok, first of all I never really understood workspaces. I had some set up but I didn't get it. That was the first place I started.&lt;/p&gt;
&lt;p&gt;Each workspace can have its own action and keyboard shortcut thing which I didn't realize. This has so much potential. I can create workspaces for all sorts of things and have the keyboard shortcut things I need when I need them! This alone is mind blowing and I'm disappointed I didn't look into this feature sooner.&lt;/p&gt;
&lt;p&gt;I have 4 workspaces set up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OF Templates&lt;/li&gt;
&lt;li&gt;O3&lt;/li&gt;
&lt;li&gt;Scrum&lt;/li&gt;
&lt;li&gt;post ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Initially since I didn't really understand the power of the workspace I had them mostly as filtering tools to be used when trying to find a draft. But now with the custom action and keyboards for each workspace I have them set up to filter down to specific tags AND use their own keyboards.&lt;/p&gt;
&lt;p&gt;The OF Template workspace is used to create OmniFocus projects based on Taskpaper markup. There are a ton of different actions that I took from &lt;a href="https://www.relay.fm/people/rose-orchard"&gt;Rose Orchard&lt;/a&gt; (of &lt;a href="https://automators.fm"&gt;Automators&lt;/a&gt; fame) that help to either add items with the correct syntax to a Task Paper markdown file OR turn the whole thing into an OmniFocus project. Simply a life saver for when I really know all of the steps that are going to be involved in a project and I want to write them all down!&lt;/p&gt;
&lt;p&gt;The O3 workspace is used for processing the notes from the one-on-one I have with my team. There's really only two actions: Parse O3 notes and Add to O3 notes. How are these different? I have a Siri Shortcut that populates a Draft with a template that collects the name of the person and the date time that the O3 occurred. This is the note that is parsed by the first action. The second action is used when someone does something that I want to remember (either good or bad) so that I can bring it up at a more appropriate time (the best time to tell someone about a behavior is right now, but sometimes circumstances prevent that) so I have this little action.&lt;/p&gt;
&lt;p&gt;In both cases they append data to a markdown file in Dropbox (i have one file per person that reports to me). The Shortcut also takes any actions that need to be completed and adds them to OmniFocus for me to review later.&lt;/p&gt;
&lt;p&gt;The third workspace is Scrum. This workspace has just one action which is "Parse scrum notes". Again, I have a template that is generated from Siri Shortcuts and dropped into Drafts. During the morning standup meetings I have with my team this Draft will have the things I did yesterday, what I'm working on today, and any roadblocks that I have. It also create a section where I can add actions which when the draft is parsed goes into OmniFocus for me to review later (currently the items get added with a due date of today at 1pm ... but I need to revisit that).&lt;/p&gt;
&lt;p&gt;The last workspace is post ideas (which is where I'm writing this from). Its custom keyboard is just a markdown one with quick ways to add markdown syntax and a Preview button so I can see what the markdown will render out as.&lt;/p&gt;
&lt;p&gt;It's still a work in progress as this draft will end up in Ulysses so it can get posted to my site, &lt;a href="https://www.macstories.net/reviews/drafts-5-4-siri-shortcuts-wordpress-and-more/"&gt;but I've seen that I can even post from Drafts to Wordpress&lt;/a&gt; so I'm going to give that a shot later on.&lt;/p&gt;
&lt;p&gt;There are several other ideas I have bouncing around in my head about ideas for potential workspaces. My only concern at this point is how many workspaces can I have before there are too many to be used effectively.&lt;/p&gt;
&lt;p&gt;So glad I had the time on the flight to take a look at workspaces. A huge productivity boost for me!&lt;/p&gt;</content><category term="Automation"></category><category term="Drafts"></category><category term="iOS"></category><category term="Writing"></category></entry><entry><title>Upgrading Python in a Virtual Environment</title><link href="https://www.ryancheley.com/upgrading-python-in-a-virtual-environment.html" rel="alternate"></link><published>2019-04-25T05:05:00+02:00</published><updated>2019-04-25T05:05:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-04-25:/upgrading-python-in-a-virtual-environment.html</id><summary type="html">&lt;p&gt;I have been wanting to use my Heroku account for a while with something a little more interesting than a &lt;a href="https://ryan-jupyter.herokuapp.com"&gt;Jupiter Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was hoping to try and do something with Django … but there’s a lot to using Django. I have some interesting things I’m doing on my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been wanting to use my Heroku account for a while with something a little more interesting than a &lt;a href="https://ryan-jupyter.herokuapp.com"&gt;Jupiter Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was hoping to try and do something with Django … but there’s a lot to using Django. I have some interesting things I’m doing on my local machine, but it’s not quite ready yet.&lt;/p&gt;
&lt;p&gt;I had googled to find other Python Web frameworks and saw that Bottle was an even more light weight framework than Flask, so I thought, hey, maybe I can do something with that.&lt;/p&gt;
&lt;p&gt;I found &lt;a href="https://github.com/chucknado/bottle_heroku_tutorial/blob/master/README.md#reqs"&gt;this&lt;/a&gt; tutorial on how to do something relatively simple with Bottle and deploying to Heroku. Just what I wanted!&lt;/p&gt;
&lt;p&gt;I got through to the end of the tutorial and deployed to Heroku. The terminal output from the Heroku command indicated that a newer version of Python (3.7.3) was available than the one I was on (3.7.1).&lt;/p&gt;
&lt;p&gt;I figured it would be easy enough to upgrade to the newest version of Python on my Mac because I had done it &lt;a href="/keeping-python-up-to-date-on-macos.html"&gt;before&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I don’t know why I thought the virtual environment would be different than the local install of Python 3 but it turns out they are more tightly coupled than I thought.&lt;/p&gt;
&lt;p&gt;Upgrading to 3.7.3 broke the virtual environment I had in PyCharm. I did a bit a googling to see how to upgrade a virtual environment and found nothing. Like literally nothing.&lt;/p&gt;
&lt;p&gt;It was ... disheartening. But after a good night’s sleep I had a thought! What if I just delete the virtual environment directory and then recreated it.&lt;/p&gt;
&lt;p&gt;I ran this command to remove the virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -R venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then created a virtual environment in PyCharm and now I have 3.7.3 in my virtual environment.&lt;/p&gt;
&lt;p&gt;I had to make some changes to the files for deployment to Heroku, but that’s all covered in the tutorial mentioned above.&lt;/p&gt;
&lt;p&gt;Sometimes the answer is to &lt;a href="/did-you-try-restarting-it.html"&gt;just restart it&lt;/a&gt; … and sometimes the answer is delete it and start over.&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;I was listening to an &lt;a href="https://overcast.fm/+HjKUtfFUQ/13:45"&gt;episode of Python Bytes&lt;/a&gt; and heard &lt;a href="https://mobile.twitter.com/mkennedy"&gt;Michael Kennedy&lt;/a&gt; (of &lt;a href="https://talkpython.fm/home"&gt;Talk Python to Me&lt;/a&gt; fame) describing basically the same issue I had. Turns out, he solved it the same way I did. Nice to know i’m In good company.&lt;/p&gt;</content><category term="Python"></category><category term="Heroku"></category><category term="PyCharm"></category><category term="venv"></category><category term="Virtual Environment"></category></entry><entry><title>Did you try restarting it?</title><link href="https://www.ryancheley.com/did-you-try-restarting-it.html" rel="alternate"></link><published>2019-04-07T18:54:00+02:00</published><updated>2019-04-07T18:54:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-04-07:/did-you-try-restarting-it.html</id><summary type="html">&lt;p&gt;The number of times an issue is resolved with a simple reboot is amazing. It’s why when you call tech support (for anything) it’s always the first thing they ask you.&lt;/p&gt;
&lt;p&gt;Even with my experience in tech I can forget this one little trick when troubleshooting my own …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The number of times an issue is resolved with a simple reboot is amazing. It’s why when you call tech support (for anything) it’s always the first thing they ask you.&lt;/p&gt;
&lt;p&gt;Even with my experience in tech I can forget this one little trick when troubleshooting my own stuff. I don’t have a tech support line to call so I have to google, and google and google, and since the assumption is that I’ve already rebooted, it’s not a standard answer that’s put out there. (I mean, of course I rebooted to see if that fixed the problem).&lt;/p&gt;
&lt;p&gt;I’ve written before about my &lt;a href="/setting-up-itfdb-with-a-voice.html"&gt;ITFDB and the announcement from Vin Scully “It’s Time for Dodger Baseball!”&lt;/a&gt;. With the start of the 2019 season the mp3 stopped playing.&lt;/p&gt;
&lt;p&gt;I tried all sorts of fixes. I made sure the Pi was up to date with &lt;code&gt;apt-get update&lt;/code&gt; and &lt;code&gt;apt-get upgrade&lt;/code&gt;. I thought maybe the issue was due to the version of Python running on the Pi (3.4.2). I thought maybe the mp3 had become corrupt and tried to regenerate it.&lt;/p&gt;
&lt;p&gt;None of these things worked. Finally I found &lt;a href="#"&gt;this post&lt;/a&gt; and the answer was so obvious. To quote the answer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Have you tried rebooting?&lt;/p&gt;
&lt;p&gt;It's a total shot in the dark, but I just transitioned from XBMC to omxplayer and lost sound. What I did:&lt;/p&gt;
&lt;h1&gt;apt-get remove xbmc&lt;/h1&gt;
&lt;h1&gt;apt-get autoremove&lt;/h1&gt;
&lt;h1&gt;apt-get update&lt;/h1&gt;
&lt;h1&gt;apt-get upgrade&lt;/h1&gt;
&lt;p&gt;After that I lost sound. 10 minutes of frustration later I rebooted and everything worked again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It wasn’t exactly my problem, but upon seeing it I decided “What the hell?” And you know what, it totally worked.&lt;/p&gt;
&lt;p&gt;I wish I would have checked to see when the last time a reboot had occurred, but it didn’t occur to me until I started writing this post. Oh well … it doesn’t really matter because it works now.&lt;/p&gt;</content><category term="Musings"></category><category term="Reboot"></category><category term="Tech Support"></category></entry><entry><title>Creating Hastags for Social Media with a Drafts Action</title><link href="https://www.ryancheley.com/creating-hastags-for-social-media-with-a-drafts-action.html" rel="alternate"></link><published>2019-03-30T05:46:00+01:00</published><updated>2019-03-30T05:46:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-03-30:/creating-hastags-for-social-media-with-a-drafts-action.html</id><summary type="html">&lt;p&gt;Creating meaningful, long #hastags can be a pain in the butt.&lt;/p&gt;
&lt;p&gt;There you are, writing up a witty tweet or making that perfect caption for your instagram pic and you realize that you have a fantastic idea for a hash tag that is more of a sentence than a single …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Creating meaningful, long #hastags can be a pain in the butt.&lt;/p&gt;
&lt;p&gt;There you are, writing up a witty tweet or making that perfect caption for your instagram pic and you realize that you have a fantastic idea for a hash tag that is more of a sentence than a single word.&lt;/p&gt;
&lt;p&gt;You proceed to write it out and unleash your masterpiece to the world and just as you hit the submit button you notice that you have a typo, or the wrong spelling of a word and #ohcrap you need to delete and retweet!&lt;/p&gt;
&lt;p&gt;That lead me to write a &lt;a href="https://getdrafts.com"&gt;Drafts&lt;/a&gt; Action to take care of that.&lt;/p&gt;
&lt;p&gt;I’ll leave &lt;a href="https://www.macstories.net/reviews/drafts-5-the-macstories-review/"&gt;others to write about the virtues of Drafts&lt;/a&gt;, but it’s fantastic.&lt;/p&gt;
&lt;p&gt;The Action I created has two steps: (1) to run some JavaScript and (2) to copy the contents of the draft to the Clipboard. You can get my action &lt;a href="https://actions.getdrafts.com/a/1Uo"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here’s the JavaScript that I used to take a big long sentence and turn it into a social media worthy hashtag&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;draft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;newContents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newContents&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Super simple, but holy crap does it help!&lt;/p&gt;</content><category term="Automation"></category><category term="Drafts"></category><category term="JavaScript"></category><category term="Social Media"></category></entry><entry><title>Making it easy to ssh into a remote server: Addendum</title><link href="https://www.ryancheley.com/making-it-easy-to-ssh-into-a-remote-server-addendum.html" rel="alternate"></link><published>2019-03-25T18:30:00+01:00</published><updated>2019-03-25T18:30:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-03-25:/making-it-easy-to-ssh-into-a-remote-server-addendum.html</id><summary type="html">&lt;p&gt;I recently got a new raspberry pi (yes, I might have a problem) and wanted to be able to ssh into it without having to remember the IP or password. Luckily I wrote &lt;a href="/making-it-easy-to-ssh-into-a-remote-server.html"&gt;this helpful post&lt;/a&gt; several months ago.&lt;/p&gt;
&lt;p&gt;While it go me most of the way there, I did …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently got a new raspberry pi (yes, I might have a problem) and wanted to be able to ssh into it without having to remember the IP or password. Luckily I wrote &lt;a href="/making-it-easy-to-ssh-into-a-remote-server.html"&gt;this helpful post&lt;/a&gt; several months ago.&lt;/p&gt;
&lt;p&gt;While it go me most of the way there, I did run into a slight issue.&lt;/p&gt;
&lt;h2&gt;First Issue&lt;/h2&gt;
&lt;p&gt;The issue was that I had a typo for the command to generate a key. I had:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keyken -t rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Which should have been:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When I copied and pasted the original command the terminal said there was no such command. 🤦‍♂️&lt;/p&gt;
&lt;h2&gt;Second Issue&lt;/h2&gt;
&lt;p&gt;Once that go cleared up I went through the steps and was able to get everything set up. Or so I thought. On attempting to ssh into my new pi I was greeted with a password prompt. WTF?&lt;/p&gt;
&lt;p&gt;The first thing I did was to check to see what keys were in my \~/.ssh folder. Sure enough there were a couple of them in there.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls ~/.ssh
id_rsa             id_rsa.github      id_rsa.github.pub  id_rsa.pub         known_hosts        read_only_key      read_only_key.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I interrogated the help command for &lt;code&gt;ssh-copy-id&lt;/code&gt; to see what flags were available.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;Usage&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-h|-?|-f|-n&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-i [identity_file&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-p port&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[-o &amp;lt;ssh -o options&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;user@&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;force&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trying&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;check&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;they&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;actually&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copied&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;|-&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I figured let’s try the &lt;code&gt;-n&lt;/code&gt; flag and get the output from that. Doing so gave me&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="nv"&gt;@Ryans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;MBP&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="nv"&gt;@newpi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;installed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/Users/ryan/.ssh/id_rsa.github.pub&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;attempting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;any&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;All&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;were&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;skipped&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;because&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;they&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;exist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;think&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mistake&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;may&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … why is it sending the GitHub key? That’s a different problem for a different time. I see another flag available is the &lt;code&gt;-i&lt;/code&gt; which will allow me to specify which key I want to send. Aha!&lt;/p&gt;
&lt;p&gt;OK, now all that I need to do is use the following command to test the output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="nv"&gt;@newpi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And sure enough it’s sending the correct key&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;: &lt;span class="nv"&gt;INFO&lt;/span&gt;: &lt;span class="nv"&gt;Source&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;installed&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;/Users/ryan/.ssh/id_rsa.pub&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;: &lt;span class="nv"&gt;INFO&lt;/span&gt;: &lt;span class="nv"&gt;attempting&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;log&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;filter&lt;/span&gt; &lt;span class="nv"&gt;out&lt;/span&gt; &lt;span class="nv"&gt;any&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;already&lt;/span&gt; &lt;span class="nv"&gt;installed&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;: &lt;span class="nv"&gt;WARNING&lt;/span&gt;: &lt;span class="nv"&gt;All&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt; &lt;span class="nv"&gt;were&lt;/span&gt; &lt;span class="nv"&gt;skipped&lt;/span&gt; &lt;span class="nv"&gt;because&lt;/span&gt; &lt;span class="nv"&gt;they&lt;/span&gt; &lt;span class="nv"&gt;already&lt;/span&gt; &lt;span class="nv"&gt;exist&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;remote&lt;/span&gt; &lt;span class="nv"&gt;system&lt;/span&gt;.
        &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;think&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;mistake&lt;/span&gt;, &lt;span class="nv"&gt;you&lt;/span&gt; &lt;span class="nv"&gt;may&lt;/span&gt; &lt;span class="nv"&gt;want&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="nv"&gt;option&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Remove the &lt;code&gt;-n&lt;/code&gt; flag to send it for real&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="nv"&gt;@newpi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And try to ssh in again&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="nv"&gt;@newpi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Success!&lt;/p&gt;
&lt;p&gt;I wanted to write this up for 2 reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;So I can refer back to it if I ever need to. This blog is mostly for me to write down technical things that I do so I can remember them later on&lt;/li&gt;
&lt;li&gt;This is the first time I’ve run into an issue with a command like tool and simply used the help to figure out how to fix the problem and I wanted to memorialize that. It felt &lt;a href="https://thegoodplace.fandom.com/wiki/Censored_Curse_Words"&gt;forking&lt;/a&gt; awesome to do that.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Footnote: Yes … calling my new raspberry pi &lt;code&gt;newpi&lt;/code&gt; in my hosts file is dumb. Yes, when I get my next new Raspberry Pi I will be wondering what to call it. YEs, I am going to try and remember to make the change before it happens so that I don’t end up with the next Pi being called &lt;code&gt;newnewpi&lt;/code&gt; and the one after that being &lt;code&gt;newnewnewpi&lt;/code&gt;&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="SSH"></category></entry><entry><title>Receipts</title><link href="https://www.ryancheley.com/receipts.html" rel="alternate"></link><published>2019-03-16T05:37:00+01:00</published><updated>2019-03-16T05:37:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-03-16:/receipts.html</id><summary type="html">&lt;p&gt;Every month I set up a budget for my family so that we can track our spending and save money in the ways that we need to while still being able to enjoy life.&lt;/p&gt;
&lt;p&gt;I have a couple of Siri Shortcuts that will take a picture and then put that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every month I set up a budget for my family so that we can track our spending and save money in the ways that we need to while still being able to enjoy life.&lt;/p&gt;
&lt;p&gt;I have a couple of Siri Shortcuts that will take a picture and then put that picture into a folder in Dropbox. The reason that I have a couple of them is that one is for physical receipts that we got at a store and the other is for online purchases. I’m sure that these couple be combined into one, but I haven’t done that yet.&lt;/p&gt;
&lt;p&gt;One of the great things about these shortcuts is that they will create the folder that the image will go into if it’s not there. For example, the first receipt of March 2019 will create a folder called &lt;strong&gt;March&lt;/strong&gt; in the &lt;strong&gt;2019&lt;/strong&gt; folder. If the &lt;strong&gt;2019&lt;/strong&gt; folder wasn’t there, it would have created it too.&lt;/p&gt;
&lt;p&gt;What it doesn’t do is create the sub folder that all of my processed receipts will go into. Each month I need to create a folder called &lt;code&gt;month_name&lt;/code&gt; Processed. And each month I think, there must be a way I can automate this, but because it doesn’t really take that long I’ve never really done it.&lt;/p&gt;
&lt;p&gt;Over the weekend I finally had the time to try and write it up and test it out. Nothing too fancy, but it does what I want it to do, and a little more.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# create the variables I&amp;#39;m going to need later&lt;/span&gt;

&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%B&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%B_Processed&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# check to see if the Year folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# check to see if the Month folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Financials&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;#check to see if the Month_Processed folder exists and if it doesn&amp;#39;t, create it&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/Users/ryan/Dropbox/Family/Financials/$y/$m/$p&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/Users/ryan/Dropbox/Family/Financials/$y/$m/$p&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last section I use the double quotes “” around the directory name so that I can have a space in the name of the processed folder. Initially I had used an underscore but that’s not how I do it in real life when creating the sub directors, so I had to do a bit of googling and found a helpful &lt;a href="https://ubuntuforums.org/showthread.php?t=1962625"&gt;resource&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only thing left to do at this point is get it set up to run automatically so I don’t have to do anything.&lt;/p&gt;
&lt;p&gt;In order to do that I needed to add the following to my cronjob:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;5&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_monthly_expense_folders&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now I will have my folder structure created for me automatically on the first of the month at 5am!&lt;/p&gt;</content><category term="Automation"></category><category term="iOS"></category><category term="Siri Shortcuts"></category></entry><entry><title>Keeping Python up to date on macOS</title><link href="https://www.ryancheley.com/keeping-python-up-to-date-on-macos.html" rel="alternate"></link><published>2018-12-22T04:08:00+01:00</published><updated>2018-12-22T04:08:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-12-22:/keeping-python-up-to-date-on-macos.html</id><summary type="html">&lt;p&gt;Sometimes the internet is a horrible, awful, ugly thing. And then other times, it’s exactly what you need.&lt;/p&gt;
&lt;p&gt;I have 2 Raspberry Pi each with different versions of Python. One running python 3.4.2 and the other running Python 3.5.3. I have previously tried to upgrade …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes the internet is a horrible, awful, ugly thing. And then other times, it’s exactly what you need.&lt;/p&gt;
&lt;p&gt;I have 2 Raspberry Pi each with different versions of Python. One running python 3.4.2 and the other running Python 3.5.3. I have previously tried to upgrade the version of the Pi running 3.5.3 to a more recent version (in this case 3.6.1) and read 10s of articles on how to do it. It did not go well. Parts seemed to have worked, while others didn’t. I have 3.6.1 installed, but in order to run it I have to issue the command &lt;code&gt;python3.6&lt;/code&gt; which is &lt;em&gt;fine&lt;/em&gt; but not really what I was looking for.&lt;/p&gt;
&lt;p&gt;For whatever reason, although I do nearly all of my Python development on my Mac, it hadn’t occurred to me to upgrade Python there until last night.&lt;/p&gt;
&lt;p&gt;With a simple Google search the first result came to Stackoverflow (what else?) and &lt;a href="https://apple.stackexchange.com/questions/201612/keeping-python-3-up-to-date-on-a-mac"&gt;this&lt;/a&gt; answer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew update
brew upgrade python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sometimes things on a Mac do ‘just work’. This was one of those times.&lt;/p&gt;
&lt;p&gt;I’m now running Python 3.7.1 and I’ll I needed to do was a simple command in the terminal.&lt;/p&gt;
&lt;p&gt;God bless the internet.&lt;/p&gt;</content><category term="Python"></category><category term="macOS"></category><category term="python"></category><category term="Terminal"></category></entry><entry><title>An Evening with Post Modern Jukebox</title><link href="https://www.ryancheley.com/an-evening-with-post-modern-jukebox.html" rel="alternate"></link><published>2018-12-15T07:07:00+01:00</published><updated>2018-12-15T07:07:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-12-15:/an-evening-with-post-modern-jukebox.html</id><summary type="html">&lt;p&gt;About a month ago I discovered a kitschy band that did covers of current pop songs but re-imagined as Gatsbyesque versions. I was instantly in love with the new arrangements of these songs that I knew and the videos that they posted on &lt;a href="https://www.youtube.com/user/ScottBradleeLovesYa"&gt;YouTube&lt;/a&gt;. I loved it so much that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About a month ago I discovered a kitschy band that did covers of current pop songs but re-imagined as Gatsbyesque versions. I was instantly in love with the new arrangements of these songs that I knew and the videos that they posted on &lt;a href="https://www.youtube.com/user/ScottBradleeLovesYa"&gt;YouTube&lt;/a&gt;. I loved it so much that I’ve been listening to them in Apple Music for a couple of weeks as well (time permitting).&lt;/p&gt;
&lt;p&gt;I mentioned to Emily this new band that I found and she told me that they would be playing at the &lt;a href="http://www.mccallumtheatre.com"&gt;McCallum Theatre&lt;/a&gt; and I was in utter disbelief. We bought tickets that night (DD 113 and 114 ... some of the best in the house!) and we were all set.&lt;/p&gt;
&lt;p&gt;To say that I’ve been looking forward to this concert is an understatement. For all the awesomeness that the YouTube videos have, I &lt;strong&gt;knew&lt;/strong&gt; that a live performance would be a major event and I was not disappointed.&lt;/p&gt;
&lt;p&gt;I think this is a concert that anyone could enjoy and that everyone should see. This was the first concert where I was both glad to be there AND glad that I had gone (usually I’m just glad that I have gone and have a hard time enjoying the moment while I’m there).&lt;/p&gt;
&lt;p&gt;I have the set list below, mostly so I don’t forget what songs were played. It’s also really cool because some of the performers at the concert were the ones in the YouTube videos. Miche (pronounced Mickey) Braden was an amazingly soulful singer, and her part of ‘All about that Bass’ was on point and breath taking!&lt;/p&gt;
&lt;p&gt;It was such an awesome concert. I can’t wait to see them again!&lt;/p&gt;
&lt;h2&gt;First Set&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/td-_pUPVjdo"&gt;Thriller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/kJ3BAF_15yQ"&gt;Sweet child o mine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Fjd1seT1mMQ"&gt;Just Like Heaven&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Cdo0lfWoqws"&gt;Are you going to be my girl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/IUlRavyDP6o"&gt;Africa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/nzFJNsij38c"&gt;Lean on&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/G-N3alxKyjE"&gt;All about that bass&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Second Set&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/OBmlCZTF4Xs"&gt;Umbrella&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/FASi9lrUoYM"&gt;Story of my life&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/lhod-UI40C0"&gt;Since you been gone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/FyFwko9O2UE"&gt;Crazy - Gnarls Barkley&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/DTMoipsvGNc"&gt;Heart of glass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/7hHZnvjCbVw"&gt;Habits - Tove Lo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/yKcPEtKu7CM"&gt;Time after time&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Encore&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/T2kOj-GFN8k"&gt;Stacy's mom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/m3lF2qEA2cw"&gt;Creep - Radiohead&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/tti76BnCL98"&gt;Such Great Heights&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Band&lt;/h2&gt;
&lt;p&gt;Hannah Gill - vocals&lt;/p&gt;
&lt;p&gt;Demi Remick - Tap&lt;/p&gt;
&lt;p&gt;Miche Braden - vocals&lt;/p&gt;
&lt;p&gt;Natalie Angst - vocals&lt;/p&gt;
&lt;p&gt;Casey Abrams - MC / vocals&lt;/p&gt;
&lt;p&gt;Ryan Quinn - Vocals&lt;/p&gt;
&lt;p&gt;Ben the Sax Guy - Sax and clarinet&lt;/p&gt;
&lt;p&gt;Dave Tedeschi - drums&lt;/p&gt;
&lt;p&gt;Steve Whipple - bass&lt;/p&gt;
&lt;p&gt;Logan Evan Thomas - Piano&lt;/p&gt;
&lt;p&gt;The trombone player was amazing, but I wasn’t able to find him on the &lt;a href="http://postmodernjukebox.com/performers/"&gt;PMJ Performers page&lt;/a&gt;.&lt;/p&gt;</content><category term="Music"></category><category term="concert"></category><category term="Music"></category><category term="PMJ"></category></entry><entry><title>Monitoring the temperature of my Raspberry Pi Camera</title><link href="https://www.ryancheley.com/monitoring-the-temperature-of-my-raspberry-pi-camera.html" rel="alternate"></link><published>2018-12-04T07:07:00+01:00</published><updated>2018-12-04T07:07:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-12-04:/monitoring-the-temperature-of-my-raspberry-pi-camera.html</id><summary type="html">&lt;p&gt;In late April of this year I wrote a script that would capture the temperature of the Raspberry Pi that sits above my Hummingbird feeder and log it to a file.&lt;/p&gt;
&lt;p&gt;It’s a straight forward enough script that captures the date, time and temperature as given by the internal …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In late April of this year I wrote a script that would capture the temperature of the Raspberry Pi that sits above my Hummingbird feeder and log it to a file.&lt;/p&gt;
&lt;p&gt;It’s a straight forward enough script that captures the date, time and temperature as given by the internal &lt;code&gt;measure_temp&lt;/code&gt; function. In code it looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;MyDate=&amp;quot;`date +&amp;#39;%m/%d/%Y, %H:%M, &amp;#39;`&amp;quot;
MyTemp=&amp;quot;`/opt/vc/bin/vcgencmd measure_temp |tr -d &amp;quot;=temp&amp;#39;C&amp;quot;`&amp;quot;
echo &amp;quot;$MyDate$MyTemp&amp;quot; &amp;gt;&amp;gt; /home/pi/Documents/python_projects/temperature/temp.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I haven’t ever really done anything with the file, but one thing I wanted to do was to get alerted if (when) the temperature exceeded the recommended level of 70 C.&lt;/p&gt;
&lt;p&gt;To do this I installed &lt;code&gt;ssmtp&lt;/code&gt; onto my Pi using &lt;code&gt;apt-get&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install ssmtp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With that installed I am able to send an email using the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;This is the email body&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;This is the subject&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this tool in place I was able to attempt to send an alert if (when) the Pi’s temperature got above 70 C (the maximum recommended running temp).&lt;/p&gt;
&lt;p&gt;At first, I tried adding this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;$MyTemp&amp;quot; -gt &amp;quot;70&amp;quot; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Camera Pi Running Hot&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Warning! The Camera Pi is Running Hot!!!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where the &lt;code&gt;$MyTemp&lt;/code&gt; came from the above code that get’s logged to the temp.log file.&lt;/p&gt;
&lt;p&gt;It didn’t work. The problem is that the temperature I’m capturing for logging purposes is a float, while the item it was being compared to was an integer. No problem, I’ll just make the “70” into a “70.0” and that will fix the ... oh wait. That didn’t work either.&lt;/p&gt;
&lt;p&gt;OK. I tried various combinations, trying to see what would work and finally determined that there is a way to get the temperature as an integer, but it meant using a different method to capture it. This is done by adding this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ComparisonTemp=$(($(cat /sys/class/thermal/thermal_zone0/temp)/1000))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above gets the temperature as an integer. I then use that in my &lt;code&gt;if&lt;/code&gt; statement for checking the temperature:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;$ComparisonTemp&amp;quot; -gt &amp;quot;70&amp;quot; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Camera Pi Running Hot&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Warning! The Camera Pi is Running Hot!!!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Giving a final script that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MyDate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;`date +&amp;#39;%m/%d/%Y, %H:%M, &amp;#39;`&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;MyTemp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;`/opt/vc/bin/vcgencmd measure_temp |tr -d &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;`&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$MyDate$MyTemp&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temperature&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;ComparisonTemp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;thermal&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;thermal_zone0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;$ComparisonTemp&amp;quot; -gt &amp;quot;70&amp;quot; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Camera Pi Running Hot&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Warning! The Camera Pi is Running Hot!!!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="nv"&gt;@domain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Raspberry Pi"></category><category term="automation"></category><category term="Bash"></category><category term="Raspberry Pi"></category></entry><entry><title>iPad versus MacBook Pro</title><link href="https://www.ryancheley.com/ipad-versus-macbook-pro.html" rel="alternate"></link><published>2018-12-01T06:37:00+01:00</published><updated>2018-12-01T06:37:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-12-01:/ipad-versus-macbook-pro.html</id><summary type="html">&lt;p&gt;May people ask the question ... iPad Pro or MacBook Pro. I decided to really think about this question and see, what is it that I do with each device.&lt;/p&gt;
&lt;p&gt;Initially I thought of each device as being its own ‘thing’. I did these things on my iPad Pro and those …&lt;/p&gt;</summary><content type="html">&lt;p&gt;May people ask the question ... iPad Pro or MacBook Pro. I decided to really think about this question and see, what is it that I do with each device.&lt;/p&gt;
&lt;p&gt;Initially I thought of each device as being its own ‘thing’. I did these things on my iPad Pro and those things on my MacBook Pro. But when I really sat down and thought about it, it turns out that there are things I do exclusively on my iPad Pro, and other things that I do exclusively on my MacBook Pro ... but there are also many things that I do on both.&lt;/p&gt;
&lt;h2&gt;iPad Pro&lt;/h2&gt;
&lt;p&gt;There are apps which only run on iOS. Drafts is a perfect example. It’s my note taking app of choice. Using my iPhone in conjunction with my iPad makes Drafts one of the most powerful apps I use in the iOS ecosystem.&lt;/p&gt;
&lt;p&gt;During meetings I can quickly jot down things that I need to know using my iPhone and no one notices or cares. Later, I can use my iPad Pro to process these notes and make sure that everything gets taken care of.&lt;/p&gt;
&lt;p&gt;I can also use Drafts as a powerful automation tool to get ideas into OmniFocus (my To Do App of Choice) easily and without any fuss.&lt;/p&gt;
&lt;p&gt;I also use my iPad Pro to process the expenses my family incurs. We use Siri Shortcuts to take a picture of a receipt which is then saved in a folder in Dropbox.&lt;/p&gt;
&lt;p&gt;I monitor these images and match them up against expenses (or income) in Mint and categorize the expenses.&lt;/p&gt;
&lt;p&gt;This workflow helps to keep me (and my family) in the know about how (and more importantly where) we’re spending our money.&lt;/p&gt;
&lt;p&gt;Mint is available as a web page, and I’ve tried to use macOS and this workflow, but it simply didn’t work for me.&lt;/p&gt;
&lt;p&gt;Using OmniFocus on the iPad is a dream. I am easily able to process my inbox, perform my weekly review and quickly add new items to do inbox. The ability to drag and drop with with either Apple Pencil or my finger makes it so easy to move tasks around.&lt;/p&gt;
&lt;p&gt;The other (obvious) use case for my iPad Pro over my MacBook Pro is media consumption. Everyone says you can’t get real work done on an iPad and they point to how easy it is to consume media on the iPad, but I think that shows the opposite.&lt;/p&gt;
&lt;p&gt;When you’re ready to take a break from doing real work, the best media consumption device is the one you have with you 😀&lt;/p&gt;
&lt;h2&gt;MacBook Pro&lt;/h2&gt;
&lt;p&gt;When I really thought about what I use my MacBook Pro for I was ... surprised. Quite honestly, it’s used mostly to write code (in Python) using my favorite editor (PyCharm) but other than that ... I don’t do much on it that I can’t do on my iPad.&lt;/p&gt;
&lt;p&gt;When I record podcast (OK, really, just that one and just that one time) I use my MBP, and if I have a ton of stuff I need to clean up in OmniFocus then I’m over at the MacBook, but really, it’s doesn’t do anything I can’t do on the iPad Pro.&lt;/p&gt;
&lt;p&gt;Maybe I don’t do real work in the macOS ecosystem?&lt;/p&gt;
&lt;h2&gt;What I do on both MacBook Pro and iPad Pro&lt;/h2&gt;
&lt;p&gt;Honestly, they both do a great job of getting me to where I want to go on the internet. Some people think that mobile safari isn’t up to it’s macOS counterpart (and they’re right) but for my (non-coding) needs, it doesn’t really matter to me. They both work really well for me.&lt;/p&gt;
&lt;p&gt;I also tend to use OmniFocus on both when I want to mark things as done, add new items, or make bulk edits (OF3 on iOS finally made this one a possibility).&lt;/p&gt;
&lt;p&gt;I also use the terminal to access servers via ssh on both platforms. The great thing about the command line is that it’s mostly the same where ever you’re coming from.&lt;/p&gt;
&lt;p&gt;Terminus on iOS is a a great terminal app and I can just as easily navigate the server there as I can using the terminal app in macOS.&lt;/p&gt;
&lt;p&gt;I’m also just as likely to plan my family’s budget on iOS as I am macOS. It just kind of depends which device is easier to get to, not what I’m planning on doing. Excel on both platforms works really well for me (I work in a Windows environment professionally so Excel is what I use and know for that kind of thing).&lt;/p&gt;
&lt;p&gt;Finally, writing. I use Ulysses on both macOS and iOS and really, I love them both. Each app has parity with the other so I never feel like I’m losing something when I write on my MacBook Pro (or on my iPad Pro). Sometimes, it’s hard to really tell which platform I’m on because they do such a good job (for me) to make them basically the same.&lt;/p&gt;
&lt;p&gt;All in all, I don’t think it’s a question of which to choose, iPad Pro or MacBook Pro, iOS or macOS ... it’s a matter of what device is closest to me right now? What device will bring me the most joy to use, right now? What device do I want to use right now?&lt;/p&gt;
&lt;p&gt;iOS or macOS? iPad Pro or MacBook Pro? These aren’t the right questions to be asking. It should be ... what device do I want to use right now? And don’t care what anyone else thinks.&lt;/p&gt;</content><category term="macOS"></category><category term="iOS"></category><category term="iPad"></category><category term="MacBook Pro"></category><category term="macOS"></category></entry><entry><title>Fizz Buzz</title><link href="https://www.ryancheley.com/fizz-buzz.html" rel="alternate"></link><published>2018-11-28T19:11:00+01:00</published><updated>2018-11-28T19:11:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-28:/fizz-buzz.html</id><summary type="html">&lt;p&gt;I was listening to the most recent episode of &lt;a href="http://atp.fm/episodes/302"&gt;ATP&lt;/a&gt; and John Siracusa mentioned a programmer test called &lt;a href="http://wiki.c2.com/?FizzBuzzTest"&gt;fizz buzz&lt;/a&gt; that I hadn’t heard of before.&lt;/p&gt;
&lt;p&gt;I decided that I’d give it a shot when I got home using Python and Bash, just to see if I could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was listening to the most recent episode of &lt;a href="http://atp.fm/episodes/302"&gt;ATP&lt;/a&gt; and John Siracusa mentioned a programmer test called &lt;a href="http://wiki.c2.com/?FizzBuzzTest"&gt;fizz buzz&lt;/a&gt; that I hadn’t heard of before.&lt;/p&gt;
&lt;p&gt;I decided that I’d give it a shot when I got home using Python and Bash, just to see if I could (I was sure I could, but you know, wanted to make sure).&lt;/p&gt;
&lt;p&gt;Sure enough, with a bit of googling to remember some syntax fo Python, and learn some syntax for bash, I had two stupid little programs for fizz buzz.&lt;/p&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:

    &lt;span class="nv"&gt;my_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Enter a number: &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;.&lt;span class="nv"&gt;isdigit&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;my_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:
            &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;fizz&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:
            &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;buzz&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;:
            &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;fizz buzz&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;      
        &lt;span class="k"&gt;else&lt;/span&gt;:
            &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;my_number&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;__main__&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
    &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Bash&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/bash&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Enter a Number: &amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;read&lt;/span&gt; my_number

&lt;span class="nv"&gt;re&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^[+-]?[0-9]+$&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$my_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;~ &lt;span class="nv"&gt;$re&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
   &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error: Not a number&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="o"&gt;((&lt;/span&gt;my_number % &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;my_number % &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fizz&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; ! &lt;span class="o"&gt;((&lt;/span&gt;my_number % &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;my_number % &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;buzz&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; ! &lt;span class="o"&gt;((&lt;/span&gt;my_number % &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fizz buzz&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; my_number
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;And because if it isn’t in GitHub it didn’t happen, I committed it to my &lt;a href="https://github.com/ryancheley/fizz-buzz"&gt;fizz-buzz repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I figure it might be kind of neat to write it in as many languages as I can, you know … for when I’m bored.&lt;/p&gt;</content><category term="Coding"></category><category term="Bash"></category><category term="python"></category></entry><entry><title>Share Your Gifts</title><link href="https://www.ryancheley.com/share-your-gifts.html" rel="alternate"></link><published>2018-11-27T05:57:00+01:00</published><updated>2018-11-27T05:57:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-27:/share-your-gifts.html</id><summary type="html">&lt;p&gt;There’s this new commercial by Apple called &lt;a href="https://youtu.be/3dJCroCMBPM"&gt;Share Your Gifts&lt;/a&gt; all about a young creative woman that keeps all of her creativity to herself.&lt;/p&gt;
&lt;p&gt;She does a really good job through the entire video of creating neat things, some seen, some not, and then making sure that no one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There’s this new commercial by Apple called &lt;a href="https://youtu.be/3dJCroCMBPM"&gt;Share Your Gifts&lt;/a&gt; all about a young creative woman that keeps all of her creativity to herself.&lt;/p&gt;
&lt;p&gt;She does a really good job through the entire video of creating neat things, some seen, some not, and then making sure that no one else sees them by stuffing them into her idea box.&lt;/p&gt;
&lt;p&gt;Her ideas are only shared when her dog opens the window to her apartment at which point her ideas are spread throughout the city.&lt;/p&gt;
&lt;p&gt;People on the street see the ideas as the horrified young creator watches her creations get shared.&lt;/p&gt;
&lt;p&gt;And you know what happens? People are genuinely happy about the creations that have been shared with them.&lt;/p&gt;
&lt;p&gt;The creator’s fear that people would not appreciate or understand her creations were unfounded. People laugh and smile and enjoy what she’s shared.&lt;/p&gt;
&lt;p&gt;It’s a hugely impactful video for me because I, like most creative people I’m guessing, are terrified of sharing what they’ve created.&lt;/p&gt;
&lt;p&gt;What if what I made isn’t understood? What if no one likes what I've made? Worse, what if no one notices what I’ve made. What if people make fun of what I made. What if ... what if ... what if ... ?&lt;/p&gt;
&lt;p&gt;I like this commercial because it takes those “what if’s” and turns it on it’s head! What if people connect with what I’ve made? What if people enjoy what I’ve made? What if people are happy because of what I’ve made?&lt;/p&gt;
&lt;p&gt;The act of creating, for me at least, is less about any external validation, and more about trying out something new and learning, but I still am afraid to share.&lt;/p&gt;
&lt;p&gt;These feelings, these “what if’s” can hold me back from sharing some truly fun things I’ve done. Who knows, maybe some of them are amazing.&lt;/p&gt;
&lt;p&gt;So what if someone doesn’t like what you’ve made? So what if someone makes fun of what you’ve made? If you hold yourself hostage to the naysayers, and the potential negativity of the world, you rob the world of something truly extraordinary ... you.&lt;/p&gt;
&lt;p&gt;And so, with this in mind, I am going to worry less about the potential negatives of what I create when I share it, and focus more on the happiness that it brings me, and the happiness it might bring to others.&lt;/p&gt;
&lt;p&gt;Here’s to sharing your creativity ... here’s to sharing your gifts with the world!&lt;/p&gt;</content><category term="Musings"></category><category term="Apple Commercial"></category><category term="Introspection"></category><category term="Share your Gifts"></category></entry><entry><title>Adding my Raspberry Pi Project code to GitHub</title><link href="https://www.ryancheley.com/adding-my-raspberry-pi-project-code-to-github.html" rel="alternate"></link><published>2018-11-25T19:30:00+01:00</published><updated>2018-11-25T19:30:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-25:/adding-my-raspberry-pi-project-code-to-github.html</id><summary type="html">&lt;p&gt;Over the long holiday weekend I had the opportunity to play around a bit with some of my Raspberry Pi scripts and try to do some fine tuning.&lt;/p&gt;
&lt;p&gt;I mostly failed in getting anything to run better, but I did discover that not having my code in version control was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the long holiday weekend I had the opportunity to play around a bit with some of my Raspberry Pi scripts and try to do some fine tuning.&lt;/p&gt;
&lt;p&gt;I mostly failed in getting anything to run better, but I did discover that not having my code in version control was a bad idea. (Duh)&lt;/p&gt;
&lt;p&gt;I spent the better part of an hour trying to find a script that I had accidentally deleted somewhere in my blog. Turns out it was (mostly) there, but it didn’t ‘feel’ right … though I’m not sure why.&lt;/p&gt;
&lt;p&gt;I was able to restore the file from my blog archive, but I decided that was a dumb way to live and given that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I use version control at work (and have for the last 15 years)&lt;/li&gt;
&lt;li&gt;I’ve used it for other personal projects&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, I’ve only ever used a GUI version of either subversion (at work) or GitHub (for personal projects via PyCharm). I’ve never used it from the command line.&lt;/p&gt;
&lt;p&gt;And so, with a bit of time on my hands I dove in to see what needed to be done.&lt;/p&gt;
&lt;p&gt;Turns out, not much. I used this &lt;a href="https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/"&gt;GitHub&lt;/a&gt; resource to get me what I needed. Only a couple of commands and I was in business.&lt;/p&gt;
&lt;p&gt;The problem is that I have a terrible memory and this isn’t something I’m going to do very often. So, I decided to write a bash script to encapsulate all of the commands and help me out a bit.&lt;/p&gt;
&lt;p&gt;The script looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;echo &amp;quot;Enter your commit message:&amp;quot;

read commit_msg

git commit -m &amp;quot;$commit_msg&amp;quot;

git remote add origin path/to/repository

git remote -v

git push -u origin master

git add $1

echo ”enter your commit message:”

read commit_msg

git commit -m ”$commit_msg”

git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I just recently learned about user input in bash scripts and was really excited about the opportunity to be able to use it. Turns out it didn’t take long to try it out! (God I love learning things!)&lt;/p&gt;
&lt;p&gt;What the script does is commits the files that have been changed (all of them), adds it to the origin on the GitHub repo that has been specified, prints verbose logging to the screen (so I can tell what I’ve messed up if it happens) and then pushes the changes to the master.&lt;/p&gt;
&lt;p&gt;This script doesn’t allow you to specify what files to commit, nor does it allow for branching and tagging … but I don’t need those (yet).&lt;/p&gt;
&lt;p&gt;I added this script to 3 of my projects, each of which can be found in the following GitHub Repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryancheley/rpicamera-hummingbird"&gt;rpicamera-hummingbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryancheley/rpi-dodgers"&gt;rpi-dodgers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryancheley/rpi-kings"&gt;rpi-kings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I had to make the commit.sh executable (with &lt;code&gt;chmod +x commit.sh&lt;/code&gt;) but other than that it’s basically plug and play.&lt;/p&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;I made a change to my Kings script tonight (Nov 27) and it wouldn’t get pushed to git. After a bit of Googling and playing around, I determined that the original script would only push changes to an empty repo ... not one with stuff, like I had.  Changes made to the post (and the GitHub repo!)&lt;/p&gt;</content><category term="GitHub"></category><category term="Raspberry Pi"></category><category term="version control"></category></entry><entry><title>The PIR Sensor Debacle of 2018</title><link href="https://www.ryancheley.com/the-pir-sensor.html" rel="alternate"></link><published>2018-11-10T11:26:00+01:00</published><updated>2018-11-10T11:26:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-10:/the-pir-sensor.html</id><summary type="html">&lt;p&gt;Last spring I set up a Raspberry Pi to record humming birds at my hummingbird feeder, compile the recorded h264 files into an mp4 and upload it to YouTube.&lt;/p&gt;
&lt;p&gt;I’ve written about that process before here, here, and here.&lt;/p&gt;
&lt;p&gt;This post is a bit of documentation to remind myself …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last spring I set up a Raspberry Pi to record humming birds at my hummingbird feeder, compile the recorded h264 files into an mp4 and upload it to YouTube.&lt;/p&gt;
&lt;p&gt;I’ve written about that process before here, here, and here.&lt;/p&gt;
&lt;p&gt;This post is a bit of documentation to remind myself about how to connect the PIR sensor to the Raspberry Pi so I don’t forget.&lt;/p&gt;
&lt;p&gt;When I went to set it up this year, it appeared like the PIR sensor wasn’t working. It would start the video capture, but it wouldn’t end it.&lt;/p&gt;
&lt;p&gt;I tried a couple of different things (including the purchase of some new PIR sensors) but none of them seemed to work. I was worried that the heat from the early bit of summer last year had maybe fried my little Pi.&lt;/p&gt;
&lt;p&gt;But no, it turns out that the link I was using as the basis for my project had a diagram AND a description about how to connect the PIR.&lt;/p&gt;
&lt;p&gt;I had assumed that the diagram was correct and that I didn’t need to read the description, but it turns out I did BECAUSE the diagram had the connections set up in a way that didn’t line up with the PIR sensor(s) I have.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-313" height="375" src="/images/uploads/2018/11/pir-diagram-1.png" width="1000"&gt;&lt;/p&gt;
&lt;p&gt;In the Parent Detector PIR sensor the connectors are (1) Power, (2) Ground, (3) Out&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-314" height="4032" src="/images/uploads/2018/11/IMG_0282.jpg" width="3024"&gt;&lt;/p&gt;
&lt;p&gt;In my PIR sensor the connectors are (1) Power, (2) Out, (3) Ground.&lt;/p&gt;
&lt;p&gt;This meant that the power was getting to the PIR sensor, but there was no way to send the trip because the signal was being sent to the Ground.&lt;/p&gt;
&lt;p&gt;Anyway, the morale of the story is, pictures are nice, but reading may save you some time (and money) in the long run.&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="Hummingbird"></category><category term="pir sensor"></category></entry><entry><title>ITFKH!!!</title><link href="https://www.ryancheley.com/itfkh.html" rel="alternate"></link><published>2018-11-09T19:33:00+01:00</published><updated>2018-11-09T19:33:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-09:/itfkh.html</id><summary type="html">&lt;p&gt;It’s time for Kings Hockey! A couple of years ago Emily and I I decided to be Hockey fans. This hasn’t really meant anything except that we picked a team (the Kings) and ‘rooted’ for them (i.e. talked sh*t* to our hockey friends), looked up their …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It’s time for Kings Hockey! A couple of years ago Emily and I I decided to be Hockey fans. This hasn’t really meant anything except that we picked a team (the Kings) and ‘rooted’ for them (i.e. talked sh*t* to our hockey friends), looked up their position in the standings, and basically said, “Umm ... yeah, we’re hockey fans.”&lt;/p&gt;
&lt;p&gt;When the 2018 baseball season ended, and with the lack of interest in the NFL (or the NBA) Emily and I decided to actually focus on the NHL. Step 1 in becoming a Kings fan is watching the games. To that end we got a subscription to NHL Center Ice and have committed to watching the games.&lt;/p&gt;
&lt;p&gt;Step 2 is getting notified of when the games are on. To accomplish this I added the games to our family calendar, and decided to use what I learned writing my &lt;a href="/itfdb/"&gt;ITFDB&lt;/a&gt; program and write one for the Kings.&lt;/p&gt;
&lt;p&gt;For the Dodgers I had to create a CSV file and read it’s contents. Fortunately, the NHL as a sweet API that I could use. This also gave me an opportunity to use an API for the first time!&lt;/p&gt;
&lt;p&gt;The API is relatively straight forward and has some really good documentation so using it wasn’t too challenging.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sense_hat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dateutil.relativedelta&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;



&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;local_tz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;America/Los_Angeles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;utc_now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;utc_now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_tz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://statsapi.web.nhl.com/api/v1/schedule?teamId=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;total_games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;totalGames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total_games&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gameDate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;away_team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;away&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;home_team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;away_team_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;away&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;home_team_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_tz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;
        &lt;span class="n"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hours&lt;/span&gt;
        &lt;span class="n"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;
        &lt;span class="n"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;
        &lt;span class="n"&gt;game_time_hour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;game_time_minute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_time_hour&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;game_time_minute&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;away_team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;home_record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;home_team_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) will be playing the &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) at &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;home_record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) will be playing at the &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) at &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;home_record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sense&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;standings_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://statsapi.web.nhl.com/api/v1/teams/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/stats&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;standings_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;wins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;losses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;otl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;losses&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;otl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the code for the LA Kings; the ID can be found here: https://statsapi.web.nhl.com/api/v1/teams/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The part that was the most interesting for me was getting the opponent name and then the record for both the opponent and the Kings. Since this is live data it allows the records to be updated which I couldn’t do (easily) with the Dodgers programs (hey MLB ... anytime you want to have a free API I’m ready!).&lt;/p&gt;
&lt;p&gt;Anyway, it was super fun and on November 6 I had the opportunity to actually see it work:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;iframe src="https://www.youtube.com/embed/AzdLSrA8wvU" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I really like doing fun little projects like this.&lt;/p&gt;</content><category term="Python"></category><category term="Hockey"></category><category term="python"></category><category term="Raspberry Pi"></category></entry><entry><title>Hosing my WiFi set up</title><link href="https://www.ryancheley.com/hosing-my-wifi-set-up.html" rel="alternate"></link><published>2018-11-05T05:53:00+01:00</published><updated>2018-11-05T05:53:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-05:/hosing-my-wifi-set-up.html</id><summary type="html">&lt;p&gt;I have been wanting to put shelves up in my office above my desk for some time. The problem has been that the ones that are sold at Lowe’s or Home Depot are not really what I wanted (too short) and I’m not a super handy guy with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been wanting to put shelves up in my office above my desk for some time. The problem has been that the ones that are sold at Lowe’s or Home Depot are not really what I wanted (too short) and I’m not a super handy guy with building stuff (that’s more my dad and brother) so I’ve just been putting it off. For an embarrassingly long time.&lt;/p&gt;
&lt;p&gt;Last a couple of weekends ago my dad had volunteered to help me out in putting up some shelves.&lt;/p&gt;
&lt;p&gt;On Saturday at 8:30 we started. All in all the process went really, really well. Only one extra trip to the hardware store (it’s usually about 3) and the shelves were nice and level.&lt;/p&gt;
&lt;p&gt;Since I wanted the shelves above my desk we needed to move it, and all of the electronics that were on it, and plugged into the outlet behind it. This included a UPS / Battery backup that all of my electronics were plugged into.&lt;/p&gt;
&lt;p&gt;We moved everything away from the wall, and then I moved it back. No. Big. Deal.&lt;/p&gt;
&lt;p&gt;Now, the timing may have just been coincidental, but the next morning I needed to do some work for my job-y job from home. I took my laptop into my office (with the brand new shelves) and plugged it into the UPS.&lt;/p&gt;
&lt;p&gt;I noticed the lights flicker and discovered that the WiFi router (my trusty AirPort Extreme) seem to have reset itself.&lt;/p&gt;
&lt;p&gt;No big deal. I just rebooted and we were all good.&lt;/p&gt;
&lt;p&gt;Later that day I plugged in my iMac and then stuff got real. The lights went out. I figured that the breaker tripped, but the sprinklers next to the breaker were on so I waded out through to the box and turned the breaker back on. Or so I thought. I came back in and the lights were still off.&lt;/p&gt;
&lt;p&gt;At this point I freaked out because, well, that’s kind of what I do. I went back out and turned the breaker off and then back on. Lights are back.&lt;/p&gt;
&lt;p&gt;OK, lets try this again. I plug the iMac back in and ... crap. Lights are off again.&lt;/p&gt;
&lt;p&gt;Back to the breaker (at this point the sprinklers are off) so off and on the breaker went.&lt;/p&gt;
&lt;p&gt;OK, one last time and ... mother f!&lt;/p&gt;
&lt;p&gt;Somehow I was able to go from being able to have my UPS plugged in and everything being fine, to not.&lt;/p&gt;
&lt;p&gt;OK. Swap out the UPS and put back the Surge Protectors. Everything powers on and we’re good.&lt;/p&gt;
&lt;p&gt;Except we’re not. The light on my AirPort Extreme is suddenly not a solid green, but instead a flashing amber. I consult the &lt;a href="https://support.apple.com/en-us/HT202211#amber" title="About the status light on AirPort base stations"&gt;internet&lt;/a&gt; and get a very unhelpful message&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These are some typical reasons for the status light to flash amber:&lt;/p&gt;
&lt;p&gt;The base station hasn't been set up, or it was reset and needs to be set up again. Use AirPort Utility to set up your base station.&lt;/p&gt;
&lt;p&gt;A firmware update is available for the base station.&lt;/p&gt;
&lt;p&gt;The base station is set up to use Back to My Mac, but Back to My Mac isn't working or the password is incorrect. If you've upgraded to macOS Mojave, you should remove the base station from your Back to My Mac network, because Mojave doesn't support Back to My Mac.&lt;/p&gt;
&lt;p&gt;The base station can't connect to the Internet, such as when Internet service is down at your location, the base station can't acquire an IP address from your primary router, or the WAN Ethernet connection to your router isn't working.&lt;/p&gt;
&lt;p&gt;The base station is set up to wirelessly extend the range of your network, but is too far away from the primary Wi-Fi base station.&lt;/p&gt;
&lt;p&gt;If your base station is an AirPort Time Capsule, its internal hard disk is experiencing an issue that requires repair.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And suddenly my entire WiFi is down. And I am sad.&lt;/p&gt;
&lt;p&gt;I tried a ton of things to get the AirPort Extreme Back, but nothing is working. I finally throw in the towel and decide to to use the WiFi access point from my Fios router.&lt;/p&gt;
&lt;p&gt;This means that I have to update the WiFi on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 iPhones&lt;/li&gt;
&lt;li&gt;2 iPads&lt;/li&gt;
&lt;li&gt;1 MacBook&lt;/li&gt;
&lt;li&gt;2 MacBookPros&lt;/li&gt;
&lt;li&gt;1 iMac&lt;/li&gt;
&lt;li&gt;2 Wemo Switches&lt;/li&gt;
&lt;li&gt;2 Raspberry Pi&lt;/li&gt;
&lt;li&gt;3 Apple TVs (2 4th Gen and 1 3rd Gen)&lt;/li&gt;
&lt;li&gt;1 WiFi connected Scale&lt;/li&gt;
&lt;li&gt;1 Ring Doorbell&lt;/li&gt;
&lt;li&gt;1 Ring Chime (connected to Ring Doorbell)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also means that I need to plug my Netgear switch into my Fios router instead of the AirPort Extreme. No big deal, right? Except that it was because I forget that the port that the Cat5 cable is plugged into on a router is important.&lt;/p&gt;
&lt;p&gt;I spent an embarrassingly long time trying to figure out why my Sonos and Hue Lights weren’t on my network.&lt;/p&gt;
&lt;p&gt;Emily kept telling me to take a break and relax and that was, in that moment, the last thing I wanted to do.&lt;/p&gt;
&lt;p&gt;I was able to get all of the iOS and MacOS devices connected back to the internet (via WiFi) and decided that I needed to forget the network and watch game 5 of the World Series.&lt;/p&gt;
&lt;p&gt;By the end of the 7th we had the game off and were catching up on CW Comic Book shows.&lt;/p&gt;
&lt;p&gt;It was a rough day. But I learned a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LAN Port 1 on the Fios Router is the right port&lt;/li&gt;
&lt;li&gt;Sometimes, you just need to take a step back and think instead of just react&lt;/li&gt;
&lt;li&gt;I have a crap ton of WiFi devices&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'm still working on trying to get the AirPort Extreme back to working so that I don't need to get a new WiFi router ( have I mentioned how awful the Fios one is? ).&lt;/p&gt;</content><category term="Musings"></category><category term="iOS"></category><category term="macOS"></category><category term="WiFi"></category></entry><entry><title>New  Watch</title><link href="https://www.ryancheley.com/new-apple-watch.html" rel="alternate"></link><published>2018-11-03T11:44:00+01:00</published><updated>2018-11-03T11:44:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-03:/new-apple-watch.html</id><summary type="html">&lt;p&gt;New  Watch&lt;/p&gt;
&lt;h2&gt;The first week&lt;/h2&gt;
&lt;p&gt;I've been rocking a series 2 Apple Watch for about 18 months. I timed my purchase just right to not get a series 3 when it went on sale (🤦🏻‍♂️). When the series 4 was released I decided that I wanted to get one, but was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;New  Watch&lt;/p&gt;
&lt;h2&gt;The first week&lt;/h2&gt;
&lt;p&gt;I've been rocking a series 2 Apple Watch for about 18 months. I timed my purchase just right to not get a series 3 when it went on sale (🤦🏻‍♂️). When the series 4 was released I decided that I wanted to get one, but was a bit too slow (and tired) to stay up and order one at launch.&lt;/p&gt;
&lt;p&gt;This meant that I didn't get my new Apple Watch until last Saturday (nearly5 weeks later). I wanted to write down my thoughts on the  Watch and what it's meant for me. I won't go into specs and details, just what I've found that I liked and didn't like.&lt;/p&gt;
&lt;h2&gt;The Good&lt;/h2&gt;
&lt;p&gt;Holy crap is it fast. I mean, like really fast. I've never had a watch that responded like this (before my series 2 I had a series 0).&lt;/p&gt;
&lt;p&gt;It reacts when I want it to, so much so that I'm sometimes not prepared. It reminds me of the transition from Touch ID Gen 1 to Touch ID Gen 2. I really appreciate how fast everything comes up. When I start an activity, it’s there (no more waiting like on Series 2). When I want to pair with my AirPods … it’s there and ready to go.&lt;/p&gt;
&lt;p&gt;I also really like how much thinner it is and the increase in size. At first I thought it was ‘monstrous’ but now I’m trying to figure out how I ever lived with 2 fewer millimeters.&lt;/p&gt;
&lt;p&gt;I also decided to get the Cellular Version just in case. It was a bit more expensive, and I probably won’t end up using it past the free trial I got, but it’s nice to know that I can have it if I need it. I haven’t had a chance to use it (yet) but hopefully I’ll get a chance here soon.&lt;/p&gt;
&lt;h2&gt;The Bad&lt;/h2&gt;
&lt;p&gt;So far, nothing has stuck me as being ‘bad’. It’s the first Apple Watch I’ve had that’s really exceeded my expectations in terms of performance and sheer joy that I get out of using it.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Overall I &lt;strong&gt;love&lt;/strong&gt; the Series 4  Watch. It doesn’t do anything different than the Series 2 that I had (except I can make phone calls without my phone if I need to) but &lt;em&gt;oh my&lt;/em&gt; is it fast! If someone is on a Series 2 and is wondering if jumping to the Series 4 is worth it … it totally is.&lt;/p&gt;</content><category term="Apple"></category><category term="Apple"></category><category term="Watch"></category></entry><entry><title>Moving my Pycharm Directory or How I spent my Saturday after jacking up my PyCharm environment</title><link href="https://www.ryancheley.com/moving-my-pycharm-directory-or-how-i-spent-my-saturday-after-jacking-up-my-pycharm-environment.html" rel="alternate"></link><published>2018-08-12T15:00:00+02:00</published><updated>2018-08-12T15:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-08-12:/moving-my-pycharm-directory-or-how-i-spent-my-saturday-after-jacking-up-my-pycharm-environment.html</id><summary type="html">&lt;p&gt;Every once in a while I get a wild hair and decide that I need to ‘clean up’ my directories. This &lt;strong&gt;never&lt;/strong&gt; ends well and I almost always mess up something, but I still do it.&lt;/p&gt;
&lt;p&gt;Why? I’m not sure, except that I &lt;em&gt;forget&lt;/em&gt; that I’ll screw it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Every once in a while I get a wild hair and decide that I need to ‘clean up’ my directories. This &lt;strong&gt;never&lt;/strong&gt; ends well and I almost always mess up something, but I still do it.&lt;/p&gt;
&lt;p&gt;Why? I’m not sure, except that I &lt;em&gt;forget&lt;/em&gt; that I’ll screw it up. 🤦‍♂️&lt;/p&gt;
&lt;p&gt;Anyway, on a Saturday morning when I had nothing but time I decided that I’d move my PyCharm directory from /Users/ryan/PyCharm to /Users/ryan/Documents/PyCharm for no other reason than &lt;strong&gt;because&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I proceeded to use the command line to move the folder&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv /Users/ryan/PyCharm/ /Users/ryan/Documents/PyCharm/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nothing too big, right. Just a simple file movement.&lt;/p&gt;
&lt;p&gt;Not so much. I then tried to open a project in PyCharm and it promptly freaked out. Since I use virtual environments for my Python Project AND they tend to have paths that reference where they exist, suddenly ALL of my virtual environments were kind of just &lt;em&gt;gone&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Whoops!&lt;/p&gt;
&lt;p&gt;OK. No big deal. I just undid my move&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv /Users/ryan/Documents/PyCharm/ /Users/ryan/PyCharm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That should fix me up, right?&lt;/p&gt;
&lt;p&gt;Well, mostly. I had to re-register the virtual environments and reinstall all of the packages in my projects (mostly not a big deal with PyCharm) but holy crap it was scary. I thought I had hosed my entire set of projects (not that I have anything that’s critical … but still).&lt;/p&gt;
&lt;p&gt;Anyway, this is mostly a note to myself.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The next time you get a wild hair to move stuff around, just keep it where it is. There’s no reason for it (unless there is).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;But seriously, ask yourself first, “If I don’t move this what will happen?” If the answer is anything less than “Something awful” go watch a baseball game, or go to the pool, or write some code. Don’t mess with your environment unless you really want to spend a couple of hours unmasking it up!&lt;/p&gt;</content><category term="macOS"></category><category term="MacBook Pro"></category><category term="python"></category></entry><entry><title>How to Ryan</title><link href="https://www.ryancheley.com/how-to-ryan.html" rel="alternate"></link><published>2018-06-15T16:00:00+02:00</published><updated>2018-06-15T16:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-06-15:/how-to-ryan.html</id><summary type="html">&lt;p&gt;Hi, welcome to the team. I'm so glad you are here at \$COMPANY.&lt;/p&gt;
&lt;p&gt;It's going to take a solid 90 days to figure this place out. I understand the importance of first impressions, and I know you want to get a check in the win column, but this is a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi, welcome to the team. I'm so glad you are here at \$COMPANY.&lt;/p&gt;
&lt;p&gt;It's going to take a solid 90 days to figure this place out. I understand the importance of first impressions, and I know you want to get a check in the win column, but this is a complex place full of equally complex humans. Take your time, meet everyone, write things down, and ask all the questions - especially about all those baffling acronyms … healthcare is full of them&lt;/p&gt;
&lt;p&gt;One of the working relationships we need to define is ours. The following is a user guide for me and how I work. It captures what you can expect out of the average week, how I like to work, my north star principles, and some of my, uh, idiosyncrasies. My intent is to accelerate our working relationship with this document.&lt;/p&gt;
&lt;h2&gt;Our Average Week&lt;/h2&gt;
&lt;p&gt;We'll have a 1:1 every week for about 30 minutes. I try to never cancel this meeting so it might get moved around a bit. I would like to apologize for this in advance.&lt;/p&gt;
&lt;p&gt;If you are curious about the 1:1s I have with my manager I’m more than happy to tell you about their frequency and duration. I meet with my boss at least once a week for anywhere from 30 - 90 minutes. It just depends on the week.&lt;/p&gt;
&lt;p&gt;The purpose of our meeting is to discusses topics of substance, not updates (there are other platforms for that). Sometimes they can morph into update type meetings. I’ll do my best to keep that from happening, and I ask that you do the same. I have a running list of items that I will want to discuss with you and I encourage you do have the same.&lt;/p&gt;
&lt;p&gt;We have scrum every day. The purpose of the scrum is to tell the &lt;strong&gt;team&lt;/strong&gt; three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What I did yesterday&lt;/li&gt;
&lt;li&gt;What I’m doing today&lt;/li&gt;
&lt;li&gt;What, if any, roadblocks I have&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The scrum master will make note of the roadblocks and work to remove them as quickly as possible. Sometimes this is fast, sometimes it’s not.&lt;/p&gt;
&lt;p&gt;If I am traveling or will be out of the office on PTO (yes, I take PTO and you should too once you can), I will give you notice of said travel in advance. Depending on the type of travel I may need to cancel our meeting. &lt;/p&gt;
&lt;p&gt;Sometimes I work on the weekends. Sometime I work late. Unless we have a big project that you are working on and it needs to get done I don’t ask anyone else to work late or on the weekends. I want you to have a life outside of work.&lt;/p&gt;
&lt;h2&gt;North Star Principles&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Humans first.&lt;/strong&gt; I believe that happy, informed, and productive humans build fantastic products. I try to optimize for the humans. Other leaders will maximize the business, the technology, or any other number of important facets. Ideological diversity is key to an effective team. All perspectives are relevant, and we need all these leaders, but my bias is towards building productive humans.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leadership comes from everywhere.&lt;/strong&gt; My wife likes to remind me that I hated meetings for the first ten years of my professional career. She's right. I've wasted a lot of time in poorly run meetings by bad managers. I remain skeptical of managers even as a manager. While I believe managers are an essential part of a scaling organization, I don't believe they have a monopoly on leadership, and I work hard to build other constructs and opportunities in our teams for non-managers to lead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It is important to me that humans are treated fairly.&lt;/strong&gt; I believe that most humans are trying to to do the right thing, but unconscious bias leads them astray. I work hard to understand and address my biases because I understand their ability to create inequity. I am not perfect, but I try to be better today than I was yesterday. Sometimes I succeed. Sometimes I don’t.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I heavily bias towards action.&lt;/strong&gt; Long meetings where we are endlessly debating potential directions are often valuable, but I believe starting is the best way to begin learning and make progress. This is not always the correct strategy. This strategy annoys those who like to debate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I believe in the compounding awesomeness of continually fixing small things.&lt;/strong&gt; I believe quality assurance is everyone's responsibility and there are bugs to be fixed everywhere… all the time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I start with an assumption of positive intent for all involved.&lt;/strong&gt; This has worked out well for me over my career.&lt;/p&gt;
&lt;h2&gt;Feedback Protocol&lt;/h2&gt;
&lt;p&gt;I firmly believe that feedback is at the core of building trust and respect in a team.&lt;/p&gt;
&lt;p&gt;At \$COMPANY, there is a formal feedback cycle which occurs once a year per employee.&lt;/p&gt;
&lt;p&gt;During that formal feedback cycle (also called the Annual Review) we will discuss the previous year. There’s a form (\$COMPANY &lt;strong&gt;loves&lt;/strong&gt; forms). I’ll fill it out and we’ll discuss it.&lt;/p&gt;
&lt;p&gt;This means that at anyone time I could be finishing up 5 reviews or 1.&lt;/p&gt;
&lt;p&gt;Notice I say finishing up. I try to make the reviews I write as living documents so I can capture everything from the year, and not just everything from the last month.&lt;/p&gt;
&lt;p&gt;If during the Annual Review you are surprised (positively or negatively) by anything, I have not done my job. Please let me know. Feedback is the only way we know we are doing something well, or not well.&lt;/p&gt;
&lt;p&gt;I won’t assume you know what I’m thinking, and I ask that you don’t assume I know what you’re thinking.&lt;/p&gt;
&lt;p&gt;Disagreement is feedback and the sooner we learn how to efficiently disagree with each other, the sooner we'll trust and respect each other more. Ideas don't get better with agreement.&lt;/p&gt;
&lt;h2&gt;Meeting Protocol&lt;/h2&gt;
&lt;p&gt;I go to a lot of meetings. In the morning scrum many times I will indicate that today I have several meetings. I don’t enumerate all of them because I don’t think everyone wants to know specifically which meetings I’m going to. If I think it’s important for the team to know, I will say, I have meeting X today. If I don’t indicate what meeting I have and you want to know, ask. If it’s not private / confidential I will tell you.&lt;/p&gt;
&lt;p&gt;My definition of a meeting includes an agenda and/or intended purpose, the appropriate amount of productive attendees, and a responsible party running the meeting to a schedule. If I am attending a meeting, I'd prefer starting on time. If I am running a meeting, I will start that meeting on time.&lt;/p&gt;
&lt;p&gt;If a meeting completes its intended purpose before it's scheduled to end, let's give the time back to everyone. If it's clear the intended goal won't be achieved in the allotted time, let's stop the meeting before time is up and determine how to finish the meeting later.&lt;/p&gt;
&lt;h2&gt;Nuance and Errata&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;I am an introvert&lt;/strong&gt; and that means that prolonged exposure to humans is exhausting for me. Weird, huh? I tend to be most active when I’m not running the meeting and there are fewer people. If I’m not running the meeting and there are many people I am strangely quiet. Do not confuse my quiet with lack of engagement.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;When I ask you to do something that feels poorly defined&lt;/strong&gt; you should ask me for both clarification and a call on importance. I might still be brainstorming. These questions can save everyone a lot of time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I tend to be very reserved&lt;/strong&gt; but this is not a sign that I am uninterested, it is just who I am. Every once in a while that reserved facade is cracked and I display emotions. That’s when you can tell I’m really excited about a thing (either good or bad).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;During meetings in my office&lt;/strong&gt; I will put my phone on DND and log out of my computer if we won’t be using it. If we will be using my computer I close Outlook and only have the applications open that need to be open. During meetings I will take notes on my phone. I have a series of actions programmed on my iPhone to help keep me on top of things that I need to do. Rest assured, I’m not texting anyone, or checking the next available movie time. When I am done typing a note, I will put the phone down.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;During meetings over Zoom, Slack, etc.&lt;/strong&gt; I will put all communication apps on DND and close Outlook. Some people like to use the camera during meetings. Others don't. I am good either way. During team &lt;strong&gt;only&lt;/strong&gt; meetings I do like that everyone has the camera on. I will typically use my iPad to take notes during meetings. As stated above, I have many workflows built into my phone and the use of my iPad helps to keep things straight for me. Rest assured, I'm not checking the score of the big game. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Humans stating opinions as facts&lt;/strong&gt; are a trigger for me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Humans who gossip&lt;/strong&gt; are a trigger for me.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I am not writing about you.&lt;/strong&gt; I've been writing a blog (off an on) for a long time and continue to write. While the topics might spring from recent events, the humans involved in the writing are always made up. I am not writing about you. I try to write all the time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This document is a &lt;a href="https://github.com/randsleadershipslack/documents-and-resources/blob/master/howtorands.md"&gt;living breathing thing&lt;/a&gt;&lt;/strong&gt; and likely incomplete. I will update it frequently and would appreciate your feedback.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Original Date: June 15, 2018&lt;/li&gt;
&lt;li&gt;Updated: March 20, 2021&lt;/li&gt;
&lt;/ul&gt;</content><category term="Professional Development"></category><category term="getting to know me"></category><category term="introvert"></category><category term="Meetings"></category></entry><entry><title>Basketball Conference Finals OR How the actions of one person can fire up the other team and lead them to win</title><link href="https://www.ryancheley.com/basketball-conference-finals-or-how-the-actions-of-one-person-can-fire-up-the-other-team-and-lead-them-to-win.html" rel="alternate"></link><published>2018-06-08T08:00:00+02:00</published><updated>2018-06-08T08:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-06-08:/basketball-conference-finals-or-how-the-actions-of-one-person-can-fire-up-the-other-team-and-lead-them-to-win.html</id><summary type="html">&lt;p&gt;Last weekend I watched both games 7 of the NBA conference finals. I have no particular affinity for the NBA (I prefer the &lt;a href="https://en.m.wikipedia.org/wiki/NCAA_Division_I_Men%27s_Basketball_Tournament"&gt;Madness in March associated with the NCAA&lt;/a&gt;) but I figured with 2 game 7s it might be interesting to watch. I was not wrong.&lt;/p&gt;
&lt;p&gt;On Sunday night …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last weekend I watched both games 7 of the NBA conference finals. I have no particular affinity for the NBA (I prefer the &lt;a href="https://en.m.wikipedia.org/wiki/NCAA_Division_I_Men%27s_Basketball_Tournament"&gt;Madness in March associated with the NCAA&lt;/a&gt;) but I figured with 2 game 7s it might be interesting to watch. I was not wrong.&lt;/p&gt;
&lt;p&gt;On Sunday night Cleveland was hosted by Boston in a rematch of a game 7 from 2010. One of only 2 game 7s that LeBron James had lost.&lt;/p&gt;
&lt;p&gt;This game had all the makings of what you would want a game 7 to be. A young upstart rookie (Tatum) with something to prove. A veteran (James), also with something to prove.&lt;/p&gt;
&lt;p&gt;What really stuck our for me, for this game, was what happened at the 6:45 mark in the fourth quarter. Tatum dunked on LeBron (posterized is the term &lt;a href="http://www.espn.com/video/clip?id=23627416"&gt;ESPN&lt;/a&gt; used) to put the score at 71-69 Cleveland. What happened next though, I think, is why the Cavs won the game.&lt;/p&gt;
&lt;p&gt;Tatum proceeded to bump his chest up against the back of LeBron’s shoulder, like a small child might run up to a big kid when he did something amazing to be like, “Look at me ... I’m a big kid too!”&lt;/p&gt;
&lt;p&gt;LeBron just stood there and looked at Tatum with incredulity. The announcers seemed to enjoy the specticle more than they should have. But LeBron just stood there, the Boston crowd cheering wildly at what their young rookie had just done. To dunk over LeBron, arguably one of the greatest, in a game 7? This is the thing that legends are made of.&lt;/p&gt;
&lt;p&gt;But while the crowd and the announcers saw James look like he was a mere mortal ... what I saw was the game turning around. The look on James’ face wasn’t one of ‘damn ... that kid just dunked on me. It was, “Damn ... now I’m going to get mine and I have a punk to show how this game is really played.”&lt;/p&gt;
&lt;p&gt;From that point on the Cavs outscored the Celtics 16-10 ... not a huge margin, but a margin enough to win. What the score doesn’t show is the look of determination on LeBron’s face as he carried his team to the NBA Finals. Not because he scored all 16 points (he &lt;em&gt;only&lt;/em&gt; scored 7) but because he checked his ego at the door and worked to make his team better than the other team. In short, he was the better team mate than Tatum in those last minutes and that’s why the Cavs are in the Finals and the Celtics aren’t.&lt;/p&gt;
&lt;p&gt;Tatum’s reaction to dunking on LeBron is understandable. Hell, if I had done something like that when I was his age, I would have pumped my chest up too.&lt;/p&gt;
&lt;p&gt;But it the patience and reservedness (that perhaps come with age) that make you a great player or team member. You don’t really want to rile up a great player because that’s the only reason they need to whoop your butt.&lt;/p&gt;
&lt;p&gt;Perhaps Tatum will learn this lesson. Perhaps he won’t.&lt;/p&gt;
&lt;p&gt;Because you see, acting like a a little kid isn’t just the right of a rookie.&lt;/p&gt;
&lt;p&gt;James Harden pulled some immature shenanigans too in his team’s loss to the Warriors. At one point, with the Rockets up 59-53 with 6:13 in the 3rd, Harden when for a layup and was knocked down ... accidentally in my opinion.&lt;/p&gt;
&lt;p&gt;When a player from the Warriors tried to help him up he just sat there and then flailed his arms until one of his teammates can to help him up. Big man there Harden.&lt;/p&gt;
&lt;p&gt;By the end of the 3rd quarter the Rockets were down 76-69. By the end of the game they’ve lost 101-92.&lt;/p&gt;
&lt;p&gt;You see, when it comes down to it a great teammate will do what’s best for the team, and not do what’s best for their ego. It doesn’t seem to matter, old or young, rookie or veteran, not having the ability to control your emotions at key points in a game (or in life) can be more costly than you realize.&lt;/p&gt;
&lt;p&gt;Sometimes it’s game 7 of the NBA Conference finals, sometimes it’s just a pick up game with some friends at the park, but in either case, being a good teammate requires checking your ego at the door and working to be the best team mate you can be, not being the best player on the court.&lt;/p&gt;
&lt;p&gt;To put it another way, being the smartest person in the room doesn’t make you the most influential person in the room, and when it comes down to moving ahead, being influential trumps being smart.&lt;/p&gt;</content><category term="Sports"></category><category term="nba finals"></category><category term="team"></category></entry><entry><title>Using Drafts 5 at Work</title><link href="https://www.ryancheley.com/using-drafts-5-at-work.html" rel="alternate"></link><published>2018-06-07T04:43:00+02:00</published><updated>2018-06-07T04:43:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-06-07:/using-drafts-5-at-work.html</id><summary type="html">&lt;p&gt;I have many meetings that I go to in any given day. One of the things that I’d been struggling with was being able to keep track of what I needed to do after a meeting and/or documenting certain types of meetings more effectively.&lt;/p&gt;
&lt;p&gt;I have been using …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have many meetings that I go to in any given day. One of the things that I’d been struggling with was being able to keep track of what I needed to do after a meeting and/or documenting certain types of meetings more effectively.&lt;/p&gt;
&lt;p&gt;I have been using a Workflow I created a couple of years ago to get the pertinent details of a meeting into Drafts. I spoke about updating that workflow to incorporate drafts 5 &lt;a href="/updating-my-meeting-workflow-for-drafts-5/" title="Drafts 5!"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once I was able to get the information into Drafts 5 a new opportunity arose. I was able to run a Workflow in Drafts!&lt;/p&gt;
&lt;p&gt;I decided that getting the information into Drafts was great, but I needed a good way to get it out.&lt;/p&gt;
&lt;p&gt;There were two sections in the Draft that I decided I could leverage to help:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Actions&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Broadly speaking there are 3 types of meetings I go to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Daily Standup aka Scrum&lt;/li&gt;
&lt;li&gt;One-on-One with direct reports or my manager&lt;/li&gt;
&lt;li&gt;General Meetings&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Categorizing the meetings helped me to create Draft Actions that run Workflows for each meeting type.&lt;/p&gt;
&lt;h2&gt;Scrum&lt;/h2&gt;
&lt;p&gt;This workflow runs through the &lt;code&gt;Actions&lt;/code&gt; of the Draft and adds each one to OmniFocus in a Project called &lt;code&gt;Scrum&lt;/code&gt; with a Tag of &lt;code&gt;Work&lt;/code&gt;. The due date set for these tasks is noon of the same day. My goal is to have the items that come from Scrum totally processed by noon of that day and for 80% of them I can. Some actions are more involved, but having them in OmniFocus helps me to make sure that they get taken care of.&lt;/p&gt;
&lt;p&gt;It also creates a calendar meeting for the next business day with my Scrum template and lets me know which team member will start that next day.&lt;/p&gt;
&lt;h2&gt;One-on-One&lt;/h2&gt;
&lt;p&gt;This workflow runs similarly to the Scrum workflow. It adds the &lt;code&gt;Action&lt;/code&gt; items to OmniFocus with a due date of noon the same day, tagged with Work and in the One-on-One Project.&lt;/p&gt;
&lt;p&gt;Instead of creating a calendar meeting for the next business day at 8:30 it appends items from the &lt;code&gt;Notes&lt;/code&gt; section to a Dropbox file. The Dropbox path is predefined, but the name of the file matches the name of the person I met with (luckily I don’t have 2 Tom’s reporting to me).&lt;/p&gt;
&lt;h2&gt;General Meetings&lt;/h2&gt;
&lt;p&gt;This is the simplest workflow. It adds all of the items under actions to OmniFocus with a due date of noon, project of Meeting Follow Up and Tag of Work.&lt;/p&gt;
&lt;p&gt;After the Actions are run from Drafts the notes are archived in Drafts.&lt;/p&gt;
&lt;p&gt;I’m toying with the idea of archiving the notes from these meetings into Dropbox, but I’m not sure that it gets me anything ... so I haven’t really looked at it too deeply.&lt;/p&gt;
&lt;h2&gt;Workflow links&lt;/h2&gt;
&lt;p&gt;The links for each of the workflows can be found here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/b44b7a8fec034f3091c78393d43f65c5" title="Scrum"&gt;Parse Scrum Notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/6869662facc44c449dd531af9db099e5" title="Parse One-on-One Notes"&gt;Parse One-on-One Notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://workflow.is/workflows/c15a9a9a53f14d82a6892e03baeb2b41" title="Parse General Meeting Notes"&gt;Parse Meeting Notes&lt;/a&gt;&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="Drafts"></category><category term="Meetings"></category><category term="Workflow"></category></entry><entry><title>Setting up Jupyter Notebook on my Linode</title><link href="https://www.ryancheley.com/setting-up-jupyter-notebook-on-my-linode.html" rel="alternate"></link><published>2018-05-27T12:32:00+02:00</published><updated>2018-05-27T12:32:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-27:/setting-up-jupyter-notebook-on-my-linode.html</id><summary type="html">&lt;p&gt;A &lt;a href="http://jupyter.org"&gt;Jupyter Notebook&lt;/a&gt; is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text.&lt;/p&gt;
&lt;p&gt;Uses include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;data cleaning and transformation&lt;/li&gt;
&lt;li&gt;numerical simulation&lt;/li&gt;
&lt;li&gt;statistical modeling&lt;/li&gt;
&lt;li&gt;data visualization&lt;/li&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;li&gt;and other stuff&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’ve been interested in how to set …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="http://jupyter.org"&gt;Jupyter Notebook&lt;/a&gt; is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text.&lt;/p&gt;
&lt;p&gt;Uses include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;data cleaning and transformation&lt;/li&gt;
&lt;li&gt;numerical simulation&lt;/li&gt;
&lt;li&gt;statistical modeling&lt;/li&gt;
&lt;li&gt;data visualization&lt;/li&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;li&gt;and other stuff&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’ve been interested in how to set up a Jupyter Notebook on my &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; server for a while, but kept running into a roadblock (either mental or technical I’m not really sure).&lt;/p&gt;
&lt;p&gt;Then I came across this ‘sweet’ solution to get them set up at&lt;a href="http://blog.lerner.co.il/five-minute-guide-setting-jupyter-notebook-server/"&gt;http://blog.lerner.co.il/five-minute-guide-setting-jupyter-notebook-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My main issue was what I needed to to do keep the Jupyter Notebook running once I disconnected from command line. The solution above gave me what I needed to solve that problem&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;nohup&lt;/code&gt; allows you to disconnect from the terminal but keeps the command running in the background (which is exactly what I wanted).&lt;/p&gt;
&lt;p&gt;The next thing I wanted to do was to have the &lt;code&gt;jupyter&lt;/code&gt; notebook server run from a directory that wasn’t my home directory.&lt;/p&gt;
&lt;p&gt;To do this was way easier than I thought. You just run &lt;code&gt;nohup jupyter notebook&lt;/code&gt; from the directory you want to run it from.&lt;/p&gt;
&lt;p&gt;The last thing to do was to make sure that the notebook would start up with a server reboot. For that I wrote a shell script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# change to correct directory
cd /home/ryan/jupyter

nohup jupyter notebook &amp;amp;&amp;gt; /home/ryan/output.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last command is a slight modification of the line from above. I really wanted the output to get directed to a file that wasn’t in the directory that the &lt;code&gt;Jupyter&lt;/code&gt; notebook would be running from. Not any reason (that I know of anyway) … I just didn’t like the &lt;code&gt;nohup.out&lt;/code&gt; file in the working directory.&lt;/p&gt;
&lt;p&gt;Anyway, I now have a running Jupyter Notebook at &lt;a href="http://python.ryancheley.com:8888"&gt;http://python.ryancheley.com:8888&lt;/a&gt;^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[I’d like to update this to be running from a port other than 8888 AND I’d like to have it on SSL, but one thing at a time! &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="jupyter"></category><category term="linux"></category><category term="python"></category><category term="Remote servers"></category><category term="Shell Script"></category></entry><entry><title>A Summary of Dale Carnegie’s “How to Win Friends and Influence People”</title><link href="https://www.ryancheley.com/a-summary-of-dale-carnegies-how-to-win-friends-and-influence-people.html" rel="alternate"></link><published>2018-05-23T16:49:00+02:00</published><updated>2018-05-23T16:49:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-23:/a-summary-of-dale-carnegies-how-to-win-friends-and-influence-people.html</id><summary type="html">&lt;p&gt;This is mostly for me to write down my notes and thoughts about the book “How to Win Friends and Influence People.”&lt;/p&gt;
&lt;p&gt;I’ve noted below the summary from the end of each section below (so I don’t forget what they were).&lt;/p&gt;
&lt;p&gt;The first three sections seemed to speak …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is mostly for me to write down my notes and thoughts about the book “How to Win Friends and Influence People.”&lt;/p&gt;
&lt;p&gt;I’ve noted below the summary from the end of each section below (so I don’t forget what they were).&lt;/p&gt;
&lt;p&gt;The first three sections seemed to speak to my modern sensibilities the most (keep in mind this book was published in 1936 ... the version I read was revised in 1981).&lt;/p&gt;
&lt;p&gt;I have the summaries below, for reference, but I wanted to have my own take on each.&lt;/p&gt;
&lt;h2&gt;Fundamental Techniques in Handling People&lt;/h2&gt;
&lt;p&gt;This seems to be a long way of saying the “Use the &lt;strong&gt;Golden Rule&lt;/strong&gt;” over and over again. The three points are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don’t criticize, condemn or complain&lt;/li&gt;
&lt;li&gt;Give honest and sincere appreciation&lt;/li&gt;
&lt;li&gt;Arouse in the other person an eager want&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Six ways to make people like you&lt;/h2&gt;
&lt;p&gt;The ‘rules’ presented here are also useful for making small talk at parties (or other gatherings). I find that talking about myself with a total stranger is about the hardest thing I can do. I try to engage with people at parties and have what I hope are interesting questions to ask should I need to. Stuff I tend to avoid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What do you do for a living?&lt;/li&gt;
&lt;li&gt;Where do you work?&lt;/li&gt;
&lt;li&gt;Sports&lt;/li&gt;
&lt;li&gt;Politics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stuff I try to focus on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How do you know the host / acquaintance we may have in common&lt;/li&gt;
&lt;li&gt;What’s the most interesting problem you’ve solved or are working to solve in the last week&lt;/li&gt;
&lt;li&gt;Have you been on a vacation recently? What was your favorite part about it? (With this one I don’t let people off the hook with, ‘being away from work’ ... I try to find something that they really found enjoyable and interesting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These talking points are usually a pretty good starting point. Sometimes when I’m introduced to a person and the person introduces them as their job, i.e. This is Sally Jones, she’s a Doctor at the local Hospital, I’ll use that to parlay away from something work focused (what kind of doctor are you) to something more person focused, why did you want to become a doctor? Where did you go to Medical School? Did you know you always wanted to be a doctor? I try to focus on getting to know them better and have them talk about themselves.&lt;/p&gt;
&lt;p&gt;The tips from the book support my intuition when meeting new people. They are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Become genuinely interested in other people&lt;/li&gt;
&lt;li&gt;Smile&lt;/li&gt;
&lt;li&gt;Remember that a person’s name is to that person the sweetest and most important sound in any language&lt;/li&gt;
&lt;li&gt;Be a good listener. Encourage to talk about themselves&lt;/li&gt;
&lt;li&gt;Talk in terms of the other person’s interest&lt;/li&gt;
&lt;li&gt;Make the other person feel important - and do it sincerely&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;How to Win People to your way of thinking&lt;/h2&gt;
&lt;p&gt;This section provided the most useful and helpful information (for me anyway!). It really leads to how to have better influence (than winning friends).&lt;/p&gt;
&lt;p&gt;One of the problems I’ve suffered from throughout my life is the &lt;strong&gt;need&lt;/strong&gt; to be right about a thing. This section has concrete tips and examples of how to not be the smartest person in the room, but working on being the most influential person in the room.&lt;/p&gt;
&lt;p&gt;My favorite is the first one, which I’ll paraphrase to be “The only way to win an argument is to avoid it!” I’d never thought about trying to avoid arguments, only how to win them once I was in them. The idea reminds me a bit of &lt;a href="https://en.m.wikipedia.org/wiki/WarGames" title="War Game with Matthew Broderick (1984)"&gt;War Games&lt;/a&gt;. At the end, Joshua, the super computer that is trying to figure out how to win a Nuclear War with the USSR, concedes that the only way to win is to not play at all. Just like an argument.&lt;/p&gt;
&lt;p&gt;The other piece that really struck me was get the other person to say ‘Yes’. This is kind of sales-y and could be smarmy if used with a subtext of insincerity, but I think that the examples given in the book, and using it in the context of trying to win friends AND influence people it can go a long way.&lt;/p&gt;
&lt;p&gt;The tips from this section of the book are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The only way to get the best of an argument is to avoid it&lt;/li&gt;
&lt;li&gt;Show respect for the other person’s opinions. Never say “You’re wrong”&lt;/li&gt;
&lt;li&gt;If you are wrong, admit it quickly and emphatically&lt;/li&gt;
&lt;li&gt;Begin in a friendly way&lt;/li&gt;
&lt;li&gt;Get the other person saying “yes, yes” immediately&lt;/li&gt;
&lt;li&gt;Let the other person do a great deal of the talking&lt;/li&gt;
&lt;li&gt;Let the other person feel that the idea is his or hers&lt;/li&gt;
&lt;li&gt;Try honestly to see things from the other persons perspective&lt;/li&gt;
&lt;li&gt;BE sympathetic with the other persons ideas and desires&lt;/li&gt;
&lt;li&gt;Appeal to the nobler motives&lt;/li&gt;
&lt;li&gt;Dramatize your ideas&lt;/li&gt;
&lt;li&gt;throw down a challenge&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Be a Leader: How to change people without giving offense or arousing resentment&lt;/h2&gt;
&lt;p&gt;This section has the best points, but the stories were &lt;em&gt;very&lt;/em&gt; contrived. Again, this goes to how to win influence more than winning friends. Some of the items are a bit too 1930s for my taste (numbers 2, 3, and 6 in particular seem overly outdated). But overall, they are good ideas to work towards.&lt;/p&gt;
&lt;p&gt;The tips are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Begin with praise and honest appreciation&lt;/li&gt;
&lt;li&gt;Call attention to the person’s mistake indirectly&lt;/li&gt;
&lt;li&gt;Talk about your own mistakes before criticizing the other person&lt;/li&gt;
&lt;li&gt;Ask questions instead of giving direct orders&lt;/li&gt;
&lt;li&gt;Let the other person save face&lt;/li&gt;
&lt;li&gt;Praise the slightest improvement and praise every improvement. Be “hearty in your approbation and lavish in your praise”&lt;/li&gt;
&lt;li&gt;Give the other person a fine reputation to live up to&lt;/li&gt;
&lt;li&gt;Use encouragement. make the fault seem easy to correct&lt;/li&gt;
&lt;li&gt;Make the other person gabby about doing the thing you suggest&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Overall I’m really glad that I read this book and glad that my &lt;a href="https://chimecentral.org"&gt;CHIME&lt;/a&gt; mentor &lt;a href="https://www.linkedin.com/in/srtim/"&gt;Tim Gibbs&lt;/a&gt; recommended it to me.&lt;/p&gt;
&lt;p&gt;I’ve been actively working to include these ideas into my work and home life and have found some surprising benefits. It’s also helping to make me a little less stressed out.&lt;/p&gt;
&lt;p&gt;If you’re looking for a bit of help in trying to be a better influencer in your organization, or your personal life, &lt;a href="https://www.amazon.com/How-Win-Friends-Influence-People/dp/1439167346/ref=tmm_hrd_swatch_0?_encoding=UTF8&amp;amp;qid=1527122851&amp;amp;sr=8-1" title="How to Win Friends and Influence People"&gt;this book&lt;/a&gt; is well worth the read.&lt;/p&gt;</content><category term="Books"></category><category term="Influence"></category><category term="productivity"></category></entry><entry><title>Updating my meeting Workflow for Drafts 5</title><link href="https://www.ryancheley.com/updating-my-meeting-workflow-for-drafts-5.html" rel="alternate"></link><published>2018-05-19T17:56:00+02:00</published><updated>2018-05-19T17:56:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-19:/updating-my-meeting-workflow-for-drafts-5.html</id><summary type="html">&lt;p&gt;Drafts is a &lt;strong&gt;productivity&lt;/strong&gt; app created by Greg Pierce (\@AgileTortoise).&lt;/p&gt;
&lt;p&gt;I’ve loved and used Drafts 4 every day for the last several years. I loved it so much I even contributed to the Tip Jar Greg had in the app. Seriously, it’s an amazing app. If you haven …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Drafts is a &lt;strong&gt;productivity&lt;/strong&gt; app created by Greg Pierce (\@AgileTortoise).&lt;/p&gt;
&lt;p&gt;I’ve loved and used Drafts 4 every day for the last several years. I loved it so much I even contributed to the Tip Jar Greg had in the app. Seriously, it’s an amazing app. If you haven’t &lt;a href="https://itunes.apple.com/us/app/drafts-5-capture-act/id1236254471?mt=8"&gt;downloaded&lt;/a&gt; it already you totally should.&lt;/p&gt;
&lt;p&gt;Recently, Greg released Drafts 5. With this new version comes a new Business Model as well. Instead of a single pay (and hope people ‘tip’ you) he’s converted to a subscription model.&lt;/p&gt;
&lt;p&gt;I signed up for the free week and didn’t have a real opportunity to use it before my free week was converted into a pay week but I’ve no regrets. I like what Greg does and want him to keep updating his app so that I can get the benefits of it once I have a real chance to dive in.&lt;/p&gt;
&lt;p&gt;Part of the reason I wasn’t able to really use the new version is the way that I primarily use Drafts. I have a &lt;a href="https://workflow.is/workflows/fe54a103d8a94faaa5784510001e374e"&gt;WorkFlow&lt;/a&gt; that takes a meeting on my work calendar and allows me to take notes about that meetings.&lt;/p&gt;
&lt;p&gt;It’s one of the most useful &lt;strong&gt;productivity&lt;/strong&gt; tools I have during my morning standup meetings with my team, and it’s useful for the other (sometimes endless) meetings that I go to.&lt;/p&gt;
&lt;p&gt;With the release of Drafts 5 I was not longer able to use both Drafts 5 AND my workflow, so I needed to update my workflow.&lt;/p&gt;
&lt;p&gt;With Drafts 4 it was just one of the built in Apps. Because Drafts 5 limits some of the functionality unless you have the &lt;em&gt;PRO&lt;/em&gt; version I don’t think that Workflow will be updated to include Drafts 5 like it did Drafts 4.&lt;/p&gt;
&lt;p&gt;Once I realized that &lt;em&gt;AND&lt;/em&gt; since I’m paying for the app I figured I’d need to update my Workflow instead of waiting and hoping that Workflow would be updated to include Drafts 5.&lt;/p&gt;
&lt;p&gt;In order to make the update I had to look for &lt;a href="https://www.w3.org/TR/app-uri/"&gt;URL Scheme&lt;/a&gt; for Drafts 5 ... but I couldn’t really find one. I assumed that Drafts 5 URL Scheme would be the same as &lt;a href="https://agiletortoise.zendesk.com/hc/en-us/articles/202771400-Drafts-URL-Schemes"&gt;Drafts 4&lt;/a&gt; (I was right) and made various attempts at getting a copy of the Workflow to work with Drafts 5.&lt;/p&gt;
&lt;p&gt;This is the section of the workflow that needs to be updated:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-282" height="388" src="/images/uploads/2018/05/Image-5-19-18-6-37-PM.png" width="1619"&gt;&lt;/p&gt;
&lt;p&gt;Since Drafts 5 isn’t included in the Built in Apps I was going to need to pass a URL and open the app.&lt;/p&gt;
&lt;p&gt;This would require 3 separate steps in Workflow&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Convert Text into URL Encoded string&lt;/li&gt;
&lt;li&gt;Prepend the URL Scheme for creating a new draft to the URL Encoded String&lt;/li&gt;
&lt;li&gt;Open the URL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-283" height="1490" src="/images/uploads/2018/05/Image-5-19-18-6-37-PM-1.png" width="1622"&gt;&lt;/p&gt;
&lt;p&gt;This basically means that 1 step is now replaced with 3 ... but hey, that’s the price of progress must be paid!&lt;/p&gt;
&lt;p&gt;Both the &lt;a href="https://workflow.is/workflows/fe54a103d8a94faaa5784510001e374e"&gt;Drafts 4&lt;/a&gt; and &lt;a href="https://workflow.is/workflows/dae8898da2c34dcf9eee099c333e749d"&gt;Drafts 5&lt;/a&gt; versions of these workflows are available.&lt;/p&gt;
&lt;p&gt;If you enjoy them, hit me up in the comments or let me know on Twitter \@ryancheley!&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="Workflow"></category></entry><entry><title>OmniFocus 3!</title><link href="https://www.ryancheley.com/omnifocus-3.html" rel="alternate"></link><published>2018-05-05T14:28:00+02:00</published><updated>2018-05-05T14:28:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-05:/omnifocus-3.html</id><summary type="html">&lt;p&gt;The OmniGroup &lt;a href="https://www.omnigroup.com/blog/omnifocus-3.0-for-ios-ship-date-may-30"&gt;posted on their blog the other day&lt;/a&gt; that they have a ship date for OmniFocus 3 … May 30.&lt;/p&gt;
&lt;p&gt;To say that I’m excited is a bit of an understatement. I’ve been a loyal OmniFocus user for about 5 years now, and though &lt;a href="/declaring-omnifocus-bankrupty.html"&gt;I have declared OmniFocus …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The OmniGroup &lt;a href="https://www.omnigroup.com/blog/omnifocus-3.0-for-ios-ship-date-may-30"&gt;posted on their blog the other day&lt;/a&gt; that they have a ship date for OmniFocus 3 … May 30.&lt;/p&gt;
&lt;p&gt;To say that I’m excited is a bit of an understatement. I’ve been a loyal OmniFocus user for about 5 years now, and though &lt;a href="/declaring-omnifocus-bankrupty.html"&gt;I have declared OmniFocus bankruptcy once&lt;/a&gt;, I still believe it’s a super useful App and I could not imagine life without it.&lt;/p&gt;
&lt;p&gt;OmniFocus3 will bring with it tags which is something I’ve really wanted and struggled without in using OmniFocus2. Sometimes things don’t just fall into pure GTD contexts and tags appear to be a recognition of that.&lt;/p&gt;
&lt;p&gt;The initial release on May 30 is iOS only. The Mac Version is set to be released in 2018 but no firm date has been announced.&lt;/p&gt;
&lt;p&gt;Only 25 days until upgrade day 😊&lt;/p&gt;</content><category term="Productivity"></category><category term="iOS"></category><category term="OmniFocus"></category></entry><entry><title>Making it easy to ssh into a remote server</title><link href="https://www.ryancheley.com/making-it-easy-to-ssh-into-a-remote-server.html" rel="alternate"></link><published>2018-05-05T12:54:00+02:00</published><updated>2018-05-05T12:54:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-05:/making-it-easy-to-ssh-into-a-remote-server.html</id><summary type="html">&lt;p&gt;Logging into a remote server is a drag. Needing to remember the password (or get it from &lt;a href="https://1password.com"&gt;1Password&lt;/a&gt;); needing to remember the IP address of the remote server. Ugh.&lt;/p&gt;
&lt;p&gt;It’d be so much easier if I could just&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="nv"&gt;@servername&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and get into the server.&lt;/p&gt;
&lt;p&gt;And it turns …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Logging into a remote server is a drag. Needing to remember the password (or get it from &lt;a href="https://1password.com"&gt;1Password&lt;/a&gt;); needing to remember the IP address of the remote server. Ugh.&lt;/p&gt;
&lt;p&gt;It’d be so much easier if I could just&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="nv"&gt;@servername&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and get into the server.&lt;/p&gt;
&lt;p&gt;And it turns out, you can. You just need to do two simple things.&lt;/p&gt;
&lt;h2&gt;Simple thing the first: Update the &lt;code&gt;hosts&lt;/code&gt; file on your local computer to map the IP address to a memorable name.&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;hosts&lt;/code&gt; file is located at &lt;code&gt;/etc/hosts&lt;/code&gt; (at least on *nix based systems).&lt;/p&gt;
&lt;p&gt;Go to the hosts file in your favorite editor … my current favorite editor for simple stuff like this is vim.&lt;/p&gt;
&lt;p&gt;Once there, add the IP address you don’t want to have to remember, and then a name that you will remember. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;67.176.220.115&lt;/span&gt;    &lt;span class="n"&gt;easytoremembername&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One thing to keep in mind, you’ll already have some entries in this file. Don’t mess with them. Leave them there. Seriously … it’ll be better for everyone if you do.&lt;/p&gt;
&lt;h2&gt;Simple thing the second: Generate a public-private key and share the public key with the remote server&lt;/h2&gt;
&lt;p&gt;From the terminal run the command &lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;. This will generate a public and private key. You will be asked for a location to save the keys to. The default (on MacOS) is &lt;code&gt;/Users/username/.ssh/id_rsa&lt;/code&gt;. I tend to accept the default (no reason not to) and leave the passphrase blank (this means you won’t have to enter a password which is what we’re looking for in the first place!)&lt;/p&gt;
&lt;p&gt;Next, we copy the public key to the host(s) you want to access using the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-copy-id &amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;pi&lt;/span&gt;&lt;span class="nv"&gt;@rpicamera&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first time you do this you will get a message asking you if you’re sure you want to do this. Type in &lt;code&gt;yes&lt;/code&gt; and you’re good to go.&lt;/p&gt;
&lt;p&gt;One thing to note, doing this updates the file &lt;code&gt;known_hosts&lt;/code&gt;. If, for some reason, the server you are ssh-ing to needs to be rebuilt (i.e. you have to keep destroying your Digital Ocean Ubuntu server because you can’t get the static files to be served properly for your Django project) then you need to go to the &lt;code&gt;known_hosts&lt;/code&gt; file and remove the entry for that known host.&lt;/p&gt;
&lt;p&gt;When you do that you’ll be asked about the identity of the server (again). Just say yes and you’re good to go.&lt;/p&gt;
&lt;p&gt;If you forget that step then when you try to ssh into the server you get a nasty looking error message saying that the server identities don’t match and you can’t proceed.&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="digital ocean"></category><category term="linux"></category><category term="Remote servers"></category><category term="SSH"></category><category term="Terminal"></category></entry><entry><title>Automating the Hummingbird Video Upload to YouTube or How I finally got Cron to do what I needed it to do but in the ugliest way possible</title><link href="https://www.ryancheley.com/automating-the-hummingbird-video-upload-to-youtube-or-how-i-finally-got-cron-to-do-what-i-needed-it-to-do-but-in-the-ugliest-way-possible.html" rel="alternate"></link><published>2018-05-02T16:44:00+02:00</published><updated>2018-05-02T16:44:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-02:/automating-the-hummingbird-video-upload-to-youtube-or-how-i-finally-got-cron-to-do-what-i-needed-it-to-do-but-in-the-ugliest-way-possible.html</id><summary type="html">&lt;p&gt;Several weeks ago in &lt;a href="/cronjob-redux.html"&gt;Cronjob Redux&lt;/a&gt; I wrote that I had &lt;em&gt;finally&lt;/em&gt; gotten Cron to automate the entire process of compiling the &lt;code&gt;h264&lt;/code&gt; files into an &lt;code&gt;mp4&lt;/code&gt; and uploading it to &lt;a href="https://www.youtube.com"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hadn’t. And it took the better part of the last 2 weeks to figure out what …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Several weeks ago in &lt;a href="/cronjob-redux.html"&gt;Cronjob Redux&lt;/a&gt; I wrote that I had &lt;em&gt;finally&lt;/em&gt; gotten Cron to automate the entire process of compiling the &lt;code&gt;h264&lt;/code&gt; files into an &lt;code&gt;mp4&lt;/code&gt; and uploading it to &lt;a href="https://www.youtube.com"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hadn’t. And it took the better part of the last 2 weeks to figure out what the heck was going on.&lt;/p&gt;
&lt;p&gt;Part of what I wrote before was correct. I wasn’t able to read the &lt;code&gt;client_secrets.json&lt;/code&gt; file and that was leading to an error.&lt;/p&gt;
&lt;p&gt;I was &lt;em&gt;not&lt;/em&gt; correct on the creation of the &lt;code&gt;create_mp4.sh&lt;/code&gt; though.&lt;/p&gt;
&lt;p&gt;The reason I got it to run automatically that night was because I had, in my testing, created the &lt;code&gt;create_mp4.sh&lt;/code&gt; and when cron ran my &lt;code&gt;run_script.sh&lt;/code&gt; it was able to use what was already there.&lt;/p&gt;
&lt;p&gt;The next night when it ran, the &lt;code&gt;create_mp4.sh&lt;/code&gt; was already there, but the &lt;code&gt;h264&lt;/code&gt; files that were referenced in it weren’t. This lead to no video being uploaded and me being confused.&lt;/p&gt;
&lt;p&gt;The issue was that cron was unable to run the part of the script that generates the script to create the &lt;code&gt;mp4&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;I’m close to having a fix for that, but for now I did the most inelegant thing possible. I broke up the script in cron so it looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;00&lt;/span&gt; &lt;span class="mf"&gt;06&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cleanup&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="mf"&gt;10&lt;/span&gt; &lt;span class="mf"&gt;19&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script_01&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="mf"&gt;11&lt;/span&gt; &lt;span class="mf"&gt;19&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script_02&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;
&lt;span class="mf"&gt;12&lt;/span&gt; &lt;span class="mf"&gt;19&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script_03&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="mf"&gt;13&lt;/span&gt; &lt;span class="mf"&gt;19&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kr"&gt;run&lt;/span&gt;&lt;span class="n"&gt;_script&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At 6am every morning the &lt;code&gt;cleanup.sh&lt;/code&gt; runs and removes the &lt;code&gt;h264&lt;/code&gt; files, the &lt;code&gt;mp4&lt;/code&gt; file and the &lt;code&gt;create_mp4.sh&lt;/code&gt; script&lt;/p&gt;
&lt;p&gt;At 7:10pm the ‘&lt;a href="https://gist.github.com/ryancheley/5b11cc15160f332811a3b3d04edf3780"&gt;header&lt;/a&gt;’ for the &lt;code&gt;create_mp4.sh&lt;/code&gt; runs. At 7:11pm the ‘&lt;a href="https://gist.github.com/ryancheley/9e502a9f1ed94e29c4d684fa9a8c035a"&gt;body&lt;/a&gt;’ for &lt;code&gt;create_mp4.sh&lt;/code&gt; runs. At 7:12pm the ‘&lt;a href="https://gist.github.com/ryancheley/3c91a4b27094c365b121a9dc694c3486"&gt;footer&lt;/a&gt;’ for &lt;code&gt;create_mp4.sh&lt;/code&gt; runs.&lt;/p&gt;
&lt;p&gt;Finally at 7:13pm the &lt;code&gt;run_script.sh&lt;/code&gt; compiles the &lt;code&gt;h264&lt;/code&gt; files into an &lt;code&gt;mp4&lt;/code&gt; and uploads it to YouTube.&lt;/p&gt;
&lt;p&gt;Last night while I was at a School Board meeting the whole process ran on it’s own. I was super pumped when I checked my YouTube channel and saw that the May 1 hummingbird video was there and I didn’t have to do anything.&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="automation"></category><category term="Raspberry Pi"></category><category term="youtube"></category></entry><entry><title>Whoops! Or how I broke my website by installing Nginx with Apache</title><link href="https://www.ryancheley.com/whoops-or-how-i-broke-my-website-by-installing-nginx-with-apache.html" rel="alternate"></link><published>2018-05-01T17:04:00+02:00</published><updated>2018-05-01T17:04:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-01:/whoops-or-how-i-broke-my-website-by-installing-nginx-with-apache.html</id><summary type="html">&lt;p&gt;I’ve been working on a project to create a &lt;a href="https://www.djangoproject.com"&gt;Django&lt;/a&gt; based website. Over the weekend (Saturday I think) I tried to get it up and running on my &lt;a href="https://www.djangoproject.com"&gt;Linode&lt;/a&gt; server. However, after a couple of failed attempts I decided to use the free hosting coupon^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ I had for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a project to create a &lt;a href="https://www.djangoproject.com"&gt;Django&lt;/a&gt; based website. Over the weekend (Saturday I think) I tried to get it up and running on my &lt;a href="https://www.djangoproject.com"&gt;Linode&lt;/a&gt; server. However, after a couple of failed attempts I decided to use the free hosting coupon^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ I had for &lt;a href="https://www.digitalocean.com"&gt;DigitalOcean&lt;/a&gt; to see if that allowed me to reply more easily deploy … the short answer … meh.&lt;/p&gt;
&lt;p&gt;What I didn’t realize over the weekend is that while I had been trying to deploy my Django site, I had installed &lt;a href="http://nginx.org"&gt;Nginx&lt;/a&gt; on my Linode server that was also running &lt;a href="https://httpd.apache.org"&gt;apache2&lt;/a&gt;. This lead to them both trying to listen on port 80 but because Nginx was the last thing I had kicked off, it was &lt;em&gt;winning&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;While I was working on my Django site I should have realized that something was up when I tried to connect to the blog for the site (still a Wordpress site on my Linode server) and it returned a ‘Can not connect to the server message’. I didn’t pay much attention because I figured (incorrectly) that I had done something specific to that subdomain, and not that I had made all of the sites on my Linode server inaccessible.&lt;/p&gt;
&lt;p&gt;Last night at about 9 I thought, “Well, it should’t take long for me to figure out the issue with the new blog. ”&lt;/p&gt;
&lt;p&gt;By 10:15 I tried everything the internet had told me to try and I was still unable to get apache2 to reload.&lt;/p&gt;
&lt;p&gt;I googled a bunch of stuff, but nothing was helping.&lt;/p&gt;
&lt;p&gt;When I tried to get the status on apache2 I would get this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;●&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;LSB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apache2&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;
   &lt;span class="n"&gt;Loaded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt; &lt;span class="n"&gt;preset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;Drop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
           &lt;span class="err"&gt;└─&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
   &lt;span class="n"&gt;Active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inactive&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dead&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;since&lt;/span&gt; &lt;span class="n"&gt;Tue&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;PDT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;
     &lt;span class="n"&gt;Docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;man&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sysv&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7718&lt;/span&gt; &lt;span class="n"&gt;ExecStop&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;SUCCESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7703&lt;/span&gt; &lt;span class="n"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;SUCCESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;AH00072&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;make_sock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="p"&gt;[::]:&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;already&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;AH00072&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;make_sock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;listening&lt;/span&gt; &lt;span class="n"&gt;sockets&lt;/span&gt; &lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shutting&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;AH00015&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unable&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;logs&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Action&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;start&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Apache&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="nb"&gt;log&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7718&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Stopping&lt;/span&gt; &lt;span class="n"&gt;Apache&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7718&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="n"&gt;milo&lt;/span&gt; &lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Started&lt;/span&gt; &lt;span class="n"&gt;LSB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Apache2&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This morning I started to google each line of the status message and finally got to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;no listening sockets available, shutting down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Googling for that lead me to trying this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo netstat -ltnp | grep &amp;#39;:80&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which output this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3324/nginx -g daemo
tcp6       0      0 :::80                   :::*                    LISTEN      3324/nginx -g daemo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, I saw the issue. Over the weekend while I was futzing around I had apparently installed Nginx and let it listen on port 80 AND kept it running.&lt;/p&gt;
&lt;p&gt;Once I killed the Nginx process with this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo kill -9 3324
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I was able to restart apache2 with no problems.&lt;/p&gt;
&lt;p&gt;Thank goodness.&lt;/p&gt;
&lt;p&gt;I find that when I mess something up like this it’s important to ask myself what I learned from the experience.&lt;/p&gt;
&lt;p&gt;In that vein …&lt;/p&gt;
&lt;p&gt;What did I learn from this experience?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Can’t run apache2 and Nginx on the same server and have them listen on the same port. Seems obvious, but you know having to &lt;strong&gt;actually&lt;/strong&gt; deal with it really seals the deal&lt;/li&gt;
&lt;li&gt;The output messages are super helpful … google each part of them and don’t give up&lt;/li&gt;
&lt;li&gt;A good night’s sleep can make all the difference&lt;/li&gt;
&lt;li&gt;Rolling your own web server is less expensive than having it be Turnkey (a la SquareSpace, or some other hosted solution) but you end up being your own Sys Admin and that’s actually pretty easy when things are going well, and a freaking nightmare when they’re not&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;[Thanks to the Talk Python to Me Course for Entrepreneurs &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Musings"></category><category term="apache2"></category><category term="django"></category><category term="nginx"></category></entry><entry><title>Cronjob Redux</title><link href="https://www.ryancheley.com/cronjob-redux.html" rel="alternate"></link><published>2018-04-20T19:10:00+02:00</published><updated>2018-04-20T19:10:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-20:/cronjob-redux.html</id><summary type="html">&lt;p&gt;After &lt;strong&gt;days&lt;/strong&gt; of trying to figure this out, I finally got the video to upload via a cronjob.&lt;/p&gt;
&lt;p&gt;There were 2 issues.&lt;/p&gt;
&lt;h2&gt;Issue the first&lt;/h2&gt;
&lt;p&gt;Finally found the issue. &lt;a href="https://developers.google.com/youtube/v3/guides/uploading_a_video"&gt;Original script from YouTube developers guide&lt;/a&gt;had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CLIENT_SECRETS_FILE = &amp;quot;client_secrets.json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then a couple of lines later, this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;% os.path …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;After &lt;strong&gt;days&lt;/strong&gt; of trying to figure this out, I finally got the video to upload via a cronjob.&lt;/p&gt;
&lt;p&gt;There were 2 issues.&lt;/p&gt;
&lt;h2&gt;Issue the first&lt;/h2&gt;
&lt;p&gt;Finally found the issue. &lt;a href="https://developers.google.com/youtube/v3/guides/uploading_a_video"&gt;Original script from YouTube developers guide&lt;/a&gt;had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CLIENT_SECRETS_FILE = &amp;quot;client_secrets.json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then a couple of lines later, this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;% os.path.abspath(os.path.join(os.path.dirname(__file__), CLIENT_SECRETS_FILE))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When &lt;code&gt;crontab&lt;/code&gt; would run the script it would run from a path that wasn’t where the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; file was and so a message would be displayed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;

&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;populate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client_secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="nl"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="nf"&gt;%s&lt;/span&gt;

&lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Developers&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;
&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//console.developers.google.com/&lt;/span&gt;

&lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;client_secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;please&lt;/span&gt; &lt;span class="nl"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//developers.google.com/api-client-library/python/guide/aaa_client_secrets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What I needed to do was to update the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; to be the whole path so that it could always find the file.&lt;/p&gt;
&lt;p&gt;A simple change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;CLIENT_SECRETS_FILE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="nv"&gt;abspath&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="nv"&gt;join&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;path&lt;/span&gt;.&lt;span class="k"&gt;dirname&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;__file__&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;CLIENT_SECRETS_FILE&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Issue the second&lt;/h2&gt;
&lt;p&gt;When the &lt;code&gt;create_mp4.sh&lt;/code&gt; script would run it was reading all of the &lt;code&gt;h264&lt;/code&gt; files from the directory where they lived &lt;strong&gt;BUT&lt;/strong&gt; they were attempting to output the &lt;code&gt;mp4&lt;/code&gt; file to &lt;code&gt;/&lt;/code&gt; which it didn’t have permission to write to.&lt;/p&gt;
&lt;p&gt;This was failing silently (I’m still not sure how I could have caught the error). Since there was no &lt;code&gt;mp4&lt;/code&gt; file to upload that script was failing (though it was true that the location of the &lt;code&gt;CLIENT_SECRETS_FILE&lt;/code&gt; was an issue).&lt;/p&gt;
&lt;p&gt;What I needed to do was change the &lt;code&gt;create_mp4.sh&lt;/code&gt; file so that when the MP4Box command output the &lt;code&gt;mp4&lt;/code&gt; file to the proper directory. The script went from this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="cm"&gt;/*.h264)); for index in ${!array[@]}; do if [ &amp;quot;$index&amp;quot; -eq 0 ]; then echo -n &amp;quot; -add ${array[index]}&amp;quot;; else echo -n &amp;quot; -cat ${array[index]}&amp;quot;; fi; done; echo -n &amp;quot; hummingbird.mp4&amp;quot;) &amp;gt; create_mp4.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="cm"&gt;/*.h264)); for index in ${!array[@]}; do if [ &amp;quot;$index&amp;quot; -eq 0 ]; then echo -n &amp;quot; -add ${array[index]}&amp;quot;; else echo -n &amp;quot; -cat ${array[index]}&amp;quot;; fi; done; echo -n &amp;quot; /home/pi/Documents/python_projects/hummingbird.mp4&amp;quot;) &amp;gt; /home/pi/Documents/python_projects/create_mp4.sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last bit &lt;code&gt;/home/pi/Documents/python_projects/create_mp4.sh&lt;/code&gt; may not be &lt;em&gt;neccesary&lt;/em&gt; but I’m not taking any chances.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.youtube.com/watch?v=OaRiW1aFk9k"&gt;video posted tonight&lt;/a&gt; is the first one that was completely automatic!&lt;/p&gt;
&lt;p&gt;Now … if I could just figure out how to automatically fill up my hummingbird feeder.&lt;/p&gt;</content><category term="Automation"></category><category term="automation"></category><category term="python"></category><category term="Raspberry Pi"></category><category term="Shell Script"></category><category term="video"></category><category term="youtube"></category></entry><entry><title>Cronjob ... Finally</title><link href="https://www.ryancheley.com/cronjob-finally.html" rel="alternate"></link><published>2018-04-10T20:10:00+02:00</published><updated>2018-04-10T20:10:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-10:/cronjob-finally.html</id><summary type="html">&lt;p&gt;I’ve mentioned before that I have been working on getting the hummingbird video upload automated.&lt;/p&gt;
&lt;p&gt;Each time I thought I had it, and each time I was wrong.&lt;/p&gt;
&lt;p&gt;For some reason I could run it from the command line without issue, but when the cronjob would try and run …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve mentioned before that I have been working on getting the hummingbird video upload automated.&lt;/p&gt;
&lt;p&gt;Each time I thought I had it, and each time I was wrong.&lt;/p&gt;
&lt;p&gt;For some reason I could run it from the command line without issue, but when the cronjob would try and run it ... nothing.&lt;/p&gt;
&lt;p&gt;Turns out, it was running, it just wasn’t doing anything. And that was my fault.&lt;/p&gt;
&lt;p&gt;The file I had setup in cronjob was called &lt;code&gt;run_scrip.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;At first I was confused because the script was suppose to be writing out to a log file all of it’s activities. But it didn’t appear to.&lt;/p&gt;
&lt;p&gt;Then I noticed that the log.txt file it was writing was in the main &lt;code&gt;\`&lt;/code&gt; directory. That should have been my first clue.&lt;/p&gt;
&lt;p&gt;I kept trying to get the script to run, but suddenly, in a blaze of glory, realized that it &lt;strong&gt;was&lt;/strong&gt; running, it just wasn’t doing anything.&lt;/p&gt;
&lt;p&gt;And it wasn’t doing anything for the same reason that the log file was being written to the &lt;code&gt;\`&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;All of the paths were relative instead of absolute, so when the script ran the command &lt;code&gt;./create_mp4.sh&lt;/code&gt; it looks for that script in the home directory, didn’t find it, and moved on.&lt;/p&gt;
&lt;p&gt;The fix was simple enough, just add absolute paths and we’re golden.&lt;/p&gt;
&lt;p&gt;That means my &lt;code&gt;run_script.sh&lt;/code&gt; goes from this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create the script that will be run&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;create_script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# make the script that was just created executable&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script to create the mp4 file&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create MP4 Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# upload video to YouTube.com&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploaded Video to YouTube.com: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# Next we remove the video files locally&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed h264 files: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed mp4 file: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# change to the directory with all of the files&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script that will be run&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# make the script that was just created executable&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="c1"&gt;# Create the script to create the mp4 file&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Create MP4 Shell Script: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# upload video to YouTube.com&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploaded Video to YouTube.com: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="c1"&gt;# Next we remove the video files locally&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed h264 files: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/*.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;removed mp4 file: $(date)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Documents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python_projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I made this change and then started getting an error about not being able to access a &lt;code&gt;json&lt;/code&gt; file necessary for the upload to &lt;a href="https://www.youtube.com"&gt;YouTube&lt;/a&gt;. Sigh.&lt;/p&gt;
&lt;p&gt;Then while searching for what directory the cronjob was running from I found &lt;a href="https://unix.stackexchange.com/questions/38951/what-is-the-working-directory-when-cron-executes-a-job"&gt;this very simple&lt;/a&gt; idea. The response was, why not just change it to the directory you want. 🤦‍♂️  &lt;/p&gt;
&lt;p&gt;I added the &lt;code&gt;cd&lt;/code&gt; to the top of the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# change to the directory with all of the files
cd /home/pi/Documents/python_projects/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Anyway, now it works. Finally!&lt;/p&gt;
&lt;p&gt;Tomorrow will be the first time (unless of course something else goes wrong) that The entire process will be automated. Super pumped!&lt;/p&gt;</content><category term="Automation"></category><category term="Cronjob"></category><category term="python"></category><category term="youtube"></category></entry><entry><title>SSL ... Finally!</title><link href="https://www.ryancheley.com/ssl-finally.html" rel="alternate"></link><published>2018-04-07T20:16:00+02:00</published><updated>2018-04-07T20:16:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-07:/ssl-finally.html</id><summary type="html">&lt;p&gt;I’ve been futzing around with SSL on this site since last December. I’ve had about 4 attempts and it just never seemed to work.&lt;/p&gt;
&lt;p&gt;Earlier this evening I was thinking about getting a second &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; just to get a fresh start. I was &lt;em&gt;this&lt;/em&gt; close to getting it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been futzing around with SSL on this site since last December. I’ve had about 4 attempts and it just never seemed to work.&lt;/p&gt;
&lt;p&gt;Earlier this evening I was thinking about getting a second &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; just to get a fresh start. I was &lt;em&gt;this&lt;/em&gt; close to getting it when I thought, what the hell, let me try to work it out one more time.&lt;/p&gt;
&lt;p&gt;And this time it actually worked.&lt;/p&gt;
&lt;p&gt;I’m not really sure what I did differently, but using this &lt;a href="https://certbot.eff.org/lets-encrypt/ubuntuxenial-apache"&gt;site&lt;/a&gt; seemed to make all of the difference.&lt;/p&gt;
&lt;p&gt;The only other thing I had to do was make a change in the word press settings (from &lt;code&gt;http&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt;) and enable a plugin &lt;a href="https://really-simple-ssl.com"&gt;Really Simple SSL&lt;/a&gt; and it finally worked.&lt;/p&gt;
&lt;p&gt;I even got an ‘A’ from SSL Labs!&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-265" height="2048" src="/images/uploads/2018/04/Image-4-7-18-9-15-PM.png" width="2732"&gt;&lt;/p&gt;
&lt;p&gt;Again, not really sure why this seemed so hard and took so long.&lt;/p&gt;
&lt;p&gt;I guess sometimes you just have to try over and over and over again&lt;/p&gt;</content><category term="Server"></category><category term="SSL"></category></entry><entry><title>Hummingbird Video Capture</title><link href="https://www.ryancheley.com/hummingbird-video-capture.html" rel="alternate"></link><published>2018-04-05T17:46:00+02:00</published><updated>2018-04-05T17:46:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-05:/hummingbird-video-capture.html</id><summary type="html">&lt;p&gt;I &lt;a href="/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file-revisited.html"&gt;previously wrote&lt;/a&gt; about how I placed my Raspberry Pi above my hummingbird feeder and added a camera to it to capture video.&lt;/p&gt;
&lt;p&gt;Well, the day has finally come where I’ve been able to put my video of it up on &lt;a href="https://youtu.be/_oNlhrZJ-0Y"&gt;YouTube&lt;/a&gt;! It’s totally silly, but it was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I &lt;a href="/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file-revisited.html"&gt;previously wrote&lt;/a&gt; about how I placed my Raspberry Pi above my hummingbird feeder and added a camera to it to capture video.&lt;/p&gt;
&lt;p&gt;Well, the day has finally come where I’ve been able to put my video of it up on &lt;a href="https://youtu.be/_oNlhrZJ-0Y"&gt;YouTube&lt;/a&gt;! It’s totally silly, but it was satisfying getting it out there for everyone to watch and see.&lt;/p&gt;
&lt;h2&gt;Hummingbird Video Capture: Addendum&lt;/h2&gt;
&lt;p&gt;The code used to generate the the &lt;code&gt;mp4&lt;/code&gt; file haven’t changed (really). I did do a couple of things to make it a little easier though.&lt;/p&gt;
&lt;p&gt;I have 2 scripts that generate the file and then copy it from the pi to my MacBook Pro and the clean up:&lt;/p&gt;
&lt;p&gt;Script 1 is called &lt;code&gt;create_script.sh&lt;/code&gt; and looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;${!&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;@&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;$index&amp;quot; -eq 0 &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; -add ${array[index]}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; -cat ${array[index]}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; hummingbird.mp4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chmod&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This creates a script called &lt;code&gt;create_mp4.sh&lt;/code&gt; and makes it executable.&lt;/p&gt;
&lt;p&gt;This script is called by another script called &lt;code&gt;run_script.sh&lt;/code&gt; and looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_mp4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;

&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="n"&gt;hummingbird&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt; &lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="mf"&gt;@192.168.1.209&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ryan&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="cp"&gt;# Next we remove the video files locally&lt;/span&gt;

&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It runs the &lt;code&gt;create_script.sh&lt;/code&gt; which creates &lt;code&gt;create_mpr.sh&lt;/code&gt; and then runs it.&lt;/p&gt;
&lt;p&gt;Then I use the &lt;code&gt;scp&lt;/code&gt; command to copy the &lt;code&gt;mp4&lt;/code&gt; file that was just created over to my Mac Book Pro.&lt;/p&gt;
&lt;p&gt;As a last bit of housekeeping I clean up the video files.&lt;/p&gt;
&lt;p&gt;I’ve added this &lt;code&gt;run_script.sh&lt;/code&gt; to a cron job that is scheduled to run every night at midnight.&lt;/p&gt;
&lt;p&gt;We’ll see how well it runs tomorrow night!&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="Hummingbird"></category><category term="python"></category><category term="video"></category><category term="youtube"></category></entry><entry><title>How to pick a team to root for (when the Dodgers aren’t playing)</title><link href="https://www.ryancheley.com/how-to-pick-a-team-to-root-for-when-the-dodgers-arent-playing.html" rel="alternate"></link><published>2018-04-02T17:41:00+02:00</published><updated>2018-04-02T17:41:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-02:/how-to-pick-a-team-to-root-for-when-the-dodgers-arent-playing.html</id><summary type="html">&lt;p&gt;I’ve been thinking a bit about how to decide which team to root for. Mostly I just want to stay logically consistent with the way I choose to root for a team (when the Dodgers aren't playing obviously).&lt;/p&gt;
&lt;p&gt;After much thought (and sketches on my iPad) I’ve come …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been thinking a bit about how to decide which team to root for. Mostly I just want to stay logically consistent with the way I choose to root for a team (when the Dodgers aren't playing obviously).&lt;/p&gt;
&lt;p&gt;After much thought (and sketches on my iPad) I’ve come up with this table to help me determine who to root for:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Opp1 / Opp 2     NL West                                    NL Central          NL East             AL West                                                                      AL Central                                 AL East
  &lt;strong&gt;NL West&lt;/strong&gt;      Root for team that helps the Dodgers       NL Central Team     NL East Team        NL West Team,unless it hurts the Dodgers                                     NL West Team,unless it hurts the Dodgers   NL West Team,unless it hurts the Dodgers
  &lt;strong&gt;NL Central&lt;/strong&gt;   NL Central Team                            Root for underdog   NL Central Team     NL Central Team                                                              NL Central Team                            NL Central Team
  &lt;strong&gt;NL East&lt;/strong&gt;      NL East Team                               NL Central Team     Root for underdog   NL East Team                                                                 NL East Team                               NL East Team
  &lt;strong&gt;AL West&lt;/strong&gt;      NL West Team,unless it hurts the Dodgers   NL Central Team     NL East Team        The Angels over the A's over the Mariners over the Rangers over the Astros   AL West Team                               AL West Team
  &lt;strong&gt;AL Central&lt;/strong&gt;   NL West Team,unless it hurts the Dodgers   NL Central Team     NL East Team        AL West Team                                                                 Root for underdog                          AL Central Team
  &lt;strong&gt;AL East&lt;/strong&gt;      NL West Team,unless it hurts the Dodgers   NL Central Team     NL East Team        AL West Team                                                                 AL Central Team                            Root for underdog (unless it's the Yankees)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The basic rule is root for the team that helps the Dodgers payoff changes, then National League over American League and finally West over Central over East (from a division perspective).&lt;/p&gt;
&lt;p&gt;There were a couple of cool sketches I made, on real paper and my iPad. Turns out, sometimes you really need to think about thing before you write it down and commit to it.&lt;/p&gt;
&lt;p&gt;Of course, this is all subject to change depending on the impact any game would have on the Dodgers.&lt;/p&gt;</content><category term="Sports"></category><category term="Baseball"></category><category term="Rooting"></category></entry><entry><title>ITFDB Demo</title><link href="https://www.ryancheley.com/itfdb-demo.html" rel="alternate"></link><published>2018-04-01T16:38:00+02:00</published><updated>2018-04-01T16:38:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-01:/itfdb-demo.html</id><summary type="html">&lt;p&gt;Last Wednesday if you would have asked what I had planned for Easter I would have said something like, “Going to hide some eggs for my daughter even though she knows the Easter bunny isn’t real.”&lt;/p&gt;
&lt;p&gt;Then suddenly my wife and I were planning on entertaining for 11 family …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last Wednesday if you would have asked what I had planned for Easter I would have said something like, “Going to hide some eggs for my daughter even though she knows the Easter bunny isn’t real.”&lt;/p&gt;
&lt;p&gt;Then suddenly my wife and I were planning on entertaining for 11 family members. My how things change!&lt;/p&gt;
&lt;p&gt;Since I was going to have family over, some of whom are &lt;a href="https://www.mlb.com/giants"&gt;Giants&lt;/a&gt; fans, I wanted to show them the &lt;a href="http://www.ryancheley.com/index.php/2018/02/13/itfdb/"&gt;ITFDB program I have set up with my Pi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only problem is that they would be over at 10am and leave by 2pm while the game doesn’t start until 5:37pm (Thanks &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To help demonstrate the script I wrote a &lt;em&gt;demo&lt;/em&gt; script to display a message on the Pi and play the Vin Scully mp3.&lt;/p&gt;
&lt;p&gt;The Code was simple enough:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sense_hat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#ITFDB!!! The Dodgers will be playing San Francisco at 5:37pm tonight!&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;omxplayer -b /home/pi/Documents/python_projects/itfdb/dodger_baseball.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But then the question becomes, how can I easily launch the script without &lt;a href="https://en.wiktionary.org/wiki/futz"&gt;futzing&lt;/a&gt; with my laptop?&lt;/p&gt;
&lt;p&gt;I knew that I could run a shell script for the &lt;a href="https://workflow.is"&gt;Workflow app&lt;/a&gt; on my iPhone with a single action, so I wrote a simple shell script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 ~/Documents/python_projects/itfdb/demo.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which was called &lt;code&gt;itfdb_demo.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And made it executable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod u+x itfdb_demo.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, I created a WorkFlow which has only one action &lt;code&gt;Run Script over SSH&lt;/code&gt; and added it to my home screen so that with a simple tap I could demo the results.&lt;/p&gt;
&lt;p&gt;The WorkFlow looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-254" height="2208" src="/images/uploads/2018/04/IMG_9450.png" width="1242"&gt;&lt;/p&gt;
&lt;p&gt;Nothing too fancy, but I was able to reliably and easily demonstrate what I had done. And it was pretty freaking cool!&lt;/p&gt;</content><category term="Python"></category><category term="Easter"></category><category term="Family"></category><category term="Shell Script"></category><category term="Workflow"></category></entry><entry><title>Daylight Savings Time</title><link href="https://www.ryancheley.com/daylight-savings-time.html" rel="alternate"></link><published>2018-03-26T19:02:00+02:00</published><updated>2018-03-26T19:02:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-26:/daylight-savings-time.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr Drang has posted on Daylight Savings in the past&lt;/a&gt;, but in a recent &lt;a href="http://leancrew.com/all-this/2018/03/one-table-following-another/"&gt;post&lt;/a&gt; he critiqued (rightly so) the data presentation by a journalist at the Washington Post on Daylight Savings, and that got me thinking.&lt;/p&gt;
&lt;p&gt;In the post he generated a chart showing both the total number of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr Drang has posted on Daylight Savings in the past&lt;/a&gt;, but in a recent &lt;a href="http://leancrew.com/all-this/2018/03/one-table-following-another/"&gt;post&lt;/a&gt; he critiqued (rightly so) the data presentation by a journalist at the Washington Post on Daylight Savings, and that got me thinking.&lt;/p&gt;
&lt;p&gt;In the post he generated a chart showing both the total number of daylight hours and the sunrise / sunset times in Chicago. However, initially he didn’t post the code on how he generated it. The next day, in a follow up &lt;a href="http://leancrew.com/all-this/2018/03/the-sunrise-plot/"&gt;post&lt;/a&gt;, he did and that &lt;strong&gt;really&lt;/strong&gt; got my thinking.&lt;/p&gt;
&lt;p&gt;I wonder what the chart would look like for cities up and down the west coast (say from San Diego, CA to Seattle WA)?&lt;/p&gt;
&lt;p&gt;Drang’s post had all of the code necessary to generate the graph, but for the data munging, he indicated:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If I were going to do this sort of thing on a regular basis, I’d write a script to handle this editing, but for a one-off I just did it “by hand.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Doing it by hand wasn’t going to work for me if I was going to do several cities and so I needed to write a parser for the source of the data (&lt;a href="http://aa.usno.navy.mil"&gt;The US Naval Observatory&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The entire script is on my GitHub &lt;a href="https://github.com/ryancheley/sunrise_sunset"&gt;sunrise&lt;em&gt;sunset&lt;/em&gt;&lt;/a&gt; repo. I won’t go into the nitty gritty details, but I will call out a couple of things that I discovered during the development process.&lt;/p&gt;
&lt;p&gt;Writing a parser is hard. Like &lt;em&gt;really&lt;/em&gt; hard. Each time I thought I had it, I didn’t. I was finally able to get the parser to work o cities with &lt;code&gt;01&lt;/code&gt;, &lt;code&gt;29&lt;/code&gt;,&lt;code&gt;30&lt;/code&gt;, or &lt;code&gt;31&lt;/code&gt; in their longitude / latitude combinations.&lt;/p&gt;
&lt;p&gt;I generated the same graph as Dr. Drang for the following cities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Phoenix, AZ&lt;/li&gt;
&lt;li&gt;Eugene, OR&lt;/li&gt;
&lt;li&gt;Portland&lt;/li&gt;
&lt;li&gt;Salem, OR&lt;/li&gt;
&lt;li&gt;Seaside, OR&lt;/li&gt;
&lt;li&gt;Eureka, CA&lt;/li&gt;
&lt;li&gt;Indio, CA&lt;/li&gt;
&lt;li&gt;Long Beach, CA&lt;/li&gt;
&lt;li&gt;Monterey, CA&lt;/li&gt;
&lt;li&gt;San Diego, CA&lt;/li&gt;
&lt;li&gt;San Francisco, CA&lt;/li&gt;
&lt;li&gt;San Luis Obispo, CA&lt;/li&gt;
&lt;li&gt;Ventura, CA&lt;/li&gt;
&lt;li&gt;Ferndale, WA&lt;/li&gt;
&lt;li&gt;Olympia, WA&lt;/li&gt;
&lt;li&gt;Seattle, WA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why did I pick a city in Arizona? They don’t do Daylight Savings and I wanted to have a comparison of what it’s like for them!&lt;/p&gt;
&lt;p&gt;The charts in latitude order (from south to north) are below:&lt;/p&gt;
&lt;p&gt;San Diego&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone wp-image-242 size-full" height="900" src="/images/uploads/2018/03/N32_45_San-Diego_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Phoenix&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone wp-image-497 size-full" height="900" src="/images/uploads/2018/03/N33_30_Phoenix_AZ_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Indio&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-249" height="900" src="/images/uploads/2018/03/N33_44_Indio_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Long Beach&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-250" height="900" src="/images/uploads/2018/03/N33_49_Long-Beach_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Ventura&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-238" height="900" src="/images/uploads/2018/03/N34_17_Ventura_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;San Luis Obispo&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-234" height="900" src="/images/uploads/2018/03/N35_17_San-Luis-Obispo_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Monterey&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-245" height="900" src="/images/uploads/2018/03/N36_36_Monterey_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;San Francisco&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-235" height="900" src="/images/uploads/2018/03/N37_46_San-Francisco_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Eureka&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-236" height="900" src="/images/uploads/2018/03/N40_47_Eureka_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Eugene&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-247" height="900" src="/images/uploads/2018/03/N44_03_Eugene_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Salem&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-240" height="900" src="/images/uploads/2018/03/N44_56_Salem_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Portland&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-248" height="900" src="/images/uploads/2018/03/N45_31_Portland_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Seaside&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-244" height="900" src="/images/uploads/2018/03/N45_59_Seaside_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Olympia&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-241" height="900" src="/images/uploads/2018/03/N47_02_Olympia_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Seattle&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-246" height="900" src="/images/uploads/2018/03/N47_38_Seattle_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Ferndale&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-243" height="900" src="/images/uploads/2018/03/N48_51_Ferndale_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;While these images do show the different impact of Daylight Savings, I think the images are more compelling when shown as a GIF:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-239" height="900" src="/images/uploads/2018/03/animated.gif" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;We see just how different the impacts of DST are on each city depending on their latitude.&lt;/p&gt;
&lt;p&gt;One of &lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr. Drang’s main points in support of DST&lt;/a&gt; is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If, by the way, you think the solution is to stay on DST throughout the year, I can only tell you that we tried that back in the 70s and it didn’t turn out well. Sunrise here in Chicago was after 8:00 am, which put school children out on the street at bus stops before dawn in the dead of winter. It was the same on the East Coast. Nobody liked that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think that comment says more about our school system and less about the need for DST.&lt;/p&gt;
&lt;p&gt;For this whole argument I’m way more on the side of CGP Grey who does a &lt;a href="https://www.youtube.com/watch?v=84aWtseb2-4"&gt;great job of explaining what Day Lights Time is&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think we may want to start looking at a Universal Planetary time (say UTC) and base all activities on that &lt;strong&gt;regardless&lt;/strong&gt; of where you are in the world. The only reason 5am &lt;em&gt;seems&lt;/em&gt; early (to some people) is because we’ve collectively decided that 5am (depending on the time of the year) is either &lt;strong&gt;WAY&lt;/strong&gt; before sunrise or just a bit before sunrise, but really it’s just a number.&lt;/p&gt;
&lt;p&gt;If we used UTC in California (where I’m at) 5am would we 12pm. Normally 12pm would be lunch time, but that’s only a convention that we have constructed. It could just as easily be the crack of dawn as it could be lunch time.&lt;/p&gt;
&lt;p&gt;Do I think a conversion like this will ever happen? No. I just really hope that at some point in the distant future when aliens finally come and visit us, we aren’t late (or them early) because we have such a wacky time system here.&lt;/p&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>The LA Marathon</title><link href="https://www.ryancheley.com/the-la-marathon.html" rel="alternate"></link><published>2018-03-21T16:00:00+01:00</published><updated>2018-03-21T16:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-21:/the-la-marathon.html</id><summary type="html">&lt;p&gt;How pretty it was&lt;/p&gt;
&lt;p&gt;On Sunday March 18, 2018 I ran the &lt;a href="https://www.lamarathon.com"&gt;LA Marathon&lt;/a&gt;. It was my first one and it was an amazing experience.&lt;/p&gt;
&lt;p&gt;I never thought I would be able to compete in, let alone finish, a marathon, but on Sunday I did.&lt;/p&gt;
&lt;p&gt;I started training, like &lt;strong&gt;really …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;How pretty it was&lt;/p&gt;
&lt;p&gt;On Sunday March 18, 2018 I ran the &lt;a href="https://www.lamarathon.com"&gt;LA Marathon&lt;/a&gt;. It was my first one and it was an amazing experience.&lt;/p&gt;
&lt;p&gt;I never thought I would be able to compete in, let alone finish, a marathon, but on Sunday I did.&lt;/p&gt;
&lt;p&gt;I started training, like &lt;strong&gt;really&lt;/strong&gt; training, for the marathon last August. I would wake up every morning and walk for 45 minutes. This was to get me back into a shape that would allow me to run a bit.&lt;/p&gt;
&lt;p&gt;On Sunday, September 24 I completed my first run since February 25th (basically 7 months between runs!). It was a 45 minute run that covered 3.82 miles. Over the next 6 months I slowly increased the distances I would run from that modest 3.82 run up to an 18 mile run. In total, I completed 89 training runs which covered 441.92 miles and spent 79+ hours running (see table below for details).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Month          Distance         Time         Runs
  September        14.68         3:03:14         4
   October         62.96         12:12:05        17
   November        87.70         16:52:06        20
   December        37.42         7:03:57         7
   January         90.80         17:09:12        18
   February        69.49         14:16:52        17
   March           43.06         08:29:11        6
   &lt;strong&gt;Total&lt;/strong&gt;    &lt;strong&gt; 441.92&lt;/strong&gt;   &lt;strong&gt; 79:06:37&lt;/strong&gt;   &lt;strong&gt; 89&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;With all of the training that I did, there was a bit of December where I had pulled my right calf on a training run that forced me to rest for a couple of weeks. The only good news of that was that it coincided with a family trip to Utah where I would not have been able to really run while there (the average day time highs were in the teens and the ground seemed to be constantly covered in ice).&lt;/p&gt;
&lt;p&gt;Also, with all of the training that I did, there isn’t really any way to train for race day itself. You get up early (in my case 3:50) and you take a shuttle to the start line and then wait. For hours. I got to Dodger stadium at about 5:00am but the race wasn’t set to start until 6:55am.&lt;/p&gt;
&lt;p&gt;So I waited, with my running buddies, for the run to start. It was cold (about 48 degrees) and crowded. Once the race started it took nearly 20 minutes before I was able to cross the start line (there were nearly 25,000 people that ran).&lt;/p&gt;
&lt;p&gt;None of the training that you do can really prepare you for this. Even if you do a race during your training, chances are it won’t have that many people, or have that many logistics involved with getting to and starting. That being said, having good company and a good playlist is essential.&lt;/p&gt;
&lt;p&gt;I stayed with my coach, Marirose, for the entire race. We ran for the first 15 miles without stopping (except for a potty break at mile 5) and were making pretty good time. For the most part I felt really good.&lt;/p&gt;
&lt;p&gt;But then something happened. At about 15 miles I hit a running wall. At 20 miles I hit a walking wall and didn’t want to finish. I think the only reason I finished was because I promised my daughter that I would finish a marathon and I wanted to keep my promise.&lt;/p&gt;
&lt;p&gt;At mile 23 all I wanted to do was sit down and take a break, but I kept walking anyway.&lt;/p&gt;
&lt;p&gt;Finally, at mile 26 I could see the finish line and Marirose and I ran the last 0.2 miles to the finish line. I had such a wave of emotion.&lt;/p&gt;
&lt;p&gt;I kind of wanted to cry. I wanted to cry because I had accomplished an amazing physical feat. I wanted to cry because I hurt EVERYWHERE. I wanted to cry because it was my daughter’s 12 birthday and I was running a marathon and she was home with family friends.&lt;/p&gt;
&lt;p&gt;With the wave of emotion and the feeling of having completed such an awesome experience I walked towards the people handing out the medals and got my finisher’s medal.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-224" height="2320" src="/images/uploads/2018/03/IMG_9370.jpg" width="3088"&gt;&lt;/p&gt;
&lt;p&gt;Now, not only did I have the feeling of completing the LA Marathon, I had a physical manifestation of that feat!&lt;/p&gt;
&lt;p&gt;When it was all said and done my unofficial time for the &lt;a href="https://www.trackshackresults.com/lamarathon/results/2018/mar_results.php?Link=14&amp;amp;Type=2&amp;amp;Div=F&amp;amp;Ind=4"&gt;LA Marathon was 05:56:08&lt;/a&gt;. Not too shabby for a first timer. Not too shabby for guy who 7 months earlier struggled to run 45 minutes and wasn’t sure he’d ever be able to get past 10 miles.&lt;/p&gt;
&lt;p&gt;After the race on Sunday I said I’d never do a marathon again. I had checked it off my bucket list and that was that.&lt;/p&gt;
&lt;p&gt;Now, sitting here, only a couple of days later, I’m thinking that &lt;strong&gt;never&lt;/strong&gt; is a long time and that there is a possibility that yes, I might run another marathon.&lt;/p&gt;
&lt;p&gt;But not for a while. For now, I’ll stick to my next goal of getting to a sub 25-minute 5k and running a half marathon every year. Those goals seem a little more reasonable, and a little less brutal on my body!&lt;/p&gt;</content><category term="Musings"></category><category term="Bucket List"></category><category term="LA Marathon"></category></entry><entry><title>Talk Python Build 10 Apps Review</title><link href="https://www.ryancheley.com/talk-python-build-10-apps-review.html" rel="alternate"></link><published>2018-03-20T13:27:00+01:00</published><updated>2018-03-20T13:27:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-20:/talk-python-build-10-apps-review.html</id><summary type="html">&lt;p&gt;Michael Kennedy over at Talk Python had a sale on his courses over the holidays so I took the plunge and bought them all. I have been listening to the podcast for several months now so I knew that I wouldn’t mind listening to him talk during a course …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Michael Kennedy over at Talk Python had a sale on his courses over the holidays so I took the plunge and bought them all. I have been listening to the podcast for several months now so I knew that I wouldn’t mind listening to him talk during a course (which is important!).&lt;/p&gt;
&lt;p&gt;The first course I watched was ‘Python Jumpstart by Building 10 Apps’. The apps were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;App 1: Hello (you Pythonic) world&lt;/li&gt;
&lt;li&gt;App 2: Guess that number game&lt;/li&gt;
&lt;li&gt;App 3: Birthday countdown app&lt;/li&gt;
&lt;li&gt;App 4: Journal app and file I/O&lt;/li&gt;
&lt;li&gt;App 5: Real-time weather client&lt;/li&gt;
&lt;li&gt;App 6: LOLCat Factory&lt;/li&gt;
&lt;li&gt;App 7: Wizard Battle App&lt;/li&gt;
&lt;li&gt;App 8: File Searcher App&lt;/li&gt;
&lt;li&gt;App 9: Real Estate Analysis App&lt;/li&gt;
&lt;li&gt;App 10: Movie Search App&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each app you learn a specific set of skills related to either Python or writing ‘Pyhonic’ code. I think the best part was that since it was all self paced I was able to spend time where I wanted to exploring ideas and concepts that wouldn’t have been available in traditional classrooms.&lt;/p&gt;
&lt;p&gt;Also, since I’m fully adulted it can be hard to find time to watch and interact with courses like this so being able to watch them when I wanted to was a bonus.&lt;/p&gt;
&lt;p&gt;Hello (you Pythonic) world is what you would expect from any introductory course. You write the basic ‘Hello World’ script, but with a twist. For this app you interact with it so that it asks your name and then it will output ‘Hello username my name is HAL!’ … although because I am who I am HAL wasn’t the name in the course, it was jut the name I chose for the app.&lt;/p&gt;
&lt;p&gt;My favorite app to build and use was the Wizard App (app 7). It is a text adventure influenced by dungeons and dragons and teaches about classes and inheritance an polymorphism. It ws pretty cool.&lt;/p&gt;
&lt;p&gt;The version that you are taught to make only has 4 creatures and ends pretty quickly. I enhanced the game to have it randomly create up to 250 creatures (some of them poisonous) and you level up during the game so that you can feel like a real character in an RPG.&lt;/p&gt;
&lt;p&gt;The journal application was interesting because I finally started to get my head wrapped around file I/o. I’m not sure why I’ve had such a difficult time internalizing the concept, but the course seemed to help me better understand what was going on in terms of file streaming and reading data to do a thing.&lt;/p&gt;
&lt;p&gt;My overall experience with the course was super positive. I’m really glad that I watched it and have already started to try to use the things that I’ve learned to improve code I’ve previously written.&lt;/p&gt;
&lt;p&gt;With all of the good, there is some not so good.&lt;/p&gt;
&lt;p&gt;The course uses it’s own player, which is fine, but it’s missing some key features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Time reaming&lt;/li&gt;
&lt;li&gt;Speed controls (i.e. it only plays at one speed, 1x)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition, sometimes the player would need to be reloaded which could be frustrating.&lt;/p&gt;
&lt;p&gt;Overall though it was a great course and I’m glad I was able to do it.&lt;/p&gt;
&lt;p&gt;Next course: Mastering PyCharm!&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Setting up ITFDB with a voice</title><link href="https://www.ryancheley.com/setting-up-itfdb-with-a-voice.html" rel="alternate"></link><published>2018-03-15T17:41:00+01:00</published><updated>2018-03-15T17:41:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-15:/setting-up-itfdb-with-a-voice.html</id><summary type="html">&lt;p&gt;In a &lt;a href="/itfdb.html"&gt;previous post&lt;/a&gt; I wrote about my Raspberry Pi experiment to have the SenseHat display a scrolling message 10 minutes before game time.&lt;/p&gt;
&lt;p&gt;One of the things I have wanted to do since then is have Vin Scully’s voice come from a speaker and say those five magical …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a &lt;a href="/itfdb.html"&gt;previous post&lt;/a&gt; I wrote about my Raspberry Pi experiment to have the SenseHat display a scrolling message 10 minutes before game time.&lt;/p&gt;
&lt;p&gt;One of the things I have wanted to do since then is have Vin Scully’s voice come from a speaker and say those five magical words, &lt;code&gt;It's time for Dodger Baseball!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I found a clip of &lt;a href="https://www.youtube.com/watch?v=4KwFuGtGU6c"&gt;Vin on Youtube&lt;/a&gt; saying that (and a little more). I wasn’t sure how to get the audio from that YouTube clip though.&lt;/p&gt;
&lt;p&gt;After a bit of googling^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ I found a command line tool called &lt;a href="https://rg3.github.io/youtube-dl/"&gt;youtube-dl&lt;/a&gt;. The tool allowed me to download the video as an &lt;code&gt;mp4&lt;/code&gt; with one simple command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;youtube-dl https://www.youtube.com/watch?v=4KwFuGtGU6c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once the mp4 was downloaded I needed to extract the audio from the &lt;code&gt;mp4&lt;/code&gt; file. Fortunately, &lt;code&gt;ffmpeg&lt;/code&gt; is a tool for just this type of exercise!&lt;/p&gt;
&lt;p&gt;I modified &lt;a href="https://stackoverflow.com/questions/9913032/ffmpeg-to-extract-audio-from-video"&gt;this answer from StackOverflow&lt;/a&gt; to meet my needs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ffmpeg -i dodger_baseball.mp4 -ss 00:00:10 -t 00:00:9.0 -q:a 0 -vn -acodec copy dodger_baseball.aac
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This got me an &lt;code&gt;aac&lt;/code&gt; file, but I was going to need an &lt;code&gt;mp3&lt;/code&gt; to use in my Python script.&lt;/p&gt;
&lt;p&gt;Next, I used a &lt;a href="https://askubuntu.com/questions/35457/converting-aac-to-mp3-via-command-line"&gt;modified version of this suggestion&lt;/a&gt; to create write my own command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ffmpeg -i dodger_baseball.aac -c:a libmp3lame -ac 2 -b:a 190k dodger_baseball.mp3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I could have probably combined these two steps, but … meh.&lt;/p&gt;
&lt;p&gt;OK. Now I have the famous Vin Scully saying the best five words on the planet.&lt;/p&gt;
&lt;p&gt;All that’s left to do is update the python script to play it. Using guidance from &lt;a href="https://raspberrypi.stackexchange.com/questions/7088/playing-audio-files-with-python"&gt;here&lt;/a&gt; I updated my &lt;code&gt;itfdb.py&lt;/code&gt; file from this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nv"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;:
   &lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#ITFDB!!! The Dodgers will be playing {} at {}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_opponent&lt;/span&gt;, &lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_time&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;sense&lt;/span&gt;.&lt;span class="nv"&gt;show_message&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;, &lt;span class="nv"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nv"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;:
   &lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#ITFDB!!! The Dodgers will be playing {} at {}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_opponent&lt;/span&gt;, &lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_time&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;sense&lt;/span&gt;.&lt;span class="nv"&gt;show_message&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;, &lt;span class="nv"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;omxplayer -b /home/pi/Documents/python_projects/itfdb/dodger_baseball.mp3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, what that does is play Vin’s silky smooth voice every minute for 10 minutes before game time. Music to my ears but my daughter was not a fan, and even my wife who LOVES Vin asked me to change it.&lt;/p&gt;
&lt;p&gt;One final tweak, and now it only plays at 5 minutes before game time and 1 minute before game time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nv"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;:
   &lt;span class="nv"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#ITFDB!!! The Dodgers will be playing {} at {}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_opponent&lt;/span&gt;, &lt;span class="nv"&gt;game&lt;/span&gt;.&lt;span class="nv"&gt;game_time&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;sense&lt;/span&gt;.&lt;span class="nv"&gt;show_message&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;, &lt;span class="nv"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
   &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="nv"&gt;system&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;omxplayer -b /home/pi/Documents/python_projects/itfdb/dodger_baseball.mp3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, for the rest of the season, even though Vin isn’t calling the games, I’ll get to hear his voice letting me know, “It’s Time for Dodger Baseball!!!”&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Actually, it was an embarrassing amount &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Raspberry Pi"></category><category term="python"></category><category term="Raspberry Pi"></category></entry><entry><title>HIMSS Day 3</title><link href="https://www.ryancheley.com/himss-day-3.html" rel="alternate"></link><published>2018-03-08T20:08:00+01:00</published><updated>2018-03-08T20:08:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-08:/himss-day-3.html</id><summary type="html">&lt;p&gt;One of the issues that any medium- to large-organization can encounter is how to deal with requests that place a requirement of work from one department to another. Specifically, requests for something shiny and new (especially technology).&lt;/p&gt;
&lt;p&gt;In the first educational session of the day, &lt;strong&gt;Strategic Portfolio Management: “Governing the …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the issues that any medium- to large-organization can encounter is how to deal with requests that place a requirement of work from one department to another. Specifically, requests for something shiny and new (especially technology).&lt;/p&gt;
&lt;p&gt;In the first educational session of the day, &lt;strong&gt;Strategic Portfolio Management: “Governing the Ungoverned”&lt;/strong&gt; I heard &lt;a href="https://www.linkedin.com/in/effie-economopoulos-94a23a6/" title="Effie Economopoulos"&gt;Effie Econompolous&lt;/a&gt; discuss UI Health’s transformation from an organization that had very little control over their IT projects to one that has transformed into a highly regulated Project Management Organization.&lt;/p&gt;
&lt;p&gt;My key takeaways from this talk were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;segregation of Projects (with a capital P) from Incidents and Problems&lt;/li&gt;
&lt;li&gt;The IT Roadmap was posted on the intranet for all to see&lt;/li&gt;
&lt;li&gt;Projects that are ‘IT’ related don’t just include the time of resources from IT, but also time and resources from impacted departments throughout the organization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are some amazing points. My only real question was, If you segregate Projects from Incidents and Problems, how do you ‘train’ users for Project submission. How are they do know the difference between the two (sometimes users aren’t even sure which system is broken when reporting problems in the first place). I’m not sure of the answer, but I’m sure it’s just thought more education and tighter controls over submission of requests.&lt;/p&gt;
&lt;p&gt;There was a real time poll during the session which asked, ‘What is the most significant challenge in your organization?’. Fifty percent of attendees that responded indicated inconsistent priorities as the (which is what I answered as well). Turns out, we’re not alone.&lt;/p&gt;
&lt;p&gt;A lot of the talk focused on the process that UI Health uses which had gone through 3 iterations in 2 years. It seemed like it would work for a large(ish) hospital or hospital system, but seemed too beauracratic for my organization.&lt;/p&gt;
&lt;p&gt;Overall, a very good talk and I’m glad I went. I believe I have some real actionable ideas that I can take away.&lt;/p&gt;
&lt;p&gt;My second educational session of the day &lt;strong&gt;Improving Patient Health Through Real-Time ADT Integration&lt;/strong&gt; I heard about a Managed Medical Group from Minnesota and their journey to get ADT feeds into the Care Management system.&lt;/p&gt;
&lt;p&gt;I was hoping to hear something a little more helpful, but while their situation was similar to the one we have at my organization, it was different enough that all I really heard was that, although my organization doesn’t have ADT feeds (yet) we seem to be a bit ahead of them in many other areas of managed care.&lt;/p&gt;
&lt;p&gt;The tips that they offered up (getting user buy-in, working through issues with all of the various vendors) were things I had already known would need to be done.&lt;/p&gt;
&lt;p&gt;One thing I did hear, that I hope I don’t have to go through, is a ‘Live’ testing process where we get all of the vendors, hospital IT and group IT on the phone to test the system in a ‘Live’ environment to identify deficiencies.&lt;/p&gt;
&lt;p&gt;I also hope that any user manual we have to create isn’t 70 pages like the one they have (eeek!!!).&lt;/p&gt;
&lt;p&gt;I think it will also be important to have metrics regarding efficiencies before and after any ADT implementations to make sure that we have actually done something helpful for the organization and the member.&lt;/p&gt;
&lt;p&gt;My third talk &lt;strong&gt;Closed Loop Referral Communications&lt;/strong&gt; was a bit of a disappointment. A group from North Carolina reviewed how they closed the loop on referral management.&lt;/p&gt;
&lt;p&gt;I was hoping for some key insights, but it ended up being mostly about stuff that we had already done (identifying workflow issues, automating where possible) but they still have a fundamental issue with external provider referrals (just like us). I guess I was just hoping that someone would have solved that problem, but if they have, they aren’t sharing the information.&lt;/p&gt;
&lt;p&gt;My forth session &lt;strong&gt;Breaking Down Barriers with Master Data Management and Data Governance&lt;/strong&gt; was really interesting and in the same vein as the first talk of the day.&lt;/p&gt;
&lt;p&gt;Several good points mentioned during the talk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Limited access to data leads to duplication of efforts and numerous sources of the ‘truth’&lt;/li&gt;
&lt;li&gt;If you have Tech and People then you get ‘automated chaos’ ... this is why we NEED process&lt;/li&gt;
&lt;li&gt;Difficult to turn data into actionable information&lt;/li&gt;
&lt;li&gt;Significant barriers to accessing information&lt;/li&gt;
&lt;li&gt;use reference data regarding report creation ... instead of asking the report requester questions, you need domain experts to define various categories (Diabetes, sepsis).&lt;/li&gt;
&lt;li&gt;Best Version of the Truth and Golden Record ... need to review this and see how it applies to DOHC/AZPC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The most astounding thing I heard was that each report costs between \$1k and \$5k to create ... 40% are used 5 times or less! What a source of potential waste that could perhaps be ‘solved’ by self service. We need to have metrics that show not many reports have we created, but instead how many are bing used!&lt;/p&gt;
&lt;p&gt;The lessons learned by speaker :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Governance: keep information at forefront for all front line areas&lt;/li&gt;
&lt;li&gt;Governance: not a one time effort, it’s on-going&lt;/li&gt;
&lt;li&gt;KPI Standardization: requires resilience&lt;/li&gt;
&lt;li&gt;KPI Standardization: processes that work around the system need to be identified and brought into the fold&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fifth talk of the day &lt;strong&gt;From Implementation to Optimization: Moving Beyond Operations&lt;/strong&gt;. Much of what was presented resonated with me and was stuff that we have dealt with. It was nice to know that we’re not alone! The most interesting part of the talk were the 2 polls.&lt;/p&gt;
&lt;p&gt;The first one asked, “Do you use an objective tool for prioritization of incoming work?” Most responses were for No, but would be interested (47%); next response was yes but we bypass (32%). Only about 20% have one, use it and it’s effective&lt;/p&gt;
&lt;p&gt;The second poll asked, “Do you collaborate with Clinical Stakeholders?” Most responses were yes and split 2-1 between Yes and there’s tension to Yes and we’re equal partners (which is where I think we’re at).&lt;/p&gt;
&lt;p&gt;My Last talk of the day, &lt;strong&gt;How Analytics Can Create a Culture of Continuous Improvement&lt;/strong&gt;. It was an interesting talk that focused on using Analytics to drive continuous improvement. Some of the things that really caught my attention were the ideas of implementing continuous improvement is part of the job description. Part of that was something that is stated in the New Employee Orientation, “Do the job you were hired for and make it better.”&lt;/p&gt;
&lt;p&gt;Another intersting point was that there is no one Big Bang solution for Emergency Department throughput (though the idea can be applied to any problem you’re facing). You need to look at improving each step a little bit along the way.&lt;/p&gt;
&lt;p&gt;But, in order to do this effectively, you need data, team and a process. This reminded me of the &lt;strong&gt;Breaking Down Barriers with Master Data Management and Data Governance&lt;/strong&gt; talk I was at earlier in the day!&lt;/p&gt;
&lt;p&gt;It was a great final day at HIMSS.&lt;/p&gt;
&lt;p&gt;I’ve learned a ton at this conference and writing about it (like this) has really helped to solidify some thoughts, and make me start asking questions.&lt;/p&gt;
&lt;p&gt;I’ll need to remember to do this at my next conference.&lt;/p&gt;</content><category term="Conferences"></category><category term="HIMSS18"></category></entry><entry><title>HIMSS Day 2</title><link href="https://www.ryancheley.com/himss-day-2.html" rel="alternate"></link><published>2018-03-08T06:23:00+01:00</published><updated>2018-03-08T06:23:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-08:/himss-day-2.html</id><summary type="html">&lt;p&gt;Day 2 was a bit more draining than day 1, but that was mostly because I made my way into the exhibition hall for the first time. That many people and that much cacophony always leave me a bit ... drained.&lt;/p&gt;
&lt;p&gt;On the flip side I went to several good presentations …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Day 2 was a bit more draining than day 1, but that was mostly because I made my way into the exhibition hall for the first time. That many people and that much cacophony always leave me a bit ... drained.&lt;/p&gt;
&lt;p&gt;On the flip side I went to several good presentations (a couple on Block Chain).&lt;/p&gt;
&lt;p&gt;Today’s sessions were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Empowering Data Driven Health&lt;/li&gt;
&lt;li&gt;Blockchain 4 Healthcare: Fit for Purpose&lt;/li&gt;
&lt;li&gt;The Use of Blockchain to Improve Quality Outcomes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the more interesting things I heard today was that in Health Care, tech spending has gone up (over the last 20 years) but so has overall health spending. Usually we see Tech spending go up and other spending levels off (or goes down!).&lt;/p&gt;
&lt;p&gt;Something else to consider (that I never had) was that “we need to think about doing what’s most cost effective for a person in their &lt;strong&gt;lifetime&lt;/strong&gt; not just episodically!&lt;/p&gt;
&lt;p&gt;The Blockchain sessions I went to were enlightening, but I’m still not sure I understand what it is and how it works (perhaps I’m just trying to make it more complicated than it is).&lt;/p&gt;
&lt;p&gt;That being said, the consensus was that Blockchain is not a panacea for all the ails us. It is a tool that should be used in conjunction with current systems, not a replacement of those systems.&lt;/p&gt;
&lt;p&gt;Something else of note, there isn’t a single implementation of Block Chain, there are almost 20 variations of it (although the IEEE is working on standardizing it). This leads me to believe that it is simply too new and too ‘wild’ to be implemented just yet.&lt;/p&gt;
&lt;p&gt;That being said, I think that if/when Microsoft bundles or includes BlockChain (in some way) into SQL Server, then it might be the time to look at implementing it in my organization.&lt;/p&gt;
&lt;p&gt;In my last session (another on eon BlockChain) the idea of using BlockChain to effect quality measures was discussed. The main point of the speaker was that Blockchain may allow us to give agency to patients over their health data.&lt;/p&gt;
&lt;p&gt;Another interesting point was that Blockchain may be able to allow us to dynamically observe quality measurement instead of just at point of care. This could lead to higher quality and lower costs.&lt;/p&gt;
&lt;p&gt;Overall, the BlockChain talks were good, and kind of helped point me in the right direction on what questions to start asking about it.&lt;/p&gt;
&lt;p&gt;Well, day 2 is in the books. One more day of educational sessions and exhibits!&lt;/p&gt;</content><category term="Conferences"></category><category term="HIMSS18"></category></entry><entry><title>HIMSS Day 1 Impressions</title><link href="https://www.ryancheley.com/himss-day-1-impressions.html" rel="alternate"></link><published>2018-03-07T06:51:00+01:00</published><updated>2018-03-07T06:51:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-07:/himss-day-1-impressions.html</id><summary type="html">&lt;p&gt;I was able to make it to 5 educational sessions today. And the good thing is that I learned something at each one. I think the highlight of the day for me was actually my first session titled, &lt;em&gt;Stacking Predictive Models to Reduce Readmissions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A couple of key things from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was able to make it to 5 educational sessions today. And the good thing is that I learned something at each one. I think the highlight of the day for me was actually my first session titled, &lt;em&gt;Stacking Predictive Models to Reduce Readmissions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A couple of key things from that presentation was the idea of focusing on a patient that readmits, not just from a clinical perspective, but from a human perspective. There were lots of technology that they used to help the care coordinators identify who was going to readmit, but the why of the readmission was always done via human interaction. I think that may be the single most important thing to remember.&lt;/p&gt;
&lt;p&gt;Something else that was mentioned was that the grou got their tool out quickly instead of trying to be perfect. It went through a couple of iterations in order to get a tool that was usable by all their various clinics.&lt;/p&gt;
&lt;p&gt;Some other key takeaways from today:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need to focus on Augmented Human Intelligence instead of Artificial Intelligence (from &lt;strong&gt;How Machine Learning and AI Are Disrupting the Current Healthcare System&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Don’t treat Cloud Service Providers as &lt;strong&gt;Plug and Play&lt;/strong&gt; vendors (from &lt;em&gt;HIPAA and a Cloud Computing Shared Security Model&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Creation of a committee of ‘No’ to help flesh out ideas before they are implemented (from &lt;strong&gt;Intrapreneurship and the Approach to Innovation From Within&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Think about how to operationalize insights from data, and not just explore the data (from &lt;strong&gt;Beyond BI: Building Rapid-Response Advanced Analytics Unit&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s a wrap on day 1 at HIMSS. Day 2 looks to be just as exciting (meet with some vendors, attend some more educational sessions, go to a sponsored luncheon).&lt;/p&gt;</content><category term="Conferences"></category><category term="HIMSS18"></category><category term="HIT"></category></entry><entry><title>An Introvert’s guide to large conferences ... or how I survived HIMSS 2018 (and 2017 and 2016)</title><link href="https://www.ryancheley.com/an-introverts-guide-to-large-conferences-or-how-i-survived-himss-2018-and-2017-and-2016.html" rel="alternate"></link><published>2018-03-06T06:10:00+01:00</published><updated>2018-03-06T06:10:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-06:/an-introverts-guide-to-large-conferences-or-how-i-survived-himss-2018-and-2017-and-2016.html</id><summary type="html">&lt;p&gt;The thing about HIMSS is that there are a lot of people. I mean ... a lot of people. More than 43k people will attend as speakers, exhibitors or attendees.&lt;/p&gt;
&lt;p&gt;Let that sink in for a second.&lt;/p&gt;
&lt;p&gt;No. Really. Let. That. Sink. In.&lt;/p&gt;
&lt;p&gt;That’s more than the average &lt;a href="https://www.baseball-reference.com/leagues/MLB/2017-misc.shtml" title="Average attendance"&gt;attendance of …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The thing about HIMSS is that there are a lot of people. I mean ... a lot of people. More than 43k people will attend as speakers, exhibitors or attendees.&lt;/p&gt;
&lt;p&gt;Let that sink in for a second.&lt;/p&gt;
&lt;p&gt;No. Really. Let. That. Sink. In.&lt;/p&gt;
&lt;p&gt;That’s more than the average &lt;a href="https://www.baseball-reference.com/leagues/MLB/2017-misc.shtml" title="Average attendance"&gt;attendance of a MLB game&lt;/a&gt; of 29 teams. It’s ridiculous.&lt;/p&gt;
&lt;p&gt;As an introvert you know what will drain you and what will invigorate you. For me I need to be cautious of conferencing too hard. That is, I need to be aware of myself, my surroundings and my energy levels.&lt;/p&gt;
&lt;p&gt;My tips are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Have a great playlist on your smart phone. I use an iPhone and get a subscription to Apple Music just for the conference. This allows me to have a killer set of music that helps to drown out the cacophony of people.&lt;/li&gt;
&lt;li&gt;Know when you’ve reached your limit. Even with some sweet tunes it’s easy to get drained. When you’re done you’re done. Don’t be a hero.&lt;/li&gt;
&lt;li&gt;Try to make at least one meaningful connection. I know, it’s hard. But it’s totally worth it. Other introverts are easy to spot because they’re the people on their smart phones pretending to write a blog post while listening to their sweet playlist. But if you can start a conversation, not small talk, it will be worth it. Attend a networking function that’s applicable to you and you’ll be able to find at least one or two people to connect with.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The other tips for surviving HIMSS are the same for any other conference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don’t worry about how you’re dressed ... you will &lt;strong&gt;always&lt;/strong&gt; be underdressed when compared to Hospital Administrators ... you’re in ‘IT’ and you dress like it&lt;/li&gt;
&lt;li&gt;Wear good walking shoes (see number 2 about being under dressed)&lt;/li&gt;
&lt;li&gt;Drink plenty of water&lt;/li&gt;
&lt;li&gt;Wash your hands and/or have hand sanitizer&lt;/li&gt;
&lt;li&gt;Accept free food when it’s offered&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ok. One day down. 3+ more to go!&lt;/p&gt;</content><category term="Conferenes"></category><category term="HIMSS18"></category></entry><entry><title>Fixing the Python 3 Problem on my Raspberry Pi</title><link href="https://www.ryancheley.com/fixing-the-python-3-problem-on-my-raspberry-pi.html" rel="alternate"></link><published>2018-02-13T21:00:00+01:00</published><updated>2018-02-13T21:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-13:/fixing-the-python-3-problem-on-my-raspberry-pi.html</id><summary type="html">&lt;p&gt;In my last post I indicated that I may need to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;reinstalling everything on the Pi and starting from scratch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While speaking about my issues with &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt;. Turns out that the fix was easier than I though. I checked to see what where &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt; where being …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last post I indicated that I may need to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;reinstalling everything on the Pi and starting from scratch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While speaking about my issues with &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt;. Turns out that the fix was easier than I though. I checked to see what where &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt; where being executed from by running the &lt;code&gt;which&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;which pip3&lt;/code&gt; returned &lt;code&gt;/usr/local/bin/pip3&lt;/code&gt; while &lt;code&gt;which python3&lt;/code&gt; returned &lt;code&gt;/usr/local/bin/python3&lt;/code&gt;. This is exactly what was causing my problem.&lt;/p&gt;
&lt;p&gt;To verify what version of python was running, I checked &lt;code&gt;python3 --version&lt;/code&gt; and it returned &lt;code&gt;3.6.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To fix it I just ran these commands to &lt;em&gt;unlink&lt;/em&gt; the new, broken versions:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo unlink /usr/local/bin/pip3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo unlink /usr/local/bin/python3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I found this answer on &lt;a href="https://stackoverflow.com/questions/7679674/changing-default-python-to-another-version" title="Of Course the answer was on Stack Overflow!"&gt;StackOverflow&lt;/a&gt; and tweaked it slightly for my needs.&lt;/p&gt;
&lt;p&gt;Now, when I run &lt;code&gt;python --version&lt;/code&gt; I get &lt;code&gt;3.4.2&lt;/code&gt; instead of &lt;code&gt;3.6.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately I didn’t think to run the &lt;code&gt;--version&lt;/code&gt; flag on pip before and after the change, and I’m hesitant to do it now as it’s back to working.&lt;/p&gt;</content><category term="Python"></category><category term="linux"></category><category term="python"></category><category term="unlink"></category></entry><entry><title>ITFDB!!!</title><link href="https://www.ryancheley.com/itfdb.html" rel="alternate"></link><published>2018-02-13T18:23:00+01:00</published><updated>2018-02-13T18:23:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-13:/itfdb.html</id><summary type="html">&lt;p&gt;My wife and I &lt;strong&gt;love&lt;/strong&gt; baseball season. Specifically we love the &lt;a href="https://www.mlb.com/dodgers" title="Go Dodgers!!!"&gt;Dodgers&lt;/a&gt; and we can’t wait for Spring Training to begin. In fact, today pitchers and catchers report!&lt;/p&gt;
&lt;p&gt;I’ve wanted to do something with the Raspberry Pi Sense Hat that I got (since I got it) but I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My wife and I &lt;strong&gt;love&lt;/strong&gt; baseball season. Specifically we love the &lt;a href="https://www.mlb.com/dodgers" title="Go Dodgers!!!"&gt;Dodgers&lt;/a&gt; and we can’t wait for Spring Training to begin. In fact, today pitchers and catchers report!&lt;/p&gt;
&lt;p&gt;I’ve wanted to do something with the Raspberry Pi Sense Hat that I got (since I got it) but I’ve struggled to find anything useful. And then I remembered baseball season and I thought, ‘Hey, what if I wrote something to have the Sense Hat say “#ITFDB” starting 10 minutes before a Dodgers game started?’&lt;/p&gt;
&lt;p&gt;And so I did!&lt;/p&gt;
&lt;p&gt;The script itself is relatively straight forward. It reads a csv file and checks to see if the current time in California is within 10 minutes of start time of the game. If it is, then it will send a &lt;code&gt;show_message&lt;/code&gt; command to the Sense Hat.&lt;/p&gt;
&lt;p&gt;I also wrote a cron job to run the script every minute so that I get a beautiful scrolling bit of text every minute before the Dodgers start!&lt;/p&gt;
&lt;p&gt;The code can be found on my &lt;a href="https://github.com/ryancheley/itfdb" title="Git Hub"&gt;GitHub&lt;/a&gt; page in the itfdb repository. There are 3 files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Program.py&lt;/code&gt; which does the actual running of the script&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data_types.py&lt;/code&gt; which defines a class used in &lt;code&gt;Program.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;schedule.csv&lt;/code&gt; which is the schedule of the games for 2018 as a csv file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I ran into a couple of issues along the way. First, my development environment on my Mac Book Pro was Python 3.6.4 while the Production Environment on the Raspberry Pi was 3.4. This made it so that the code about time ran locally but not on the server 🤦‍♂️.&lt;/p&gt;
&lt;p&gt;It took some playing with the code, but I was finally able to go from this (which worked on 3.6 but not on 3.4):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;now = utc_now.astimezone(pytz.timezone(&amp;quot;America/Los_Angeles&amp;quot;))
game_date_time = game_date_time.astimezone(pytz.timezone(&amp;quot;America/Los_Angeles&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this which worked on both:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;local_tz = pytz.timezone(&amp;#39;America/Los_Angeles&amp;#39;)
now = utc_now.astimezone(local_tz)
game_date_time = local_tz.localize(game_date_time)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For both, the &lt;code&gt;game_date_time&lt;/code&gt; variable setting was done in a for loop.&lt;/p&gt;
&lt;p&gt;Another issue I ran into was being able to &lt;em&gt;display&lt;/em&gt; the message for the sense hat on my Mac Book Pro. I wasn’t ever able to because of a package that is missing (RTIMU ) and is apparently only available on Raspbian (the OS on the Pi).&lt;/p&gt;
&lt;p&gt;Finally, in my attempts to get the code I wrote locally to work on the Pi I decided to install Python 3.6.0 on the Pi (while 3.4 was installed) and seemed to do nothing but break &lt;code&gt;pip&lt;/code&gt;. It looks like I’ll be learning how to uninstall Python 3.4 OR reinstalling everything on the Pi and starting from scratch. Oh well … at least it’s just a Pi and not a &lt;em&gt;real&lt;/em&gt; server.&lt;/p&gt;
&lt;p&gt;Although, I’m pretty sure I hosed my &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; server a while back and basically did the same thing so maybe it’s just what I do with servers when I’m learning.&lt;/p&gt;
&lt;p&gt;One final thing. While sitting in the living room watching &lt;em&gt;DC Legends of Tomorrow&lt;/em&gt; the Sense Hat started to display the message. Turns out, I was accounting for the minute, hour, and day but &lt;em&gt;NOT&lt;/em&gt; the month. The Dodgers play the Cubs on September 12 at 9:35 (according to the schedule.csv file anyway) and so the conditions to display were met.&lt;/p&gt;
&lt;p&gt;I added another condition to make sure it was the right month and now we’re good to go!&lt;/p&gt;
&lt;p&gt;Super pumped for this season with the Dodgers!&lt;/p&gt;</content><category term="Python"></category><category term="Baseball"></category><category term="dodgers"></category><category term="python"></category><category term="Raspberry Pi"></category></entry><entry><title>Using MP4Box to concatenate many .h264 files into one MP4 file: revisited</title><link href="https://www.ryancheley.com/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file-revisited.html" rel="alternate"></link><published>2018-02-10T15:20:00+01:00</published><updated>2018-02-10T15:20:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-10:/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file-revisited.html</id><summary type="html">&lt;p&gt;In my last &lt;a href="/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file.html"&gt;post&lt;/a&gt; I wrote out the steps that I was going to use to turn a ton of &lt;code&gt;.h264&lt;/code&gt; files into one &lt;code&gt;mp4&lt;/code&gt; file with the use of &lt;code&gt;MP4Box&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before outlining my steps I said, “The method below works but I’m sure that there is a better …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last &lt;a href="/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file.html"&gt;post&lt;/a&gt; I wrote out the steps that I was going to use to turn a ton of &lt;code&gt;.h264&lt;/code&gt; files into one &lt;code&gt;mp4&lt;/code&gt; file with the use of &lt;code&gt;MP4Box&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before outlining my steps I said, “The method below works but I’m sure that there is a better way to do it.”&lt;/p&gt;
&lt;p&gt;Shortly after posting that I decided to find that better way. Turns out, ~~it wasn’t really that much more work~~ it was much harder than originally thought.&lt;/p&gt;
&lt;p&gt;The command below is a single line and it will create a text file (com.txt) and then execute it as a bash script:&lt;/p&gt;
&lt;p&gt;~~&lt;code&gt;(echo '#!/bin/sh'; for i in *.h264; do if [ "$i" -eq 1 ]; then echo -n " -add $i"; else echo -n " -cat $i"; fi; done; echo -n " hummingbird.mp4") &amp;gt; /Desktop/com.txt | chmod +x /Desktop/com.txt | ~/Desktop/com.txt&lt;/code&gt;~~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/bin/sh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;MP4Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h264&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;${!&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;@&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;$index&amp;quot; -eq 1 &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; -add ${array[index]}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; -cat ${array[index]}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; hummingbird.mp4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;chmod&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next you execute the script with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./com.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK, but what is it doing? The parentheses surround a set of echo commands that output to com.txt. I’m using a for loop with an if statement. The reason I can’t do a straight for loop is because the first &lt;code&gt;h264&lt;/code&gt; file used in &lt;code&gt;MP4Box&lt;/code&gt; needs to have the &lt;code&gt;-add&lt;/code&gt; flag while all of the others need the &lt;code&gt;-cat&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;Once the file is output to the &lt;code&gt;com.txt&lt;/code&gt; file (on the Desktop) I pipe it to the &lt;code&gt;chmod +x&lt;/code&gt; command to change it’s mode to make it executable.&lt;/p&gt;
&lt;p&gt;Finally, I pipe that to a command to run the file &lt;code&gt;~/Desktop/com.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I was pretty stoked when I figured it out and was able to get it to run.&lt;/p&gt;
&lt;p&gt;The next step will be to use it for the hundreds of h264 files that will be output from my hummingbird camera that I just installed today.&lt;/p&gt;
&lt;p&gt;I’ll have a post on that in the next couple of days.&lt;/p&gt;</content><category term="Raspberry Pi"></category><category term="Bash"></category><category term="python"></category><category term="Shell Script"></category></entry><entry><title>Using MP4Box to concatenate many .h264 files into one MP4 file</title><link href="https://www.ryancheley.com/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file.html" rel="alternate"></link><published>2018-02-08T05:25:00+01:00</published><updated>2018-02-08T05:25:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-08:/using-mp4box-to-concatenate-many-h264-files-into-one-mp4-file.html</id><summary type="html">&lt;p&gt;The general form of the concatenate command for &lt;a href="https://gpac.wp.imt.fr/mp4box/" title="MP4Box"&gt;MP4Box&lt;/a&gt; is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MP4Box -add &amp;lt;filename&amp;gt;.ext -cat &amp;lt;filename&amp;gt;.ext output.ext&lt;/code&gt;^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;When you have more than a couple of output files, you’re going to want to automate that &lt;code&gt;-cat&lt;/code&gt; part as much as possible because let’s face it, writing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The general form of the concatenate command for &lt;a href="https://gpac.wp.imt.fr/mp4box/" title="MP4Box"&gt;MP4Box&lt;/a&gt; is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MP4Box -add &amp;lt;filename&amp;gt;.ext -cat &amp;lt;filename&amp;gt;.ext output.ext&lt;/code&gt;^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;When you have more than a couple of output files, you’re going to want to automate that &lt;code&gt;-cat&lt;/code&gt; part as much as possible because let’s face it, writing out that statement even more than a couple of times will get really old really fast.&lt;/p&gt;
&lt;p&gt;The method below &lt;em&gt;works&lt;/em&gt; but I’m sure that there is a better way to do it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;echo out the command you want to run. In this case:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;(echo -n "MP4Box "; for i in *.h264; do echo -n " -cat $i"; done; echo -n " hummingbird.mp4") &amp;gt;&amp;gt; com.txt&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit the file &lt;code&gt;com.txt&lt;/code&gt; created in (1) so that you can change the first &lt;code&gt;-cat&lt;/code&gt; to &lt;code&gt;-add&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;vim com.txt&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;While still in &lt;code&gt;vim&lt;/code&gt; editing the &lt;code&gt;com.txt&lt;/code&gt; file add the &lt;code&gt;#!/bin/sh&lt;/code&gt; to the first line. When finished, exit vim^&lt;a class="footnote" href="#fn2" id="ffn2"&gt;2&lt;/a&gt;^&lt;/li&gt;
&lt;li&gt;Change the mode of the file so it can run&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;chmod +x com.txt&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run the file:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;./com.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Why am I doing all of this? I have a Raspberry Pi with a Camera attachment and a motion sensor. I’d like to watch the hummingbirds that come to my hummingbird feeder with it for a day or two and get some sweet video. We’ll see how it goes.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[The &lt;code&gt;-add&lt;/code&gt; will add the \&amp;lt;filename&gt; to the output file while the &lt;code&gt;-cat&lt;/code&gt; will add any other files to the output file (all while not overwriting the output file so that the files all get streamed together). &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;li&gt;[I’m sure there’s an xkcd comic about this, but I just can’t find it! &lt;a href="#ffn2"&gt;↩&lt;/a&gt;]{#fn2}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Raspberry Pi"></category><category term="automation"></category><category term="Bash"></category><category term="python"></category><category term="Shell Script"></category></entry><entry><title>The Sports Center Effect</title><link href="https://www.ryancheley.com/the-sports-center-effect.html" rel="alternate"></link><published>2018-02-04T18:29:00+01:00</published><updated>2018-02-04T18:29:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-04:/the-sports-center-effect.html</id><summary type="html">&lt;p&gt;This last weekend was the divisional round of the NFL playoffs. There were 3 really good games and the game that the Patriot played in. This is unfortunate because I only had the Patriots game on the calendar for the weekend so that meant other things could get scheduled whenever …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This last weekend was the divisional round of the NFL playoffs. There were 3 really good games and the game that the Patriot played in. This is unfortunate because I only had the Patriots game on the calendar for the weekend so that meant other things could get scheduled whenever and I would end up missing many, if not all, of the other games.&lt;/p&gt;
&lt;p&gt;Sunday had 2 amazing games. The Steelers lost to the Jaguars in an upset and I got to see the last drive that put the Steelers down by a Field Goal as time expired. It was simply amazing to see how hard they played even though they must have known that they weren’t going to win.&lt;/p&gt;
&lt;p&gt;When I got home from being out the New Orleans at Minnesota game was at half time with Minnesota up 17-0. It looked like it was going to be a route and I was glad that I wasn’t really watching it.&lt;/p&gt;
&lt;p&gt;I started to do the chores that needed to be done (laundry, straightening up, getting ready for the week) and had the game on in the background.&lt;/p&gt;
&lt;p&gt;And then the improbable started to happen. Drew Brees played an amazing half of football and all of a sudden it’s 21-20 New Orleans. After a couple of field goals are exchanged it’s 24-23 New Orleans with Minnesota in possession of the ball.&lt;/p&gt;
&lt;p&gt;Case Keenum had made a couple of errors earlier in the game (one interception lead to a touch down and really helped the Saints get back in the game). It looked like he was on track to do something similarly ill-advised.&lt;/p&gt;
&lt;p&gt;Then, with 10 seconds left the bar is snapped and he passes the ball to Stefon Diggs who catches the ball. And just as he catches the ball Marcus Williams, a defensive back for New Orleans is cued up to make an ordinary tackle in an extraordinary situation.&lt;/p&gt;
&lt;p&gt;I was only on my high school football team for 2 years, but one thing the coaches were always on us about was wrapping up the ball carrier when we were going to tackle. “Wrap him up” they’d scream at us. Over and over again.&lt;/p&gt;
&lt;p&gt;It became something we did just so they’d stop yelling at us (for that anyway).&lt;/p&gt;
&lt;p&gt;So Marcus Williams is getting ready to tackle Stefon Diggs and all he has to do is “Wrap him up!” But something inside of Willliams’ head is saying, “Sports Center highlight” and instead of going for the boring, but effective arm wrapping tackle, he tried to hit Diggs with his shoulder to hopefully get the ball to be knocked loose.&lt;/p&gt;
&lt;p&gt;Instead, he whiffs by Diggs who spins, plants his hand on the ground to stay up and proceeds to run 60 yards for the game winning, walk-off, touchdown.&lt;/p&gt;
&lt;p&gt;I truly believe that Williams was thinking about how cool it would be to get on Sport Center when he was deciding how to tackle Diggs, and that cost the Saints the game.&lt;/p&gt;
&lt;p&gt;Dear Sports center, stop making our sports be bad and our athletes make dumb decisions. Can you just go away now. Ok, thanks, bye&lt;/p&gt;</content><category term="Sports"></category><category term="sportsball"></category></entry><entry><title>My Map Art Project</title><link href="https://www.ryancheley.com/my-map-art-project.html" rel="alternate"></link><published>2018-01-12T05:44:00+01:00</published><updated>2018-01-12T05:44:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-01-12:/my-map-art-project.html</id><summary type="html">&lt;p&gt;I’d discovered a python package called &lt;code&gt;osmnx&lt;/code&gt; which will take GIS data and allow you to draw maps using python. Pretty cool, but I wasn’t sure what I was going to do with it.&lt;/p&gt;
&lt;p&gt;After a bit of playing around with it I finally decided that I could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’d discovered a python package called &lt;code&gt;osmnx&lt;/code&gt; which will take GIS data and allow you to draw maps using python. Pretty cool, but I wasn’t sure what I was going to do with it.&lt;/p&gt;
&lt;p&gt;After a bit of playing around with it I finally decided that I could make some pretty cool &lt;a href="https://www.fractureme.com" title="Fracture"&gt;Fractures&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ve got lots of Fracture images in my house and I even turned my diplomas into Fractures to hang up on the wall at my office, but I hadn’t tried to make anything like this before.&lt;/p&gt;
&lt;p&gt;I needed to figure out what locations I was going to do. I decided that I wanted to do 9 of them so that I could create a 3 x 3 grid of these maps.&lt;/p&gt;
&lt;p&gt;I selected 9 cities that were important to me and my family for various reasons.&lt;/p&gt;
&lt;p&gt;Next writing the code. The script is 54 lines of code and doesn’t really adhere to PEP8 but that just gives me a chance to do some reformatting / refactoring later on.&lt;/p&gt;
&lt;p&gt;In order to get the desired output I needed several libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;osmnx (as I’d mentioned before)
matplotlib.pyplot
numpy
PIL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you’ve never used PIL before it’s the ‘Python Image Library’ and according to it’s &lt;a href="http://www.pythonware.com/products/pil/" title="Python Image Library Home Page"&gt;home page&lt;/a&gt; it&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;adds image processing capabilities to your Python interpreter. This library supports many file formats, and provides powerful image processing and graphics capabilities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK, let’s import some libraries!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;osmnx&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ox&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;geopandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gpd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we establish the configurations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ox.config(log_file=True, log_console=False, use_cache=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;ox.config&lt;/code&gt; allows you to specify several options. In this case, I’m:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Specifying that the logs be saved to a file in the log directory&lt;/li&gt;
&lt;li&gt;Supress the output of the log file to the console (this is helpful to have set to &lt;code&gt;True&lt;/code&gt; when you’re first running the script to see what, if any, errors you have.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;use_chache=True&lt;/code&gt; will use a local cache to save/retrieve http responses instead of calling API repetitively for the same request URL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This option will help performance if you have the run the script more than once.&lt;/p&gt;
&lt;p&gt;OSMX has many different options to generate maps. I played around with the options and found that the walking network within 750 meters of my address gave me the most interesting lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;AddressDistance = 750
AddressDistanceType = &amp;#39;network&amp;#39;
AddressNetworkType = &amp;#39;walk&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now comes some of the most important decisions (and code!). Since I’ll be making this into a printed image I want to make sure that the image and resulting file will be of a high enough quality to render good results. I also want to start with a white background (although a black background might have been kind of cool). I also want to have a high DPI. Taking these needs into consideration I set my plot variables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PlotBackgroundColor = &amp;#39;#ffffff&amp;#39;
PlotNodeSize = 0
PlotFigureHeight = 40
PlotFigureWidth = 40
PlotFileType = &amp;#39;png&amp;#39;
PlotDPI = 300
PlotEdgeLineWidth = 10.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I played with the &lt;code&gt;PlotEdgeLineWidth&lt;/code&gt; a bit until I got a result that I liked. It controls how thick the route lines are and is influenced by the &lt;code&gt;PlotDPI&lt;/code&gt;. For the look I was going for 10.0 worked out well for me. I’m not sure if that means a 30:1 ratio for &lt;code&gt;PlotDPI&lt;/code&gt; to &lt;code&gt;PlotEdgeLineWidth&lt;/code&gt; would be universal but if you like what you see then it’s a good place to start.&lt;/p&gt;
&lt;p&gt;One final piece was deciding on the landmarks that I was going to use. I picked nine places that my family and I had been to together and used addresses that were either of the places that we stayed at (usually hotels) OR major landmarks in the areas that we stayed. Nothing special here, just a text file with one location per line set up as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Address, City, State&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1234 Main Street, Anytown, CA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we just read that file into memory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;landmarks = open(&amp;#39;/Users/Ryan/Dropbox/Ryan/Python/landmarks.txt&amp;#39;, &amp;#39;r&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we set up some scaffolding so we can loop through the data effectively&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;landmarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;.&lt;span class="nv"&gt;readlines&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;landmarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; [&lt;span class="nv"&gt;item&lt;/span&gt;.&lt;span class="nv"&gt;rstrip&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;]

&lt;span class="nv"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The loop below is doing a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Splits the landmarks array into base elements by breaking it apart at the commas (I can do this because of the way that the addresses were entered. Changes may be needed to account for my complex addresses (i.e. those with multiple address lines (suite numbers, etc) or if local addresses aren’t constructed in the same way that US addresses are)&lt;/li&gt;
&lt;li&gt;Appends the second and third elements of the &lt;code&gt;parts&lt;/code&gt; array and replaces the space between them with an underscore to convert &lt;code&gt;Anytown, CA&lt;/code&gt; to &lt;code&gt;Anytown_CA&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;element&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;:
    &lt;span class="nv"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;element&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;city&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;parts&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;parts&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This next line isn’t strictly necessary as it could just live in the loop, but it was helpful for me when writing to see what was going on. We want to know how many items are in the &lt;code&gt;landmarks&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rows = len(landmarks)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now to loop through it. A couple of things of note:&lt;/p&gt;
&lt;p&gt;The package includes several &lt;code&gt;graph_from_...&lt;/code&gt; functions. They take as input some type, like address, i.e. &lt;code&gt;graph_from_address&lt;/code&gt; (which is what I’m using) and have several keyword arguments.&lt;/p&gt;
&lt;p&gt;In the code below I’m using the ith landmarks item and setting the &lt;code&gt;distance&lt;/code&gt;, &lt;code&gt;distance_type&lt;/code&gt;, &lt;code&gt;network_type&lt;/code&gt; and specifying an option to make the map simple by setting &lt;code&gt;simplify=‘true’&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To add some visual interest to the map I’m using this line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;ec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; [&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#cc0000&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;length&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#3366cc&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;u&lt;/span&gt;, &lt;span class="nv"&gt;v&lt;/span&gt;, &lt;span class="nv"&gt;key&lt;/span&gt;, &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt;.&lt;span class="nv"&gt;edges&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;, &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the length of the part of the map is longer than 100m then the color is displayed as &lt;code&gt;#cc0000&lt;/code&gt; (red) otherwise it will be &lt;code&gt;#3366cc&lt;/code&gt; (blue)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;plot_graph&lt;/code&gt; is what does the heavy lifting to generate the image. It takes as input the output from the &lt;code&gt;graph_from_address&lt;/code&gt; and &lt;code&gt;ec&lt;/code&gt; to identify what and how the map will look.&lt;/p&gt;
&lt;p&gt;Next we use the &lt;code&gt;PIL&lt;/code&gt; library to add text to the image. It takes into memory the image file and saves out to a directory called &lt;code&gt;/images/&lt;/code&gt;. My favorite part of this library is that I can choose what font I want to use (whether it’s part of the system fonts or a custom user font) and the size of the font. For my project I used San Francisco at 512.&lt;/p&gt;
&lt;p&gt;Finally, there is an exception for the code that adds text. The reason for this is that when I was playing with adding text to the image I found that for 8 of 9 maps having the text in the upper left hand corner worker really well. It was just that last one (San Luis Obispo, CA) that didn’t.&lt;/p&gt;
&lt;p&gt;So, instead of trying to find a different landmark, I decided to take a bit of artistic license and put the San Luis Obispo text in the upper right hard corner.&lt;/p&gt;
&lt;p&gt;Once the script is all set simply typing &lt;code&gt;python MapProject.py&lt;/code&gt; in my terminal window from the directory where the file is saved generated the files.&lt;/p&gt;
&lt;p&gt;All I had to do what wait and the images were saved to my &lt;code&gt;/images/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Next, upload to Fracture and order the glass images!&lt;/p&gt;
&lt;p&gt;I received the images and was super excited. However, upon opening the box and looking at them I noticed something wasn’t quite right&lt;/p&gt;
&lt;p&gt;[caption id="attachment_188" align="alignnone" width="2376"]![Napa with the text slightly off the image]images/uploads/2018/01/Image-12-16-17-6-55-AM.jpeg){.alignnone .size-full .wp-image-188 width="2376" height="2327"} Napa with the text slightly off the image[/caption]&lt;/p&gt;
&lt;p&gt;As you can see, the name place is cut off on the left. Bummer.&lt;/p&gt;
&lt;p&gt;No reason to fret though! Fracture has a 100% satisfaction guarantee. So I emailed support and explained the situation.&lt;/p&gt;
&lt;p&gt;Within a couple of days I had my bright and shiny fractures to hang on my wall&lt;/p&gt;
&lt;p&gt;[caption id="attachment_187" align="alignnone" width="2138"]![Napa with the text properly displaying]images/uploads/2018/01/IMG_9079.jpg){.alignnone .size-full .wp-image-187 width="2138" height="2138"} Napa with the text properly displaying[/caption]&lt;/p&gt;
&lt;p&gt;So that my office wall is no longer blank and boring:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-189" height="768" src="/images/uploads/2018/01/UNADJUSTEDNONRAW_thumb_380b.jpg" width="1024"&gt;&lt;/p&gt;
&lt;p&gt;but interesting and fun to look at&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-186" height="3024" src="/images/uploads/2018/01/IMG_9156.jpg" width="4032"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="art"></category><category term="python"></category></entry><entry><title>My Outlook Review Process</title><link href="https://www.ryancheley.com/my-outlook-review-process.html" rel="alternate"></link><published>2017-12-30T20:00:00+01:00</published><updated>2017-12-30T20:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-30:/my-outlook-review-process.html</id><summary type="html">&lt;p&gt;In a &lt;a href="/rules-and-actions-in-outlook.html"&gt;previous post&lt;/a&gt; I spoke about my use of Rules and Custom Actions in Outlook. In this post I’ll talk about my Review process which I adapted from David Allen’s &lt;em&gt;Getting Things Done&lt;/em&gt; methodology.&lt;/p&gt;
&lt;p&gt;There are several decisions that need to be made when reviewing email:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Is …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;In a &lt;a href="/rules-and-actions-in-outlook.html"&gt;previous post&lt;/a&gt; I spoke about my use of Rules and Custom Actions in Outlook. In this post I’ll talk about my Review process which I adapted from David Allen’s &lt;em&gt;Getting Things Done&lt;/em&gt; methodology.&lt;/p&gt;
&lt;p&gt;There are several decisions that need to be made when reviewing email:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Is this for me?&lt;/li&gt;
&lt;li&gt;Is it something that I need to do right now?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the email is not for me then I need to decide who it is for. Once I have made that decision I &lt;strong&gt;Delegate&lt;/strong&gt; the responsibility of the email.&lt;/p&gt;
&lt;p&gt;I will forward the email (or write up a new email with the salient details) and send it to the person that I’m delegating the responsibility to. But here’s the trick … I have a rule that if I put my email address in the BCC line it will be moved to a folder called &lt;code&gt;@waiting&lt;/code&gt; and flagged as a follow up item.&lt;/p&gt;
&lt;p&gt;I then review the &lt;code&gt;@waiting&lt;/code&gt; folder once a day or every other day and will send a follow up email if needed OR delete the email once the person has responded to me.&lt;/p&gt;
&lt;p&gt;The next decision I need to make is “Do I need to do this &lt;em&gt;right now&lt;/em&gt;?” If I don’t, then I’ll &lt;strong&gt;Defer&lt;/strong&gt; a response or action to the needed time. Unfortunately Outlook doesn’t have a good defer mechanism like my beloved &lt;a href="https://www.omnigroup.com/omnifocus/" title="OmniFocus ... The GTD App for iOS and MacOS"&gt;OmniFocus&lt;/a&gt;, so I will convert the email into a meeting and remove the attendees other than me to a data and time when I need to work on the email.&lt;/p&gt;
&lt;p&gt;Finally, the email may require me to &lt;strong&gt;Do&lt;/strong&gt; something right now. In that case, I focus fully on the requirements of the email and do it.&lt;/p&gt;
&lt;p&gt;This may involve scheduling a meeting, or supplying times when I’m available for a meeting, or it might be answering a question asked of me. I will do any necessary research OR as I start working on the email that requires a decision I’ll discover that I don’t have enough information to actually make that decision.&lt;/p&gt;
&lt;p&gt;When that happens I’ll send an email (either forwarding or creating a new one) to the person I think that can supply the information and, you guessed it, I’ll BCC myself so that the email is put into my &lt;code&gt;@waiting&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Using the above methodology I’m able to manage the massive amounts of email that I receive. Hopefully this helps someone out there who is drowning in email.&lt;/p&gt;</content><category term="Productivity"></category></entry><entry><title>Rules and Actions in Outlook or How I stayed sane after coming back to 1000+ emails</title><link href="https://www.ryancheley.com/rules-and-actions-in-outlook.html" rel="alternate"></link><published>2017-12-28T21:00:00+01:00</published><updated>2017-12-28T21:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-28:/rules-and-actions-in-outlook.html</id><summary type="html">&lt;p&gt;One of the best things about the holidays is getting to take some time off and visit family and friends.&lt;/p&gt;
&lt;p&gt;One of the worst things about the holidays is coming back to work and an inbox with more than 1200 emails. Granted, I was out of the office for 4 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the best things about the holidays is getting to take some time off and visit family and friends.&lt;/p&gt;
&lt;p&gt;One of the worst things about the holidays is coming back to work and an inbox with more than 1200 emails. Granted, I was out of the office for 4 business days so it’s only about 300 emails per day, but still … it’s a lot^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^.&lt;/p&gt;
&lt;p&gt;I have two strategies for dealing with the many emails I get:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://support.office.com/en-us/article/Manage-email-messages-by-using-rules-c24f5dea-9465-4df4-ad17-a50704d66c59" title="Rulz!"&gt;Outlook Rules&lt;/a&gt; (Rules)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.office.com/en-us/article/Create-custom-actions-rules-in-Outlook-for-Windows-c6a15a50-5b4f-43ea-9bcf-be8616db8a98" title="Custom Actions"&gt;Outlook Custom Actions&lt;/a&gt; (Actions)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Rules&lt;/h2&gt;
&lt;p&gt;Rules allow you to apply actions automatically as they are received in your inbox. This is useful if you work (or manage) one or more tech support desks and you need to segregate the email received into folders to review later.&lt;/p&gt;
&lt;p&gt;This is exactly the kind of thing that I do. I currently have more than 50 rules set up in Outlook and they help process about 50%-60% of the emails that I receive.&lt;/p&gt;
&lt;p&gt;The other 40% - 50% can’t be ‘Rule’ drive.&lt;/p&gt;
&lt;p&gt;For these types of emails I use Actions.&lt;/p&gt;
&lt;h2&gt;Actions&lt;/h2&gt;
&lt;p&gt;Actions are amazing because they can have keyboard shortcuts assigned to them.^&lt;a class="footnote" href="#fn2" id="ffn2"&gt;2&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;I have 3 Actions that I use consistently to help manage my email that isn’t automatically routed with Rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Archive (Ctrl + Shift + 9)&lt;/li&gt;
&lt;li&gt;Review (Ctrl + Shift + 5)&lt;/li&gt;
&lt;li&gt;Review with Boss (Ctrl + Shift + 1)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I archive all internal emails I receive, and probably about 90% of the external emails I receive so that I can refer back to them when needed. I have to archive them into a &lt;code&gt;.pst&lt;/code&gt; file because my IS department only allocates a finite (some might say &lt;em&gt;small&lt;/em&gt; finite) amount of space.&lt;/p&gt;
&lt;p&gt;Using the Keyboard Shortcut &lt;code&gt;Ctrl + Shift + 9&lt;/code&gt; will automatically move an email to the archive. This is really helpful for emails that were sent to me for informational purposes OR that have a long email chain and a resolution was reached without me.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Review&lt;/code&gt; Action will mark the email with a Flag and move it to a &lt;code&gt;@Review&lt;/code&gt; folder. I do this with emails that will take more than 2 minutes to process. This works well for longer emails, or emails that need me to make a decision and I am not ready to make that decision yet.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Review with Boss&lt;/code&gt; action is the one action that is used the least of these three. It is useful when I receive an email and need guidance from my boss. If I just need to send her an email about it then I’ll usually mark it as &lt;code&gt;Review&lt;/code&gt; and follow up with it during my review process or if it will take less than 2 minutes to write up an email I’ll take care of it right then and there.&lt;/p&gt;
&lt;p&gt;Usually emails to her take loner than 2 minutes to compose because they need to be short^&lt;a class="footnote" href="#fn3" id="ffn3"&gt;3&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;In my next post I’ll go over my review process. This is where I go through the 25 - 100 emails that have been marked as &lt;code&gt;Review&lt;/code&gt; and answer the emails that need attention.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[I used to get even more. When my company upgraded to Exchange Server 2016 we got the ability for Out of Office Notifications to appear in a message BEFORE a person sent it. This has cut down on the amount of email I receive when I’m out of the office by about 30% - 50% &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;li&gt;[If you’re not using keyboard shortcuts, you’re really missing out on some power user productivity hacks that will help you out. &lt;a href="#ffn2"&gt;↩&lt;/a&gt;]{#fn2}&lt;/li&gt;
&lt;li&gt;[This idea is cribbed from Blaise Pascal’s statement, “Je n’ai fait celle-ci plus longue que parce que je n’ai pas eu le loisir de la faire plus courte” … in English, “I have made this longer than usual because I have not had time to make it shorter.” Hat tip to &lt;a href="https://quoteinvestigator.com/2012/04/28/shorter-letter/"&gt;Quote Investigator&lt;/a&gt; &lt;a href="#ffn3"&gt;↩&lt;/a&gt;]{#fn3}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Productivity"></category><category term="Outlook"></category><category term="productivity"></category></entry><entry><title>My Mac session with Apple</title><link href="https://www.ryancheley.com/my-mac-session-with-apple.html" rel="alternate"></link><published>2017-12-27T21:00:00+01:00</published><updated>2017-12-27T21:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-27:/my-mac-session-with-apple.html</id><summary type="html">&lt;p&gt;For Christmas I bought myself a 2017 13-inch MacBook Pro with Touch Bar. Several bonuses were associated with the purchase:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A \$150 Apple Gift Card because I bought the MacBook Pro on Black Friday and Apple had a special going (w00t!)&lt;/li&gt;
&lt;li&gt;The Credit Card I use to make &lt;strong&gt;ALL&lt;/strong&gt; of …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;For Christmas I bought myself a 2017 13-inch MacBook Pro with Touch Bar. Several bonuses were associated with the purchase:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A \$150 Apple Gift Card because I bought the MacBook Pro on Black Friday and Apple had a special going (w00t!)&lt;/li&gt;
&lt;li&gt;The Credit Card I use to make &lt;strong&gt;ALL&lt;/strong&gt; of my purchases at Apple has a 3% cash back (in the form of iTunes cards)&lt;/li&gt;
&lt;li&gt;A free 30 minute online / phone session with an ‘Apple Specialist’&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now I didn’t know about item number 3 when I made the purchase, but was greeted with an email informing me of my great luck.&lt;/p&gt;
&lt;p&gt;This is my fifth Mac^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ and I don’t remember ever getting this kind of service before. So I figured, what the hell and decided to snooze the email until the day after Christmas to remind myself to sign up for the session.&lt;/p&gt;
&lt;p&gt;When I entered the session I was asked to optionally provide some information about myself. I indicated that I had been using a Mac for several years and considered myself an intermediate user.&lt;/p&gt;
&lt;p&gt;My Apple ‘Specialist’ was &lt;em&gt;&lt;a href="http://gameofthrones.wikia.com/wiki/Jaime_Lannister" title="No ... not that one"&gt;Jaime&lt;/a&gt;&lt;/em&gt;. She confirmed the optional notes that I entered and we were off to the races.&lt;/p&gt;
&lt;p&gt;Now a lot of what she told me about Safari (blocking creepy tracking behavior, ability to mute sound from auto play videos, default site to display in reader view) I knew from the &lt;a href="https://developer.apple.com/videos/play/wwdc2017/101/" title="WWDC Keynote"&gt;WWDC Keynote&lt;/a&gt; that I watched back in June, but I listened just in case I had missed something from that session (or the &lt;a href="https://relay.fm" title="All the Great Shows!"&gt;10s / 100s of hours of podcasts&lt;/a&gt; I listened to about the Keynote).&lt;/p&gt;
&lt;p&gt;One thing that I had heard about was the ability to &lt;em&gt;pin&lt;/em&gt; tabs in Safari. I never really knew what that meant and figured it wasn’t anything that I needed.&lt;/p&gt;
&lt;p&gt;I was wrong. Holy crap is &lt;a href="https://www.youtube.com/watch?v=k-ssw5MKAno" title="Pinning Tabs!"&gt;pinning tabs in Safari&lt;/a&gt; a useful feature! I can keep all of my most used sites pinned and get to them really quickly and they get auto refreshed! Sweet!&lt;/p&gt;
&lt;p&gt;The other super useful thing I found out about was the &lt;a href="https://support.apple.com/en-us/HT204948" title="Split your screen ... increase your productivity"&gt;Split Screen&lt;/a&gt; feature that allows you to split apps on your screen (in a very iOS-y way!).&lt;/p&gt;
&lt;p&gt;Finally, Jaime reviewed how to customize the touch bar! This one was super useful as I think there are 2 discoverability issues with it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The option to &lt;code&gt;Customize Touch Bar&lt;/code&gt; is hidden in the &lt;code&gt;View&lt;/code&gt; menu which isn’t somewhere I’d look for it&lt;/li&gt;
&lt;li&gt;To &lt;a href="https://support.apple.com/en-us/HT207055" title="Customization!"&gt;Customize the Touch Bar&lt;/a&gt; you drag down from the Main Screen onto the Touch Bar.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After the call I received a nice follow up email from Apple / Jaime&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that you're more familiar with your new Mac, here are some additional resources that can help you go further.&lt;/p&gt;
&lt;p&gt;Apple Support&lt;br&gt;
Find answers to common questions, watch video tutorials, download user guides, and share solutions with the Apple community. &lt;a href="https://support.apple.com/mac"&gt;Visit Support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today at Apple&lt;br&gt;
Discover inspiring programs happening near you. &lt;a href="https://www.apple.com/today/"&gt;Visit Today at Apple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Accessories&lt;br&gt;
From the Apple accessories page, you can learn about all kinds of new and innovative products that work with iPhone, iPad, Mac and more. &lt;a href="https://www.apple.com/shop/accessories/all-accessories"&gt;Visit Accessories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How to use the Touch Bar on your MacBook Pro - &lt;a href="https://support.apple.com/en-us/HT207055"&gt;https://support.apple.com/en- us/HT207055&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Use Mission Control on your Mac - &lt;a href="https://support.apple.com/en-us/HT204100"&gt;https://support.apple.com/en- us/HT204100&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Use two Mac apps side by side in Split View - &lt;a href="https://support.apple.com/en-us/HT204948"&gt;https://support.apple.com/en- us/HT204948&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Websites preferences - &lt;a href="https://support.apple.com/guide/safari/websites-preferences-ibrwe2159f50"&gt;https://support.apple.com/ guide/safari/websites- preferences-ibrwe2159f50&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’m glad that I had the Mac session and I will encourage anyone that buys a Mac in the future to schedule one.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[They are in order of purchase: 2012 15-inch MacBook Pro, 2014 27-inch 5K iMac, 2015 MacBook, 2016 13-inch 2 Thunderbolt MacBook Pro; 2017 13-inch MacBook Pro with Touch Bar &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="macOS"></category><category term="MacBook Pro"></category><category term="macOS"></category><category term="TouchBar"></category></entry><entry><title>Why Ulysses is Awesome</title><link href="https://www.ryancheley.com/why-ulysses-is-awesome.html" rel="alternate"></link><published>2017-12-15T02:43:00+01:00</published><updated>2017-12-15T02:43:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-15:/why-ulysses-is-awesome.html</id><summary type="html">&lt;p&gt;I started writing my last &lt;a href="http://www.ryancheley.com/"&gt;post&lt;/a&gt; on my iMac but because Apple Photos is a bit ... finicky with the iCloud syncing a screenshot I had taken on my iPad wasn’t there.&lt;/p&gt;
&lt;p&gt;No fear, just keep writing in Ulysses, then move from the iMac to the iPad and drop the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started writing my last &lt;a href="http://www.ryancheley.com/"&gt;post&lt;/a&gt; on my iMac but because Apple Photos is a bit ... finicky with the iCloud syncing a screenshot I had taken on my iPad wasn’t there.&lt;/p&gt;
&lt;p&gt;No fear, just keep writing in Ulysses, then move from the iMac to the iPad and drop the image in. It worked, no problems no fuss. It just works.&lt;/p&gt;
&lt;p&gt;Now, if only iCloud would just work ...&lt;/p&gt;</content><category term="Musings"></category><category term="iCloud"></category><category term="iMac"></category><category term="iOS"></category><category term="iPad"></category><category term="macOS"></category></entry><entry><title>Setting the Timezone on my server</title><link href="https://www.ryancheley.com/setting-the-timezone-on-my-server.html" rel="alternate"></link><published>2017-12-15T02:41:00+01:00</published><updated>2017-12-15T02:41:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-15:/setting-the-timezone-on-my-server.html</id><summary type="html">&lt;p&gt;When I scheduled my last post on December 14th to be published at 6pm that night I noticed that the schedule time was a bit … off:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-99" height="479" src="/images/uploads/2017/12/Image-12-14-17-6-36-PM.jpeg" width="601"&gt;&lt;/p&gt;
&lt;p&gt;I realized that the server times as still set to GMT and that I had missed the step in the Linode Getting Started guide …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I scheduled my last post on December 14th to be published at 6pm that night I noticed that the schedule time was a bit … off:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-99" height="479" src="/images/uploads/2017/12/Image-12-14-17-6-36-PM.jpeg" width="601"&gt;&lt;/p&gt;
&lt;p&gt;I realized that the server times as still set to GMT and that I had missed the step in the Linode Getting Started guide to Set the Timezone.&lt;/p&gt;
&lt;p&gt;No problem, just found the Guide, went to &lt;a href="https://linode.com/docs/getting-started/#set-the-timezone" title="Set the Timezone"&gt;this&lt;/a&gt; section and ran the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo dpkg-reconfigure tzdata&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I then selected my country (US) and my time zone (Pacific-Ocean) and now the server has the right timezone.&lt;/p&gt;</content><category term="Server"></category></entry><entry><title>Setting up the site with SSL</title><link href="https://www.ryancheley.com/setting-up-the-site-with-ssl.html" rel="alternate"></link><published>2017-12-15T02:00:00+01:00</published><updated>2017-12-15T02:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-15:/setting-up-the-site-with-ssl.html</id><summary type="html">&lt;p&gt;I’ve written about my migration from Squarespace to Wordpress earlier this year. One thing I lost with that migration when I went to Wordpress in AWS was having SSL available. While I’m sure Van Hoet will “well actually” me on this, I never could figure out how to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve written about my migration from Squarespace to Wordpress earlier this year. One thing I lost with that migration when I went to Wordpress in AWS was having SSL available. While I’m sure Van Hoet will “well actually” me on this, I never could figure out how to set it up ( not that I tried particularly hard ).&lt;/p&gt;
&lt;p&gt;The thing is now that I’m hosting on Linode I’m finding some really useful tutorials. This &lt;a href="#" title="Setting up SSL on Linode"&gt;one&lt;/a&gt; showed me exactly what I needed to do to get it set up.&lt;/p&gt;
&lt;p&gt;Like any good planner I read the how to several times and convinced myself that it was actually relatively straight forward to do and so I started.&lt;/p&gt;
&lt;h2&gt;Step 1 Creating the cert files&lt;/h2&gt;
&lt;p&gt;Using &lt;a href="https://www.linode.com/docs/security/ssl/create-a-self-signed-certificate-on-debian-and-ubuntu" title="Creating Self Signed Certificates on Ubuntu"&gt;this tutorial&lt;/a&gt;I was able to create the required certificates to set up SSL. Of course, I ran into an issue when trying to run this command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod 400 /etc/ssl/private/example.com.key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I did not have persmision to chmod on that file. After a bit of Googling I found that I can switch to interactive root mode by running the command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo -i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It feels a bit dangerous to be able to just do that (I didn’t have to enter a password) but it worked.&lt;/p&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;OK, so the tutorial above got me most(ish) of the way there, but I needed to sign my own certificate. For that I used this &lt;a href="https://www.linode.com/docs/security/ssl/install-lets-encrypt-to-create-ssl-certificates" title="SSL"&gt;tutorial&lt;/a&gt;. I followed the directions but kept coming up with an error:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Problem biding to port 443: Could not bind to the IPv4 or IPv6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I rebooted my Linode server. I restarted apache. I googled and I couldn’t find the answer I was looking for.&lt;/p&gt;
&lt;p&gt;I wanted to give up, but tried Googling one more time. Finally! An answer so simple it couldn’t work. But then it did.&lt;/p&gt;
&lt;p&gt;Stop Apache, run the command to start Apache back up and boom. The error went away and I had a certificate.&lt;/p&gt;
&lt;p&gt;However, when I tested the site using &lt;a href="https://www.ssllabs.com/ssltest/analyze.html" title="Analyze my SSL"&gt;SSL Labs&lt;/a&gt;I was still getting an error / warning for an untrusted site.&lt;/p&gt;
&lt;p&gt;🤦🏻‍♂️&lt;/p&gt;
&lt;p&gt;—&lt;/p&gt;
&lt;p&gt;OK ... take 2&lt;/p&gt;
&lt;p&gt;I nuked my linode host to start over again.&lt;/p&gt;
&lt;p&gt;First things first ... we need to needed to &lt;a href="https://linode.com/docs/security/securing-your-server/" title="Securing Your Server"&gt;secure my server&lt;/a&gt;. Next, we need to set up the server as a LAMP and Linode has &lt;a href="https://linode.com/docs/web-servers/lamp/install-lamp-stack-on-ubuntu-16-04/" title="LAMP on Linode"&gt;this tutorial&lt;/a&gt; to walk me through the steps of setting it up.&lt;/p&gt;
&lt;p&gt;I ran into an issue when I restarted the Apache service and realized that I had set my host name but hadn’t update the hosts file. No problem though. Just fire up &lt;code&gt;vim&lt;/code&gt; and make the additional line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;127.0.0.1   milo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, I used &lt;a href="https://www.linode.com/docs/security/ssl/create-a-self-signed-certificate-on-debian-and-ubuntu/" title="Self Signed Certificate on Ubuntu"&gt;this tutorial&lt;/a&gt; to create a self signed certificate and &lt;a href="https://www.linode.com/docs/security/ssl/ssl-apache2-debian-ubuntu/" title="SSL Apache2 Ubuntu"&gt;this to get the SSL to be set up&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One thing that I expected was that it would just work. After doing some more reading what I realized was that a self signed certificate is useful for internal applications. Once I realized this I decided to not redirect to SSL (i.e. part 443) for my site but instead to just use the ssl certificate it post from Ulysses securely.&lt;/p&gt;
&lt;p&gt;Why go to all this trouble just too use a third party application to post to a WordPress site? Because &lt;a href="https://www.ulyssesapp.com" title="Ulysses"&gt;Ulysses&lt;/a&gt; is an awesome writing app and I love it. If you’re writing and not using it, I’d give it a try. It really is a nice app.&lt;/p&gt;
&lt;p&gt;So really, no &lt;em&gt;good&lt;/em&gt; reason. Just that. And, I like to figure stuff out.&lt;/p&gt;
&lt;p&gt;OK, so Ulysses is great. But why the need for an SSL certificate? Mostly because when I tried to post to Wordpress from Ulysses without any certificates ( self signed or not ) I would get a warning that my traffic was unencrypted and could be snooped. I figured, better safe than sorry.&lt;/p&gt;
&lt;p&gt;Now with the ssl cert all I had to do was trust my self signed certificate and I was set^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Mostly. I still needed to specify the domain with www otherwise it didn’t work. &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Server"></category></entry><entry><title>Installing fonts in Ulysses</title><link href="https://www.ryancheley.com/installing-fonts-in-ulysses.html" rel="alternate"></link><published>2017-12-12T02:00:00+01:00</published><updated>2017-12-12T02:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-12:/installing-fonts-in-ulysses.html</id><summary type="html">&lt;p&gt;One of the people I follow online, &lt;a href="http://ticci.org"&gt;Federico Viticci&lt;/a&gt;, is an iOS power user, although I would argue that phrase doesn’t really do him justice. He can make the iPad do things that many people can’t get Macs to do.&lt;/p&gt;
&lt;p&gt;Recently he &lt;a href="https://www.macstories.net/linked/in-search-of-the-perfect-writing-font/"&gt;posted&lt;/a&gt; an article on a new …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the people I follow online, &lt;a href="http://ticci.org"&gt;Federico Viticci&lt;/a&gt;, is an iOS power user, although I would argue that phrase doesn’t really do him justice. He can make the iPad do things that many people can’t get Macs to do.&lt;/p&gt;
&lt;p&gt;Recently he &lt;a href="https://www.macstories.net/linked/in-search-of-the-perfect-writing-font/"&gt;posted&lt;/a&gt; an article on a new font he is using in Ulysses and I wanted to give it a try. The article says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Installing custsom fonts in Ulysses for iOS is easy: &lt;a href="https://github.com/iaolo/iA-Fonts/tree/master/iA%20Writer%20Duospace" title="iA Writer Duospace"&gt;go to the GitHub page&lt;/a&gt;, download each one, and open them in Ulysses (with the share sheet) to install them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Simple enough, but it wasn’t clicking for me. I kept thinking I had done &lt;em&gt;something&lt;/em&gt; wrong. So I thought I’d write up the steps I used so I wouldn’t forget the next time I need to add a new font.&lt;/p&gt;
&lt;h2&gt;Downloading the Font&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the font to somewhere you can get it. I chose to save it to iCloud and use the &lt;code&gt;Files&lt;/code&gt; app&lt;/li&gt;
&lt;li&gt;Hit Select in the &lt;code&gt;Files&lt;/code&gt; app&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Share&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Open in Ulysses&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The custom font is now installed and being used.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Checking the Font:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Click the ‘A’ in the writing screen (this is the font selector) located in the upper right hand corner of Ulysses&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-94" height="259" src="/images/uploads/2017/12/Image.jpeg" width="584"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Notice that the Current font indicates it’s a custom font (in This case iA Writer Duospace:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-93" height="1279" src="/images/uploads/2017/12/IMG_0025.jpg" width="704"&gt;&lt;/p&gt;
&lt;p&gt;Not that hard, but there’s no feedback telling you that you have been successful so I wasn’t sure if I had done it or not.&lt;/p&gt;</content><category term="iOS"></category></entry><entry><title>Switching to Linode</title><link href="https://www.ryancheley.com/switching-to-linode.html" rel="alternate"></link><published>2017-12-03T02:56:00+01:00</published><updated>2017-12-03T02:56:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-12-03:/switching-to-linode.html</id><summary type="html">&lt;p&gt;Switching to Linode&lt;/p&gt;
&lt;p&gt;I’ve been listening to a &lt;em&gt;lot&lt;/em&gt; of Talk Python to me lately ... I mean a &lt;em&gt;lot&lt;/em&gt;. Recently there was a coupon code for Linode that basically got you four months free with a purchase of a single month, so I thought, ‘what the hell’?&lt;/p&gt;
&lt;p&gt;Anyway, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Switching to Linode&lt;/p&gt;
&lt;p&gt;I’ve been listening to a &lt;em&gt;lot&lt;/em&gt; of Talk Python to me lately ... I mean a &lt;em&gt;lot&lt;/em&gt;. Recently there was a coupon code for Linode that basically got you four months free with a purchase of a single month, so I thought, ‘what the hell’?&lt;/p&gt;
&lt;p&gt;Anyway, I have finally been able to move everything from AWS to Linode for my site and I’m able to publish from my beloved Ulysses.&lt;/p&gt;
&lt;p&gt;Initially there was an issue with xmlrpc which I still haven’t fully figured out.&lt;/p&gt;
&lt;p&gt;I tried every combination of everything and finally I’m able to publish.&lt;/p&gt;
&lt;p&gt;I’m not one to look a gift horse in the mouth so I’ll go ahead and take what I can get. I had meant to document a bit more / better what I had done, but since it basically went from &lt;strong&gt;not&lt;/strong&gt; working to working, I wouldn’t know what to write at this point.&lt;/p&gt;
&lt;p&gt;The strangest part is that from the terminal the code I was using to test the issue still returns and xmlrpc faultCode error of -32700 but I’m able to connect now.&lt;/p&gt;
&lt;p&gt;I really wish i understood this better, but I’m just happy that I’m able to get it all set and ready to go.&lt;/p&gt;
&lt;p&gt;Next task ... set up SSL!&lt;/p&gt;</content><category term="Server"></category></entry><entry><title>Migrating from Square Space to Word Press</title><link href="https://www.ryancheley.com/migrating-from-square-space-to-word-press.html" rel="alternate"></link><published>2017-10-01T21:30:00+02:00</published><updated>2017-10-01T21:30:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-10-01:/migrating-from-square-space-to-word-press.html</id><summary type="html">&lt;p&gt;This weekend I migrated my site from &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt; to &lt;a href="https://www.wordpress.com" title="WordPress!"&gt;WordPress&lt;/a&gt;. I had been planning to do this for a while (ever since a &lt;a href="https://www.hover.com" title="Hover!"&gt;Hover&lt;/a&gt; ad read on &lt;a href="https://www.atp.fm" title="Accidental Tech Podcast"&gt;ATP&lt;/a&gt; earlier this summer). This weekend was the last weekend before my &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt;subscription was set to expire so I finally …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This weekend I migrated my site from &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt; to &lt;a href="https://www.wordpress.com" title="WordPress!"&gt;WordPress&lt;/a&gt;. I had been planning to do this for a while (ever since a &lt;a href="https://www.hover.com" title="Hover!"&gt;Hover&lt;/a&gt; ad read on &lt;a href="https://www.atp.fm" title="Accidental Tech Podcast"&gt;ATP&lt;/a&gt; earlier this summer). This weekend was the last weekend before my &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt;subscription was set to expire so I finally made the switch.&lt;/p&gt;
&lt;h2&gt;Why I did it&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt; offers a beautiful interface and great templates to get you started. They make everything about setting up a blog, portfolio or online store as easy as it can get. But ... that’s kind of where it ends for me. While the set up is amazingly easy, the actually content posting (for me this means my writing) was more difficult than I would have liked.&lt;/p&gt;
&lt;p&gt;In order to get something posted to my &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt; site I would write something in anyone of a number of Plain Text Editors (&lt;a href="https://www.barebones.com/products/bbedit/"&gt;BBEdit&lt;/a&gt;, &lt;a href="https://agiletortoise.com/drafts/"&gt;Drafts&lt;/a&gt;, &lt;a href="http://omz-software.com/editorial/"&gt;Editorial&lt;/a&gt;, &lt;a href="https://ulyssesapp.com"&gt;Ulysses&lt;/a&gt;). Then I would preview the generated &lt;code&gt;HTML&lt;/code&gt; to verify it looked the way I wanted it to. Finally, I would post my &lt;code&gt;MarkDown&lt;/code&gt; to the &lt;a href="https://www.squarespace.com" title="Spare Squace!"&gt;Square Space&lt;/a&gt; Blog App on iOS and do it All. Over. Again.&lt;/p&gt;
&lt;p&gt;To say that it was frustrating is a bit of an understatement. I looked really hard to see what &lt;code&gt;API&lt;/code&gt;s existed and found that there &lt;em&gt;used to be&lt;/em&gt; an API but that Square Space removed them for some reason. So no direct posting to my blog by my favorite text editors.&lt;/p&gt;
&lt;p&gt;So, with Hover having a discount on domains, and me getting an &lt;a href="https://aws.amazon.com" title="Amazon Web Services"&gt;AWS&lt;/a&gt;account where I could host WordPress and a rich set of WordPress &lt;code&gt;API&lt;/code&gt;s to post directly from some of my favorite text editors, it seemed like a no brainer to make the switch.&lt;/p&gt;
&lt;h2&gt;How I set up my Wordpress Install&lt;/h2&gt;
&lt;p&gt;The AWS ecosystem has some amazing documentation on how to do just about anything that you want. So, instead of laboriously taking screenshots and writing up what I did, I’ll just link to &lt;a href="https://aws.amazon.com/getting-started/tutorials/launch-a-wordpress-website/" title="Launch a WordPress Website"&gt;Amazon’s Launch a WordPress Website tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Exporting from Square Space to Wordpress&lt;/h2&gt;
&lt;p&gt;For all the pain it was to get content into SquareSpace, it was a breeze to get it out. Again, no need to get screenshots or write it up if I can just &lt;a href="https://support.squarespace.com/hc/en-us/articles/206566687-Exporting-your-site" title="Getting my stuff from SquareSpace"&gt;link&lt;/a&gt; to it instead!&lt;/p&gt;
&lt;h2&gt;What I hope to gain from it&lt;/h2&gt;
&lt;p&gt;As I wrote earlier my main reason for leaving Square Space was the difficulty I had getting content in. So, now that I’m on a WordPress site, what am I hoping to gain from it?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Easier to post my writing&lt;/li&gt;
&lt;li&gt;See Item 1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Writing is already &lt;em&gt;really&lt;/em&gt; hard for me. I struggle with it and making it difficult to get my stuff out into the world makes it that much harder. My hope is that not only will I write more, but that my writing will get &lt;strong&gt;better&lt;/strong&gt; because I’m writing more.&lt;/p&gt;
&lt;h2&gt;Ulysses integration&lt;/h2&gt;
&lt;p&gt;With all of that, what has my experience been with writing my first post to my WordPress site?&lt;/p&gt;
&lt;p&gt;This entire post was written and edited in Ulysses. I was able to preview my post in Ulysses. I was able to&lt;a href="#"&gt;post my content to the site with Ulysses&lt;/a&gt;. Basically, Ulysses is a kick ass app and on day one of the conversion, I’m about as happy with a decision that I can be given the short amount of time since I’ve made it.&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>Archive</title><link href="https://www.ryancheley.com/archive.html" rel="alternate"></link><published>2017-09-24T17:04:00+02:00</published><updated>2017-09-24T17:04:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-09-24:/archive.html</id><summary type="html">&lt;h1 class="text-align-center" id="archive"&gt;Archive&lt;/h1&gt;
&lt;p&gt;::: {.sqs-blockStatus .sqs-blockStatus--overlayMode state="uninitialized"}
::: {.sqs-blockStatus-disclosure}
:::&lt;/p&gt;
&lt;p&gt;::: {.sqs-blockStatus-box}
::: {.sqs-blockStatus-box-title}
archive Block
:::&lt;/p&gt;
&lt;p&gt;::: {.sqs-blockStatus-box-message}
This is example content. Double-click here and select a page to create an index of your own content.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="sqs-blockStatus-box-kbArticleLink" href="https://support.squarespace.com/hc/en-us/articles/206543327"&gt;Learn more.&lt;/a&gt;
:::
:::
:::&lt;/p&gt;
&lt;p&gt;::: {.&lt;br ./&gt; .archive-block-wrapper&lt;br ./&gt; .archive-block-setting-layout-index&lt;br ./&gt; .archive-block-setting-text-alignment-center&lt;br ./&gt; .archive-block-setting-multicolumns&lt;/p&gt; .&lt;p&gt;sqs-block-is-clone &amp;lt;="" p=""}
data-block-state="uninitialized"&lt;br&gt;
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Futurism …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1 class="text-align-center" id="archive"&gt;Archive&lt;/h1&gt;
&lt;p&gt;::: {.sqs-blockStatus .sqs-blockStatus--overlayMode state="uninitialized"}
::: {.sqs-blockStatus-disclosure}
:::&lt;/p&gt;
&lt;p&gt;::: {.sqs-blockStatus-box}
::: {.sqs-blockStatus-box-title}
archive Block
:::&lt;/p&gt;
&lt;p&gt;::: {.sqs-blockStatus-box-message}
This is example content. Double-click here and select a page to create an index of your own content.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class="sqs-blockStatus-box-kbArticleLink" href="https://support.squarespace.com/hc/en-us/articles/206543327"&gt;Learn more.&lt;/a&gt;
:::
:::
:::&lt;/p&gt;
&lt;p&gt;::: {.&lt;br ./&gt; .archive-block-wrapper&lt;br ./&gt; .archive-block-setting-layout-index&lt;br ./&gt; .archive-block-setting-text-alignment-center&lt;br ./&gt; .archive-block-setting-multicolumns&lt;/p&gt; .&lt;p&gt;sqs-block-is-clone &amp;lt;="" p=""}
data-block-state="uninitialized"&lt;br&gt;
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Futurism&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Jan 19, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Visions of the Future from Our Past&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Nov 17, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The 99th Year&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 27, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Unapologetic Art, V. III&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 6, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Living Inside Sculpture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Modernism&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Feb 16, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Monolithic Modernity&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Jan 26, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Only an Obtuse Facade&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Neofuturism&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Feb 2, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Introduction of Organic Shape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 29, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;On Preservation vs. Evolution&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 8, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;From Modernism to Tomorrow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 13, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Nature's Curve&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Neomodernism&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Feb 9, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Rough Highways &amp;amp; Revolving Towers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 22, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Case for Useful, Uniform Lines&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 1, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Engineering the Skyscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    New Objectivity&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Jan 5, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Uncover the Weimar&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Nov 3, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Estate: Behind The Semantics of Wealth and Class&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 20, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Australian Functionality&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Postmodernism&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Jan 12, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Ritual Reprise&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 15, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Formula for Wonder&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Nov 10, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;A More Holistic Approach to Landscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 6, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Living Inside Sculpture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;a href="#" class="archive-group-name-link"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Sustainable&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Feb 2, 2016&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Introduction of Organic Shape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Dec 29, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;On Preservation vs. Evolution&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Nov 24, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;The Return of The Rainbow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;{=html}
    &amp;lt;p&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;span class="archive-item-date-before"&amp;gt;&lt;/code&gt;
    &lt;code&gt;{=html}
    &amp;lt;/p&amp;gt;&lt;/code&gt;
    Oct 27, 2015&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="archive-item-link" href="#"&gt;Unapologetic Art, V. III&lt;/a&gt;
:::&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="misc"></category></entry><entry><title>Contact</title><link href="https://www.ryancheley.com/contact.html" rel="alternate"></link><published>2017-09-24T17:04:00+02:00</published><updated>2017-09-24T17:04:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-09-24:/contact.html</id><summary type="html">&lt;h1 class="text-align-center" id="contact"&gt;Contact&lt;/h1&gt;
&lt;p&gt;::: {.form-wrapper}
::: {.form-inner-wrapper}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;autocomplete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://ryan-cheley.squarespace.com&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;onsubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      return (function(form) {&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        Y.use(&amp;amp;#39;squarespace-form-submit&amp;amp;#39;, &amp;amp;#39;node&amp;amp;#39;, function(Y){&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;          (new Y.Squarespace.FormSubmit({&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;            formNode: Y.Node(form)&amp;amp;lt;br /&amp;amp;gt …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1 class="text-align-center" id="contact"&gt;Contact&lt;/h1&gt;
&lt;p&gt;::: {.form-wrapper}
::: {.form-inner-wrapper}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;autocomplete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://ryan-cheley.squarespace.com&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;onsubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      return (function(form) {&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        Y.use(&amp;amp;#39;squarespace-form-submit&amp;amp;#39;, &amp;amp;#39;node&amp;amp;#39;, function(Y){&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;          (new Y.Squarespace.FormSubmit({&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;            formNode: Y.Node(form)&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;          })).submit(&amp;amp;#39;57d2447bf5e231551c6ae7fd&amp;amp;#39;, &amp;amp;#39;&amp;amp;#39;, &amp;amp;#39;page-57d2447bf5e231551c6ae7fc&amp;amp;#39;);&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        });&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;        return false;&amp;amp;lt;br /&amp;amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;      })(this)&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;data-form-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;57d2447bf5e231551c6ae7fd&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;::: {.field-list .clear}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;fieldset id=&amp;quot;name-yui_3_17_2_1_1455037154250_51318&amp;quot; class=&amp;quot;form-item fields name required&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;::: {.title}
Name [*]{.required}
:::&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt;Name&lt;code&gt;&amp;lt;/legend&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;::: {.field .first-name}
&lt;code&gt;&amp;lt;label class="caption"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;input class="field-element field-control" name="fname" &amp;lt;br&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/input&amp;gt;&lt;/code&gt; x-autocompletetype="given-name" type="text"&lt;br&gt;
spellcheck="false"&lt;br&gt;
maxlength="30"&lt;br&gt;
data-title="First" /&gt;&lt;br&gt;
First Name&lt;code&gt;&amp;lt;/label&amp;gt;&lt;/code&gt;
:::&lt;/p&gt;
&lt;p&gt;::: {.field .last-name}
&lt;code&gt;&amp;lt;label class="caption"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;input class="field-element field-control" name="lname" &amp;lt;br&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/input&amp;gt;&lt;/code&gt; x-autocompletetype="surname" type="text"&lt;br&gt;
spellcheck="false" maxlength="30" data-title="Last" /&gt;&lt;br&gt;
Last Name&lt;code&gt;&amp;lt;/label&amp;gt;&lt;/code&gt;
:::&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/fieldset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;::: {#email-yui_3_17_2_1_1455037154250_51657 .form-item .field .email .required}
&lt;code&gt;&amp;lt;label class="title" for="email-yui_3_17_2_1_1455037154250_51657-field"&amp;gt;&lt;/code&gt;Email Address [*]{.required}&lt;code&gt;&amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;input class="field-element" name="email" x-autocompletetype="email" type="text" spellcheck="false" id="email-yui_3_17_2_1_1455037154250_51657-field"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/input&amp;gt;&lt;/code&gt;
:::&lt;/p&gt;
&lt;p&gt;::: {#textarea-yui_3_17_2_1_1455037154250_52513 .form-item .field .textarea .required}
&lt;code&gt;&amp;lt;label class="title" for="textarea-yui_3_17_2_1_1455037154250_52513-field"&amp;gt;&lt;/code&gt;Message [*]{.required}&lt;code&gt;&amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;field-element &amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;textarea-yui_3_17_2_1_1455037154250_52513-field&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;:::
:::&lt;/p&gt;
&lt;p&gt;::: {.form-button-wrapper .form-button-wrapper--align-center}
&lt;code&gt;&amp;lt;input class="button sqs-system-button sqs-editable-button" type="submit" value="Submit"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/input&amp;gt;&lt;/code&gt;
:::&lt;/p&gt;
&lt;p&gt;::: {.hidden .form-submission-text}
Thank you!
:::&lt;/p&gt;
&lt;p&gt;::: {.hidden .form-submission-html submission-html=""}
:::&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;:::
:::&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Curriculum Vitae</title><link href="https://www.ryancheley.com/curriculum-vitae.html" rel="alternate"></link><published>2017-09-24T17:04:00+02:00</published><updated>2017-09-24T17:04:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-09-24:/curriculum-vitae.html</id><summary type="html">&lt;h1&gt;R. RYAN CHELEY&lt;/h1&gt;
&lt;p&gt;July 2016 - Present, Director Business Informatics, DESERT OASIS HEALTHCARE&lt;/p&gt;
&lt;p&gt;Responsible for the design, development and implementation of business information processes and reporting to support both clinical and administrative operations. I partner with leaders at several Heritage Provider Network Groups including Arizona Priority Care, Desert Oasis Healthcare and …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;R. RYAN CHELEY&lt;/h1&gt;
&lt;p&gt;July 2016 - Present, Director Business Informatics, DESERT OASIS HEALTHCARE&lt;/p&gt;
&lt;p&gt;Responsible for the design, development and implementation of business information processes and reporting to support both clinical and administrative operations. I partner with leaders at several Heritage Provider Network Groups including Arizona Priority Care, Desert Oasis Healthcare and Family Hospice care to manage the build detailed requirements, develop IT solutions, and provide end-to-end project management and on-going technical support for internally developed programs, the NextGen Application as well as other third party vendor technologies.&lt;/p&gt;
&lt;p&gt;Accomplishments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fostered environment to implement Agile methodology for Web Developers&lt;/li&gt;
&lt;li&gt;Implemented a dimensional data warehouse&lt;/li&gt;
&lt;li&gt;Instituted 1 on 1's with staff&lt;/li&gt;
&lt;li&gt;Lead team that received Administrative Department of the year, 2017&lt;/li&gt;
&lt;li&gt;Went from managing 6 staff to 15 staff&lt;/li&gt;
&lt;li&gt;Worked with other Directors to write or rewrite several company policies, including the Attendance Policy and a Policy to get online training made available for technical staff&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;February 2012 - July 2016, Director - NextGen Support Services, DESERT OASIS HEALTHCARE&lt;/h3&gt;
&lt;p&gt;Responsible for the design, development and implementation of business and clinical information processes; Work closely with physicians, clinical staff and business operational leadership to provide detailed requirements, develop solutions, provide end-to-end project management and on-going technical support. Manage staff, including coordinating cross-functional teams and resources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lead Migration of Large Enterprise EHR to new Data Center&lt;/li&gt;
&lt;li&gt;Lead Large Client NextGen Enterprise on successful upgrade path to Meaningful Use Compliant EHR versions every year from 2012 - 2015&lt;/li&gt;
&lt;li&gt;Received Peer Award for Most Innovate (2015)&lt;/li&gt;
&lt;li&gt;Promoted from Supervisor of one team in NextGen Department in 2012 to Director of Department by 2015&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;November 2008 – February 2012 Project Analyst, DESERT OASIS HEALTHCARE&lt;/h3&gt;
&lt;p&gt;Responsible for the maintenance of the Member Roster for the Living &amp;amp; Aging Well Program; Developed of Reports for tracking provider/user productivity; Development of Managed Care Custom Templates in the NextGen EHR&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converted Member Roster from Excel format with no reporting capabilities to MS Access Database with rich feature set of reporting that allowed Medical Director to make quicker, more informed decisions&lt;/li&gt;
&lt;li&gt;Received Peer Award for Most Dependable (2011)&lt;/li&gt;
&lt;li&gt;Created Managed Care Templates in NextGen EHR that facilitated the integration of Primary Care Medical Records with Case Management Records&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;March 2006 – November 2008, Web Services Project Manager GRAPHTEK ADVERTISING AND DESIGN&lt;/h3&gt;
&lt;p&gt;Responsible for the planning and implementation of Proprietary Web CMS for Client Websites;&lt;br&gt;
Coordinating with Client Marketing Managers, IT and Accounting personnel to ensure web site projects are completed in a timely fashion;&lt;br&gt;
Client training on CMS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Successfully implemented over 100 client websites on Custom Content Management System&lt;/li&gt;
&lt;li&gt;Introduced Post-Mortem Analysis of Client implementations which lead to a decrease in both cost and time to implement&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;March 2005 – April 2006, Analyst, Revenue Management, JETBLUE AIRWAYS&lt;/h3&gt;
&lt;p&gt;Setting inventory levels for six markets with twenty-four to thirty-four daily flights; Analyze market performance against metrics set by manager, including year-over-year and forecast comparisons&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increased Revenue Per Available Seat Mile in each of my assigned Markets Year-over-Year&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;November 2002 - August 2003, Focused on getting into Graduate School&lt;/h3&gt;
&lt;h3&gt;August 2001 – November 2002 Global Support Analyst BARRA, INC.&lt;/h3&gt;
&lt;p&gt;Responsible for providing technical support to Institutional Investment clients in the US, Canada and Europe; Assisting with theory, and interpretation of Multifactor Models used in predicting risk of portfolios; Resolving technical problems related to Barra’s Proprietary software; Participating in interviewing and hiring of employees; Training new employees on different aspects of Barra’s Multi Factor Model; Gave presentations to new hires from different global offices;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was the top Support Analyst in terms of Tickets Closed for 3 straight months&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Education&lt;/h2&gt;
&lt;p&gt;MA Economics, UNIVERSITY OF ARIZONA, Tucson, Arizona 2004&lt;/p&gt;
&lt;p&gt;BS Economics/Finance, Minor in Statistics, CALIFORNIA POLYTECHNIC STATE UNIVERSITY, San Luis Obispo, CA 2001&lt;/p&gt;
&lt;h2&gt;Other Activities&lt;/h2&gt;
&lt;p&gt;Member of Bermuda Dunes Community Council, September 2009 - June 2013&lt;/p&gt;
&lt;p&gt;Running (I ran 13 half marathons in 13 months)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gettingthingsdone.com"&gt;GTD&lt;/a&gt;'er&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Podcasts I like</title><link href="https://www.ryancheley.com/podcasts-i-like.html" rel="alternate"></link><published>2017-09-24T17:04:00+02:00</published><updated>2017-09-24T17:04:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-09-24:/podcasts-i-like.html</id><content type="html">&lt;h1 id="podcasts-i-like-"&gt;Podcasts I like:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://atp.fm"&gt;Accidental Tech Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/cortex/"&gt;Cortex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/freeagents"&gt;Free Agents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/connected"&gt;Connected&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm"&gt;Talk Python to Me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/canvas"&gt;Canvas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/roboism"&gt;Robosim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.benbenandblue.com"&gt;Ben, Ben and Blue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/mpu"&gt;Mac Power Users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.relay.fm/upgrade"&gt;Upgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://5by5.tv/b2w"&gt;Back to Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Podcasts"></category></entry><entry><title>Making Background Images</title><link href="https://www.ryancheley.com/making-background-images.html" rel="alternate"></link><published>2017-09-17T23:24:00+02:00</published><updated>2017-09-17T23:24:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-09-17:/making-background-images.html</id><summary type="html">&lt;p&gt;I'm a big fan of &lt;a href="http://www.ryancheley.com/podcasts-i-like/"&gt;podcasts&lt;/a&gt;. I've been listening to them for 4 or 5 years now. One of my favorite Podcast Networks, &lt;a href="http://www.relay.fm"&gt;Relay&lt;/a&gt; just had their second anniversary. They offer memberships and after listening to hours and hours of &lt;em&gt;All The Great Shows&lt;/em&gt; I decided that I needed to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm a big fan of &lt;a href="http://www.ryancheley.com/podcasts-i-like/"&gt;podcasts&lt;/a&gt;. I've been listening to them for 4 or 5 years now. One of my favorite Podcast Networks, &lt;a href="http://www.relay.fm"&gt;Relay&lt;/a&gt; just had their second anniversary. They offer memberships and after listening to hours and hours of &lt;em&gt;All The Great Shows&lt;/em&gt; I decided that I needed to become a &lt;a href="https://www.relay.fm/membership"&gt;member&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the awesome perks of &lt;a href="http://www.relay.fm"&gt;Relay&lt;/a&gt; membership is a set of &lt;strong&gt;Amazing&lt;/strong&gt; background images.&lt;/p&gt;
&lt;p&gt;This is fortuitous as I've been looking for some good backgrounds for my iMac, and so it seemed like a perfect fit.&lt;/p&gt;
&lt;p&gt;On my iMac I have several &lt;code&gt;spaces&lt;/code&gt; configured. One for &lt;code&gt;Writing&lt;/code&gt;, one for &lt;code&gt;Podcast&lt;/code&gt; and one for everything else. I wanted to take the backgrounds from Relay and have them on the &lt;code&gt;Writing&lt;/code&gt; space and the &lt;code&gt;Podcasting&lt;/code&gt; space, but I also wanted to be able to distinguish between them. One thing I could try to do would be to open up an image editor (Like &lt;a href="http://www.photoshop.com"&gt;Photoshop&lt;/a&gt;, &lt;a href="http://www.pixelmator.com/pro/"&gt;Pixelmater&lt;/a&gt; or &lt;a href="https://flyingmeat.com/acorn/"&gt;Acorn&lt;/a&gt;) and add text to them one at a time (although I'm sure there is a way to script them) but I decided to see if I could do it using Python.&lt;/p&gt;
&lt;p&gt;Turns out, I can.&lt;/p&gt;
&lt;p&gt;This code will take the background images from my &lt;code&gt;/Users/Ryan/Relay 5K Backgrounds/&lt;/code&gt; directory and spit them out into a subdirectory called &lt;code&gt;Podcasting&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageStat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;listdir&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;

&lt;span class="c1"&gt;# Declare Text Attributes&lt;/span&gt;
&lt;span class="n"&gt;TextFontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="n"&gt;TextFontColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/Library/Fonts/Inconsolata.otf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TextFontSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mypath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;onlyfiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.DS_Store&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;TextXPos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
    &lt;span class="n"&gt;TextYPos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.85&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;TextXPos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TextYPos&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Podcasting&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TextFontColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Podcasting/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Podcasting/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; succesfully saved!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was great, but it included all of the images, and some of them are &lt;em&gt;really&lt;/em&gt; bright. I mean, like &lt;em&gt;really&lt;/em&gt; bright.&lt;/p&gt;
&lt;p&gt;So I decided to use &lt;a href="http://www.ryancheley.com/blog/2016/12/17/its-science"&gt;something I learned while helping my daughter with her Science Project last year&lt;/a&gt; and determine the brightness of the images and use only the dark ones.&lt;/p&gt;
&lt;p&gt;This lead me to update the code to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageStat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;listdir&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;brightness01&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;im_file&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageStat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Declare Text Attributes&lt;/span&gt;
&lt;span class="n"&gt;TextFontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="n"&gt;TextFontColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;~/Library/Fonts/Inconsolata.otf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TextFontSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mypath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;onlyfiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.DS_Store&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;darkimages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;brightness01&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onlyfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;darkimagesrows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;darkimagesrows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;TextXPos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
    &lt;span class="n"&gt;TextYPos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.85&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;TextXPos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TextYPos&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Podcasting&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TextFontColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Podcasting/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Podcasting/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; succesfully saved!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also wanted to have backgrounds generated for my &lt;strong&gt;Writing&lt;/strong&gt; space, so I tacked on this code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;darkimagesrows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mypath&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TextXPos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.72&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TextYPos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.85&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;TextXPos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TextYPos&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Writing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TextFontColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;text&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Writing/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/Users/Ryan/Relay 5K Backgrounds/Writing/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;darkimages&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; succesfully saved!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;print&lt;/code&gt; statements at the end of the &lt;code&gt;for&lt;/code&gt; loops were so that I could tell that something was actually happening. The images were VERY large (close to 10MB for each one) so the &lt;code&gt;PIL&lt;/code&gt; library was taking some time to process the data and I was concerned that something had frozen / stopped working&lt;/p&gt;
&lt;p&gt;This was a pretty straightforward project, but it was pretty fun. It allowed me to go from this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-121" height="169" src="/images/uploads/2017/09/Cortex-5K-small-original-300x169.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;To this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-122" height="169" src="/images/uploads/2017/09/Cortex-5K-small-300x169.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;For the text attributes I had to play around with them for a while until I found the color, font and font size that I liked and looked good (to me).&lt;/p&gt;
&lt;p&gt;The Positioning of the text also took a bit of experimentation, but a little trial and error and I was all set.&lt;/p&gt;
&lt;p&gt;Also, for the &lt;code&gt;brightness&lt;/code&gt; level of 65 I just looked at the images that seemed to work and found a threshold to use. The actual value may vary depending on the look you're doing for.&lt;/p&gt;</content><category term="macOS"></category></entry><entry><title>The why of a decision</title><link href="https://www.ryancheley.com/the-why-of-a-decision.html" rel="alternate"></link><published>2017-08-24T20:49:00+02:00</published><updated>2017-08-24T20:49:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-08-24:/the-why-of-a-decision.html</id><summary type="html">&lt;p&gt;As a a manager no one will ever agree with every decision you make. Not the people you manage, and not the people that manage you. But if you always know why you made a decision and you can articulate that decision, then you’ll be on a good footing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a a manager no one will ever agree with every decision you make. Not the people you manage, and not the people that manage you. But if you always know why you made a decision and you can articulate that decision, then you’ll be on a good footing when someone asks you, “How did you know to do that?” or “How did you know to make &lt;strong&gt;that&lt;/strong&gt; decision?”&lt;/p&gt;
&lt;p&gt;One of the best lessons I learned from my boss LB is that the decision is less important than the &lt;strong&gt;why&lt;/strong&gt; of the decision. Make no mistake, bad decisions are bad decisions, but they are much less likely to be made if you know why you made it.&lt;/p&gt;
&lt;p&gt;Once I was able to internalize that lesson, it freed me to actually make decisions.&lt;/p&gt;
&lt;p&gt;When faced with a decision, I tend to ask these questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What do I know?&lt;/li&gt;
&lt;li&gt;How do I know it (i.e. how confident am I in the information I know)?&lt;/li&gt;
&lt;li&gt;What do I gain by waiting for more information?&lt;/li&gt;
&lt;li&gt;What’s the worst that happens if I make the wrong decision?&lt;/li&gt;
&lt;li&gt;What’s the worst that happens if I make no decision now?&lt;/li&gt;
&lt;li&gt;Who can I talk to about this decision?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Having answers to these questions doesn’t guarantee that my decision will be right, but it does help me to understand why I’m making the decision that I’m making. It will also help me to explain the decision later on if needed.&lt;/p&gt;
&lt;p&gt;One of the things I try to tell the people I work with is this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The decision itself is less important than why you made the decision. If you don’t know why you made a decision, then you shouldn’t be making the decision yet.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Know &lt;strong&gt;why&lt;/strong&gt; you made a decision and you’ll be better equipped &lt;strong&gt;to make&lt;/strong&gt; the decision.&lt;/p&gt;</content><category term="Musings"></category><category term="Decisions"></category><category term="Management"></category></entry><entry><title>Making the Right Choice, or How I Learned to Live with Limiting My Own Technical Debt and Just Be Happy</title><link href="https://www.ryancheley.com/making-the-right-choice-or-how-i-learned-to-live-with-limiting-my-own-technical-debt-and-just-be-happy.html" rel="alternate"></link><published>2017-08-03T19:00:00+02:00</published><updated>2017-08-03T19:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-08-03:/making-the-right-choice-or-how-i-learned-to-live-with-limiting-my-own-technical-debt-and-just-be-happy.html</id><summary type="html">&lt;p&gt;One of the things that comes up in my day job is trying to make sure that reports that we create are correct, not only from a data perspective, but from an architectural perspective. There are hundreds of legacy reports with legacy SQL code that has been written by 10 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the things that comes up in my day job is trying to make sure that reports that we create are correct, not only from a data perspective, but from an architectural perspective. There are hundreds of legacy reports with legacy SQL code that has been written by 10’s of developers (some actual developers and some not so actual developers) over the last 10+ years.&lt;/p&gt;
&lt;p&gt;Today a request came in to update a productivity report to include a new user. The request included their user ID from the application where their productivity is being tracked from.&lt;/p&gt;
&lt;p&gt;This request looked exactly like another report and request that I’ve seen that involved running productivity from the same system with the same aspects (authorizations work).&lt;/p&gt;
&lt;p&gt;I immediately thought that the reports were the same and set out to add the user id to a table &lt;code&gt;ReferralsTeam&lt;/code&gt; which includes fields &lt;code&gt;UserID&lt;/code&gt; and &lt;code&gt;USerName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also thought that documenting what needed to be done for this would be a good thing to be done.&lt;/p&gt;
&lt;p&gt;I documented the fix and linked the &lt;code&gt;Confluece&lt;/code&gt; article to the &lt;code&gt;JIRA&lt;/code&gt; issue and then I realized my mistake. This wasn’t the same report. It wasn’t even the same department!&lt;/p&gt;
&lt;p&gt;OK, so two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There are two reports that do &lt;strong&gt;EXCATLY&lt;/strong&gt; the same thing for two different departments&lt;/li&gt;
&lt;li&gt;The report for the other department has user ids hard coded in the &lt;code&gt;SQL&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What to do?&lt;/p&gt;
&lt;p&gt;The easy way is to just update the stored procedure with the hard coded user ids with the new one and call it a day&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;right&lt;/strong&gt; way:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the table &lt;code&gt;ReferralsTeam&lt;/code&gt; to have a new column called department ... or better yet create a second table called &lt;code&gt;Departments&lt;/code&gt; with fields &lt;code&gt;DepartmentID&lt;/code&gt; and &lt;code&gt;DepartmentName&lt;/code&gt; and add the &lt;code&gt;DepartmentID&lt;/code&gt; to the &lt;code&gt;ReferralsTeam&lt;/code&gt; table.&lt;/li&gt;
&lt;li&gt;Populate the new column with the correct data for the current team that has records in it&lt;/li&gt;
&lt;li&gt;Update the the various stored procedures that use the &lt;code&gt;ReferralsTeam&lt;/code&gt; table in them to include a parameter that is used to filter the new column that was added to keep the data consistent&lt;/li&gt;
&lt;li&gt;Add the User IDs from the report that has the user IDs hard coded, i.e. the &lt;strong&gt;new&lt;/strong&gt; department&lt;/li&gt;
&lt;li&gt;Update the report that uses the hard coded user ids to use the dynamic stored procedure&lt;/li&gt;
&lt;li&gt;Verify the results&lt;/li&gt;
&lt;li&gt;Build a user interface to allow the data to be updated outside of &lt;code&gt;SQL Server Management Studio&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Give access to that user interface to the Department Managers so they can manage it on their own&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, which one would you do?&lt;/p&gt;
&lt;p&gt;In this case, I updated the hard coded stored procedure to include the new user id to get that part of the request done. This helps satisfy the requester and allows them to have the minimum amount of down time.&lt;/p&gt;
&lt;p&gt;I then also create a new &lt;code&gt;JIRA&lt;/code&gt; issue so that we can look at doing steps 1 - 6 above and assigned to the report developer. Steps 7 &amp;amp; 8 are in a separate &lt;code&gt;JIRA&lt;/code&gt; issue that is assigned to the Web Developers.&lt;/p&gt;
&lt;p&gt;Doing things the right way will sometimes take longer to implement in the short run, but in the long run we’ve removed the need for Managers in these departments to ask to have the reports updated, we prevent bad/stale filters from being used, and we can eliminate a duplicative report!&lt;/p&gt;
&lt;p&gt;One interesting note, the reason I caught the duplication was because of a project that we’ve been working on to document all of the hundreds of reports we have. I searched &lt;code&gt;Confluence&lt;/code&gt; for the report name and it’s recipients were unexpected for me. That lead me to question all I had done and really evaluate the best course of action. While I kind of went out of order (and this is why I started documented one process that I didn’t mean to) I was still able to catch my mistake and rectify it.&lt;/p&gt;
&lt;p&gt;Documentation is a pain in the ass in the moment, but holy crap it can really pay off in unexpected ways in the long run.&lt;/p&gt;</content><category term="Productivity"></category><category term="Design Decision"></category><category term="SQL"></category><category term="Technical Debt"></category></entry><entry><title>The Technical Debt of Others</title><link href="https://www.ryancheley.com/the-technical-debt-of-others.html" rel="alternate"></link><published>2017-07-28T03:21:00+02:00</published><updated>2017-07-28T03:21:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-07-28:/the-technical-debt-of-others.html</id><summary type="html">&lt;h1&gt;The Technical Debt of Others&lt;/h1&gt;
&lt;p&gt;Technical Debt as defined on &lt;a href="https://www.techopedia.com"&gt;technopendia&lt;/a&gt; is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a concept in programming that reflects the extra development work that arises when code that is easy to implement in the short run is used instead of applying the best overall solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the management of software development …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;The Technical Debt of Others&lt;/h1&gt;
&lt;p&gt;Technical Debt as defined on &lt;a href="https://www.techopedia.com"&gt;technopendia&lt;/a&gt; is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a concept in programming that reflects the extra development work that arises when code that is easy to implement in the short run is used instead of applying the best overall solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the management of software development we have to make these types of easy-to-implement-and-we-need-to-ship versus need-to-do-it-right-but-it-will-take-longer decisions all of the time.&lt;/p&gt;
&lt;p&gt;These decisions can lead to the dreaded &lt;strong&gt;working as designed&lt;/strong&gt; answer to a bug report.&lt;/p&gt;
&lt;p&gt;This is infuriating.&lt;/p&gt;
&lt;p&gt;It’s even more infuriating when you are on the receiving end of this.&lt;/p&gt;
&lt;p&gt;A recent feature enhancement in the EHR we use touted an&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alert to let proscribing providers know that a medication is a duplicate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For anyone in the medical field you can know what a nightmare it can be to prescribe a duplicate medication from a patient safety perspective, so we’d obviously want to have this feature on.&lt;/p&gt;
&lt;p&gt;During our testing we noticed that if a medication was prescribed in a dose, say 75mg, and stopped and then started again at a new dose, say 50mg, the Duplicate Medication Alert would be presented.&lt;/p&gt;
&lt;p&gt;We dutifully submitted a bug report to the vendor and the responded&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Medication is considered a true duplicate as when a medication is stopped it is stopped for that day it is still considered active till (&lt;em&gt;sic&lt;/em&gt;) the end of the day due to the current application logic, which cannot be altered or changed. What your providers/users may do is enter a DUR Reason and Acknowledge with something along the lines of "New Prescription". These DUR reasons can be added via Tools &gt; Preferences &gt; Medications &gt; DUR &gt; Override Reason tab - type in the desired DUR Override Reason &gt; Select Add &gt; OK to save.&lt;/p&gt;
&lt;p&gt;If functionality and logic outside of this is desired this will need to be submitted as an Idea as well since this is currently &lt;strong&gt;functioning off of development's intended design.&lt;/strong&gt;”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then the design is broken.&lt;/p&gt;
&lt;p&gt;From a technical perspective I know exactly what is going on. This particular vendor stores &lt;code&gt;date&lt;/code&gt; values as &lt;code&gt;varchar(8)&lt;/code&gt; but stores &lt;code&gt;datetime&lt;/code&gt; values as &lt;code&gt;datetime&lt;/code&gt;. There may be some really good reasons for making this design decision.&lt;/p&gt;
&lt;p&gt;However, when the &lt;code&gt;medication&lt;/code&gt; tables were designed, the developers asked the question, "Will we &lt;strong&gt;EVER&lt;/strong&gt; care about the time a medication is started or stopped?"&lt;/p&gt;
&lt;p&gt;They answered no and decided to set up a &lt;code&gt;start date&lt;/code&gt; (and by extension an &lt;code&gt;end date&lt;/code&gt;) for medications to not respect the time that a prescription started or stopped and therefore set them as &lt;code&gt;varchar(8)&lt;/code&gt; and not as &lt;code&gt;DATETIME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;But now they’ve rolled out this &lt;strong&gt;awesome&lt;/strong&gt; feature. A feature that would actually allow providers to recognize duplicate medications potentially saving lives. But because they don’t store the time of the stopped medication, their logic can only look at the date. When it sees the same medication (but in different doses) active on the same date a warning appears letting the provider know that they have a duplicate medication (even though they don’t).&lt;/p&gt;
&lt;p&gt;Additionally, this warning serves no purpose other than to be &lt;strong&gt;one more damned click&lt;/strong&gt; from a provider’s perspective because the vendor is not storing (ie ignoring) the time.&lt;/p&gt;
&lt;p&gt;When clinicians complain about the impact of EHRs on their ability to deliver effective care ... when they complain about EHRs not fulfilling their promise of increased patient safety, these are the types of things that they are complaining about.&lt;/p&gt;
&lt;p&gt;I think this response from one of the clinicians sums up this issue&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I don't see the logic with the current "intended design" in considering a medication that has just been inactivated STILL ACTIVE until the end of the day. A prescriber would stop current and start new meds all in one sitting (which includes changing doses of the same med), not wait until the next day to do the second step. It decreases workflow efficiency to have to enter a reason when no real reason exists (since there IS no active entry on med list). The whole point is to alert a prescriber to an existing entry of a medication and resolve it by inactivating the duplicate, if appropriate (otherwise, enter reason for having a duplicate), before sending out a new Rx.&lt;/p&gt;
&lt;p&gt;While it's relatively easy to follow and resolve the duplication alert if the inactivation and new prescribing is done by the same prescriber, I can see a scenario where prescriber A stops an old ibuprofen 600mg Rx[\^2] (say PCP) and patient then goes to see prescriber B (say IC[\^3]) who then tries to Rx ibuprofen 800mg…. and end up getting this duplication alert. The second prescriber would almost be lost as to why that message is showing up.&lt;/p&gt;
&lt;p&gt;The application logic should augment the processes the application was designed to faciliate, &lt;strong&gt;but right now it is a hindrance&lt;/strong&gt;. (emphasis added)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I know that sometimes we need to build it fast so that we can ship, but developers need to remember, &lt;em&gt;forever&lt;/em&gt; is a long freaking time.&lt;/p&gt;
&lt;p&gt;When you make a forever decision, be prepared to have push back from users of your software when those decision are markedly ridiculous. And be prepared to be scoffed at when you answer their bug report with a Working-as–Designed response.&lt;/p&gt;
&lt;p&gt;[\^2]: Rx = prescription&lt;/p&gt;
&lt;p&gt;[\^3]: IC = Immediate Care&lt;/p&gt;</content><category term="Musings"></category><category term="Work"></category></entry><entry><title>Getting CPHIMS(R) Certified - Part III</title><link href="https://www.ryancheley.com/getting-cphimsr-certified-part-iii.html" rel="alternate"></link><published>2017-07-17T17:30:00+02:00</published><updated>2017-07-17T17:30:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-07-17:/getting-cphimsr-certified-part-iii.html</id><summary type="html">&lt;p&gt;I walked into the testing center at 8:30 (a full 30 minutes before my exam start time as the email suggested I do).&lt;/p&gt;
&lt;p&gt;I signed in and was given a key for a locker for my belongings and offered use of the restroom.&lt;/p&gt;
&lt;p&gt;I was then asked to read …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I walked into the testing center at 8:30 (a full 30 minutes before my exam start time as the email suggested I do).&lt;/p&gt;
&lt;p&gt;I signed in and was given a key for a locker for my belongings and offered use of the restroom.&lt;/p&gt;
&lt;p&gt;I was then asked to read some forms and then was processed. My pockets were turned out and my glasses inspected. I signed in (again) and had the signature on my ID scrutinized with how I signed on test day. It only took three tries ... apparently 19 year old me doesn’t sign his name like 39 year old me.&lt;/p&gt;
&lt;p&gt;Now it was test time ... even if I could remember any of the questions I wouldn’t be able to write about them ... but I can’t remember them so it’s not a problem.&lt;/p&gt;
&lt;p&gt;It took me 80 minutes to get through the real test of 115 questions (15 are there as ‘test’ questions that don’t actually count). The only real issues I had were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;construction noise outside the window to my left&lt;/li&gt;
&lt;li&gt;the &lt;em&gt;burping&lt;/em&gt; guy to my right ... seriously bro, cut down on the breakfast burritos&lt;/li&gt;
&lt;li&gt;one question that I read incorrectly 4 different times. On the fifth time I finally realized my mistake and was able to answer correctly (I think). As it turned out I had guessed what I thought was the correct answer but it was still a good feeling to get the number through a calculation instead of just guessing it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the test was completed and my questions scored the results came back. A passing score is 600 out of 800. I scored 669 ... I am officially CPHIMS. The scoring breakdown even shows areas where I didn’t do so well, so I know what to focus on for the future. For reference, they are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Testing and Evaluation (which is surprising for me)&lt;/li&gt;
&lt;li&gt;Analysis (again, surprising)&lt;/li&gt;
&lt;li&gt;Privacy and Security (kind of figured this as it’s not part of my everyday job)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;When I set this goal for myself at the beginning of the year it was just something that I wanted to do. I didn’t really have a reason for it other than I thought it might be &lt;em&gt;neat&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;After passing the exam I am really glad that I did. I’ve heard myself say things and think about things differently, like implementation using &lt;em&gt;Pilots&lt;/em&gt; versus &lt;em&gt;Big Bang&lt;/em&gt; or &lt;em&gt;By Location&lt;/em&gt; versus &lt;em&gt;By Feature&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I’m also asking questions differently of my colleagues and my supervisors to help ensure that the we are doing things for the right reason at the right time.&lt;/p&gt;
&lt;p&gt;I can’t wait to see what I try to do next&lt;/p&gt;</content><category term="Professional Development"></category><category term="CPHIMS"></category><category term="HIT"></category></entry><entry><title>Getting CPHIMS(R) Certified - Part II</title><link href="https://www.ryancheley.com/getting-cphims-certified-part-ii.html" rel="alternate"></link><published>2017-07-16T05:30:00+02:00</published><updated>2017-07-16T05:30:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-07-16:/getting-cphims-certified-part-ii.html</id><summary type="html">&lt;p&gt;Signing up for the actual exam may have been the most difficult and confusing part. I had to be verified as someone that could take the test, and then my membership needed to be verified (or something).&lt;/p&gt;
&lt;p&gt;I received my confirmation email that I could sign up for the exam …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Signing up for the actual exam may have been the most difficult and confusing part. I had to be verified as someone that could take the test, and then my membership needed to be verified (or something).&lt;/p&gt;
&lt;p&gt;I received my confirmation email that I could sign up for the exam and read through it to make sure I understood everything. Turns out, when you sign up for the CPHIMS you need to use your FULL name (and I had just used my middle and last name).&lt;/p&gt;
&lt;p&gt;One email to the HIMSS people and we’re all set (need to remember that for next time ... this exam is the real deal!)&lt;/p&gt;
&lt;p&gt;I was going to be in Oceanside for the Fourth of July Holiday and decided to sign up to take the exam in San Diego on the fifth. With a test date in hand I started on my study plan.&lt;/p&gt;
&lt;p&gt;Every night when I got home I would spend roughly 45 minutes reading the study book, and going over Flash Cards that I had made with topics that I didn’t understand. Some nights I took off, but it was a solid 35 days of studying for 45 minutes.&lt;/p&gt;
&lt;p&gt;Now, 2 things I did not consider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Scheduling an exam on the fifth is a little like scheduling an exam on Jan 1 ... not the best idea in the world&lt;/li&gt;
&lt;li&gt;The place my family and I go to in Oceanside always has a ton of friends and family for the weekend (30+) and it would be a less than ideal place to do any last minute studying / cramming&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I spent some of the preceding weekend reading and reviewing flash cards, but once the full retinue of friends and family arrived it was pretty much over. I had some chances to read on the beach, but for the most part my studying stopped.&lt;/p&gt;
&lt;p&gt;The morning of the fifth came. I made the 40 minutes drive from Oceanside to the testing center to take the CPHIMS exam for real.&lt;/p&gt;</content><category term="Professional Development"></category><category term="CPHIMS"></category><category term="HIT"></category></entry><entry><title>Getting CPHIMS(R) Certified - Part I</title><link href="https://www.ryancheley.com/getting-cphimsr-certified-part-i.html" rel="alternate"></link><published>2017-07-13T17:30:00+02:00</published><updated>2017-07-13T17:30:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-07-13:/getting-cphimsr-certified-part-i.html</id><summary type="html">&lt;p&gt;One of my professional goals for 2017 was to get my &lt;a href="http://www.himss.org/health-it-certification/cphims"&gt;CPHIMS (Certified Professional in Healthcare Information and Management Systems)&lt;/a&gt;. The CPHIMS certification is offered through HIMSS which “Demonstrates you meet an international standard of professional knowledge and competence in healthcare information and management systems”.&lt;/p&gt;
&lt;p&gt;There was no requirement for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of my professional goals for 2017 was to get my &lt;a href="http://www.himss.org/health-it-certification/cphims"&gt;CPHIMS (Certified Professional in Healthcare Information and Management Systems)&lt;/a&gt;. The CPHIMS certification is offered through HIMSS which “Demonstrates you meet an international standard of professional knowledge and competence in healthcare information and management systems”.&lt;/p&gt;
&lt;p&gt;There was no requirement for my job to get this certification, I just thought that it would be helpful for me if I better understood the &lt;strong&gt;Information and Management Systems&lt;/strong&gt; part of Healthcare.&lt;/p&gt;
&lt;p&gt;With not much more than an idea, I started on my journey to getting certification. I did some research to see what resources were available to me and found a Practice Exam, a Book and a multitude of other helpful study aids. I decided to start with the Practice Exam and see what I’d need after that.&lt;/p&gt;
&lt;p&gt;In early March I signed up for the Practice Exam. I found all sorts of reasons to put off taking the exam, but then I noticed that my Practice Exam had an expiration date in May. One Sunday, figure “what the hell, let’s just get this over with” I sat down at my &lt;a href="https://support.apple.com/kb/sp707?locale=en_US"&gt;iMac&lt;/a&gt; and started the exam.&lt;/p&gt;
&lt;p&gt;I really had no idea what to expect other than 100 questions. After about 20 minutes I very nearly stopped. Not because the exam was super difficult, but because I had picked a bad time to take a practice exam. My head wasn’t really in the game, and my heart just wanted to go watch baseball.&lt;/p&gt;
&lt;p&gt;But I powered on through. The practice exam was nice in that it would give you immediate feedback if you got the question right or wrong. It wouldn’t be like that on test day, but it was good to know where I stood as I went through this practice version.&lt;/p&gt;
&lt;p&gt;After 50 minutes I completed the exam and saw that I had a score of 70. I figured that wouldn’t be a passing score, but then saw that the cutoff point was 68. So I &lt;em&gt;passed&lt;/em&gt; the practice test.&lt;/p&gt;
&lt;p&gt;OK, now it was time to get serious. Without any studying or preparation (other than the 8+ years in HIT) I was able to pass what is arguably a difficult exam.&lt;/p&gt;
&lt;p&gt;The next thing to do was to sign up for the real thing ..&lt;/p&gt;</content><category term="Professional Development"></category><category term="CPHIMS"></category><category term="HIT"></category></entry><entry><title>Updating my LinkedIn Profile</title><link href="https://www.ryancheley.com/updating-my-linkedin-profile.html" rel="alternate"></link><published>2017-03-13T04:00:00+01:00</published><updated>2017-03-13T04:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-03-13:/updating-my-linkedin-profile.html</id><summary type="html">&lt;p&gt;I've been trying to update my &lt;a href="https://www.linkedin.com/in/ryan-cheley/"&gt;LinkedIn Profile&lt;/a&gt; for a couple of weeks now (maybe a couple of months) and I keep hitting a roadblock. Not really sure why ...&lt;/p&gt;
&lt;p&gt;Since being 'promoted' from Director of NextGen Support Services to Director of Business Informatics, I've wanted to update the Profile but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been trying to update my &lt;a href="https://www.linkedin.com/in/ryan-cheley/"&gt;LinkedIn Profile&lt;/a&gt; for a couple of weeks now (maybe a couple of months) and I keep hitting a roadblock. Not really sure why ...&lt;/p&gt;
&lt;p&gt;Since being 'promoted' from Director of NextGen Support Services to Director of Business Informatics, I've wanted to update the Profile but haven't really had the 'time' to do it.&lt;/p&gt;
&lt;p&gt;So a couple of weeks ago I decided that start in earnest on the update. I've done more research than I can stand but I don't feel like I'm any closer to an update that I like.&lt;/p&gt;
&lt;p&gt;I think part of the problem is that I don't really know* ~~what~~ who the summary is for. Is it for me or for other people. People that are reading my summary (for whatever reason people read LinkedIn summaries)?&lt;/p&gt;
&lt;p&gt;If it's for me then I guess I'd write about the things that I really like to do, like data analysis and bits of programming to get to solutions to hard problems. If it's for other people then I guess I need to be genuine about who I am while also 'selling' myself to the prospective others.&lt;/p&gt;
&lt;p&gt;Maybe the best thing is to write it for me and then hope for the best. I kind of like that. Besides, if someone else reads it and they don't like it then that's a good indication about how well I would get along with that person in a professional setting anyway and might be best to avoid them.&lt;/p&gt;
&lt;p&gt;And if they do like it then all the better that they will also like me ... the real me.&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>HIMSS Recap</title><link href="https://www.ryancheley.com/himss-recap.html" rel="alternate"></link><published>2017-02-25T19:10:00+01:00</published><updated>2017-02-25T19:10:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-02-25:/himss-recap.html</id><summary type="html">&lt;p&gt;I've gone through all of my notes, reviewed all of the presentations and am feeling really good about my experience at HIMSS.&lt;/p&gt;
&lt;p&gt;Takeaways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We need to get ADT enabled for the local hospitals&lt;/li&gt;
&lt;li&gt;We need to have a governance system set up for a variety of things, including data, reporting …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I've gone through all of my notes, reviewed all of the presentations and am feeling really good about my experience at HIMSS.&lt;/p&gt;
&lt;p&gt;Takeaways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We need to get ADT enabled for the local hospitals&lt;/li&gt;
&lt;li&gt;We need to have a governance system set up for a variety of things, including data, reporting, and IT based projects&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below are the educational sessions (in no particular order) I attended and my impressions. Mostly a collection of &lt;em&gt;interesting&lt;/em&gt; facts (I've left the Calls to Action for my to do list).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Choosing the Right IT Projects to Deliver Strategic Value&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/thomas-selva-49207351"&gt;Tom Selva&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/sethjeremykatz"&gt;Seth Katz&lt;/a&gt; they really hit home the idea that there is a relationship between culture and governance. The culture of the organization has to be ready to accept the accountability that will come with governance. They also indicated that process is the most important part of governance. Without process you &lt;strong&gt;CANNOT&lt;/strong&gt; have governance.&lt;/p&gt;
&lt;p&gt;In addition to great advice, they had great implementation strategies including the idea of requiring all IT projects to have an elevator pitch and a more formal 10 minute presentation on why the project should be done and in what way it aligned with the strategy of the organization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Semantic data analysis for interoperability&lt;/strong&gt; presented by &lt;a href="http://iems.ucf.edu/mshse"&gt;Richard E. Biehl, Ph.D.&lt;/a&gt; showed me that there was an aspect of data that I hadn't ever had to think about. What to do when multiple systems are brought together and define the same word or concept in different ways. Specifically,, "Semantic challenge is the idea of a shared meaning or the data that is shared". The example on relating the concept of a migraine from ICD to SNOMED and how they can result in mutually exclusive definitions of the same 'idea' was something I hadn't ever really considered before.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Next Generation IT Governance: Fully-Integrated and Operationally-Led&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/ryan-bosch-md-46b921"&gt;Ryan Bosch, MD, MBAEHS&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/fran-turisco-015096a"&gt;Fran Turisco, MBA&lt;/a&gt; hit home the idea of &lt;strong&gt;Begin with the End in mind&lt;/strong&gt;. If you know where you're going it's much easier to know &lt;em&gt;how&lt;/em&gt; to get there. This is something I've always instinctively felt, however, distilling it to this short, easy to remember statement was really powerful for me.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/206.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Developing a “Need-Based” Population Management System&lt;/strong&gt; presented by&lt;br&gt;
Rick Lang and &lt;a href="https://www.linkedin.com/in/tim-hediger-a1765"&gt;Tim Hediger&lt;/a&gt; hammered home the idea that "Collaboration and Partnering are KEY to success". Again, something that I &lt;em&gt;know&lt;/em&gt; but it's always nice to hear it out loud.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/124_0.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Machine Intelligence for Reducing Clinical Variation&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/rowland-todd-stewart-md-7a85b6b"&gt;Todd Stewart, MD&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/francis-campion-b3a8047"&gt;F.X. Campion, MD, FACP&lt;/a&gt; was one of the more technical sessions I attended. They spoke about how Artificial Intelligence and Machine Learning don't replace normal analysis, but instead allow us to focus on what hypothesis we should test in the first place. They also introduced the idea (to me anyway) that data has &lt;em&gt;shape&lt;/em&gt; and that &lt;em&gt;shape&lt;/em&gt; can be analyzed to lead to insight. They also spoke about 'Topological Data Analysis' which is something I want to learn more about.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/110.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Driving Patient Engagement through mobile care management&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/susan-beaton-7848071b"&gt;Susan Beaton&lt;/a&gt; spoke about using &lt;em&gt;Health Coaches&lt;/em&gt; to help patients learn to implement parts of the care plan. They also spoke about how "Mobile engagement can lead to increased feeling of control for members" These are aspects that I'd like to see my organization look to implement in the coming months / years&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/97_0.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expanding Real time notifications for care transitions&lt;/strong&gt; presented by&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/elaine-fontaine-3b68144"&gt;Elaine Fontaine&lt;/a&gt; spoke about using demographic data to determine the best discharge plan for the patient. In one of the presentations I saw (Connecticut Hospitals Drive Policy with Geospatial Analysis presented by Pat Charmel) the presenter had indicated that as much as 60% of healthcare costs are determined by demographics. If we can keep this in mind we can help control healthcare costs much more effectively, but it lead me to ask:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how much do we know&lt;/li&gt;
&lt;li&gt;how much can we know&lt;/li&gt;
&lt;li&gt;what aspects of privacy do we need to think about before embarking on such a path?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/82_0.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your Turn: Data Quality and Integrity&lt;/strong&gt; which was more of an interactive session when asked the question "What would a National Patient Identifier be useful for?" most attendees in audience felt that it would help with information sharing&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Predictive Analytics: A Foundation for Care Management&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/jessica-taylor-56039864"&gt;Jessica Taylor, RN&lt;/a&gt; and Amber Sloat, RN I saw that while California has been thinking about and preparing for value based care for some time, the rest of the country is just coming around to the idea. The hospital that these Nurses work for are doing some very innovative things, but they're things that we've been doing for years. The one thing they did seem to have that we don't is an active HIE that helps to keep track of patients in near real time. I would love to have! One of the benefits of a smaller state perhaps (they were from Maine)?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/44.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A model of data maturity to support predictive analytics&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/daniel-o-malley-49995b8"&gt;Daniel O’Malley, MS&lt;/a&gt; was full of lots of charts and diagrams on what the University of Virginia was doing, but it was short on how they got there. I would have liked to have seen more information on roadblocks that they encountered during each of the stages of the maturity. That being said, because the presentation has the charts and diagrams, I feel like I'll be able to get something out of the talk that will help back at work.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/19.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Emerging Impacts on Artificial Intelligence on Healthcare IT&lt;/strong&gt; presented by &lt;a href="https://www.linkedin.com/in/jigolden"&gt;James Golden, Ph.D.&lt;/a&gt; and Christopher Ross, MBA. They had a statistic that 30% of all data in the world is healthcare data! That was simply amazing to me. They also had data showing that medical knowledge doubles every THREE years. This means that between the time you started medical school and the time you were a full fledged doctor the amount of medical knowledge could have increased 4 to 8 fold! How can anyone keep up with that kind of knowledge growth? The simple answer is that they can't and that's why AI and ML are so important for medicine. But equally important is how the AI/ML are trained.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.himssconference.org/sites/himssconference/files/pdf/300_0.pdf"&gt;Link to HIMSS Presentation&lt;/a&gt;&lt;/p&gt;</content><category term="Conferences"></category></entry><entry><title>HIMSS review</title><link href="https://www.ryancheley.com/himss-review.html" rel="alternate"></link><published>2017-02-23T04:19:00+01:00</published><updated>2017-02-23T04:19:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-02-23:/himss-review.html</id><summary type="html">&lt;p&gt;I had meant to do a write up of each day of my HIMSS experience, but time got away from me, as did the time zone change, and here I am at the end of HIMSS experience with only my day 0 notes down on &lt;em&gt;paper&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Day 1 started with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had meant to do a write up of each day of my HIMSS experience, but time got away from me, as did the time zone change, and here I am at the end of HIMSS experience with only my day 0 notes down on &lt;em&gt;paper&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Day 1 started with a rousing Keynote by Ginni Rometty, the CEO of IBM. The things that struck me most about her keynote were here sense of optimism about the future sprinkled with some caution about AI, Machine Learning and Big Data. She reminded us that the computers that we are using for our analyst is are tools to help, not replace, people and that it is incumbent upon us, the leaders of HIT, to keep in the front of our minds how these BIG Data AI/ML algorithms were trained. As the old saying goes, "Garbage In, Garbage Out"&lt;/p&gt;
&lt;p&gt;I also was able to record a bit of &lt;a href="https://www.dropbox.com/s/ou0kgdfnwyrxdsa/Ginni%20Rometty.m4a?dl=1"&gt;her keynote speech&lt;/a&gt; just in case I need to find and listen to it later.&lt;/p&gt;
&lt;p&gt;I tweeted a couple of times during the keynote (and even got some likes and retweets ... not something I'm used to getting)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Transparency in the Era of Cognition with the help of @ibmwatson #himss17&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Artificial intelligence is out of its winter ... I sure hope so, but time will tell #himss17&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Integration in workflow is the key to adoption #himss17&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Don't let others define you. Great words from @GinniRometty #himss17&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Growth and comfort never coexist. Another great gem from @GinniRometty #himss17&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I spent almost all of my time on day 1 in educational sessions. One things that I noticed from my first class was just how &lt;em&gt;FULL&lt;/em&gt; it was 15 minutes before the session even started!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;The Emerging Impacts of AI on HIT was full 15 minutes before the session started! Something tells me lots of ppl interested in AI #HIMSS17&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes the session title were a bit misleading, but eventually most of them would come around. A class with a title of &lt;em&gt;Connecticut Hospitals Drive Policy with Geospatial Analysis&lt;/em&gt; was more about the Connecticut Hospitals and less about the Geospatial Analysis, but in the end I was what I was hoping to see which was people using Geospatial Analysis to help identify, and perhaps risk stratify patients to give the best care possible.&lt;/p&gt;
&lt;p&gt;My tweet when the class was over:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Great talk on #geospatial analysis. So many ideas floating through my head now on potential actions and analysis #HIMSS17&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I ended my HIMSS 2017 experience on a high note with a great session titled &lt;em&gt;Choosing the Right IT Projects To Deliver Strategic Value&lt;/em&gt;. I'm still processing everything that came out of that session, but it left me feeling very positive about the future. It was nice to have the same, or at least very similar, feeling of optimism at the end of HIMSS as I had at the beginning after Mrs. Rometty's Keynote.&lt;/p&gt;
&lt;p&gt;I'll be writing up my notes and linking to the presentations later this week (maybe whilst I'm flying back home to California tomorrow).&lt;/p&gt;
&lt;p&gt;This is a conference I am overwhelmed by but am glad I am coming to.&lt;/p&gt;
&lt;p&gt;While it's fresh in my mind, strategies for next year:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pick 1 - 3 strategic challenges you want to solve. Then identify 10 - 20 vendors that can help solve that problem. Talk to them, schedule appointments with them. Get more information than you know what to do with&lt;/li&gt;
&lt;li&gt;Work on being a presenter. It will help check off that 'Speak in front of large groups of people' item on your &lt;em&gt;Bucket List&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Conferences"></category><category term="HIMSS17"></category></entry><entry><title>HIMSS 2017 - Day 0</title><link href="https://www.ryancheley.com/himss-2017-day-0.html" rel="alternate"></link><published>2017-02-19T02:16:00+01:00</published><updated>2017-02-19T02:16:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-02-19:/himss-2017-day-0.html</id><summary type="html">&lt;p&gt;I'm in Orlando for &lt;a href="http://www.himssconference.org"&gt;HIMSS17&lt;/a&gt; and and pretty pumped for my day one session tomorrow which is titled: Business Intelligence Best Practices: A Strong Foundation for Organizational Success.&lt;/p&gt;
&lt;p&gt;Conferences are always a bit overwhelming, but this one is more overwhelming than most. More than 40,000 people all gathered in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm in Orlando for &lt;a href="http://www.himssconference.org"&gt;HIMSS17&lt;/a&gt; and and pretty pumped for my day one session tomorrow which is titled: Business Intelligence Best Practices: A Strong Foundation for Organizational Success.&lt;/p&gt;
&lt;p&gt;Conferences are always a bit overwhelming, but this one is more overwhelming than most. More than 40,000 people all gathered in one convention center to discuss Healthcare Tech. Kind of awesome and scary!&lt;/p&gt;
&lt;p&gt;I'm looking forward to visiting some booths in the exhibition hall, and wandering around and stumbling onto some great new things / ideas.&lt;/p&gt;
&lt;p&gt;I'm going to write up my impressions of the days events, hopefully including notes, and links to tweets because the tweets will be raw and most uncensored impressions of what I'm seeing / hearing.&lt;/p&gt;
&lt;p&gt;Here's the HIMSS 2017!&lt;/p&gt;</content><category term="Conferences"></category><category term="HIMSS17"></category></entry><entry><title>Making Better Meetings ... maybe</title><link href="https://www.ryancheley.com/making-better-meetings-maybe.html" rel="alternate"></link><published>2017-02-04T13:38:00+01:00</published><updated>2017-02-04T13:38:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-02-04:/making-better-meetings-maybe.html</id><summary type="html">&lt;p&gt;To say that I attend a lot of meetings is a bit of an understatement. However, as a manager that is part of my job and I accept that it is something I need to do.&lt;/p&gt;
&lt;p&gt;What I have been trying to do at my office is lead more effective …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To say that I attend a lot of meetings is a bit of an understatement. However, as a manager that is part of my job and I accept that it is something I need to do.&lt;/p&gt;
&lt;p&gt;What I have been trying to do at my office is lead more effective meetings, but also to encourage my colleagues to have more effective meetings as well.&lt;/p&gt;
&lt;p&gt;It's been challenging as the organization I work for is large and all I can do is lead by example with the meetings that I am in.&lt;/p&gt;
&lt;p&gt;Until now ... maybe&lt;/p&gt;
&lt;p&gt;I read an article on &lt;a href="https://www.linkedin.com"&gt;LinkedIn&lt;/a&gt; titled &lt;a href="https://www.linkedin.com/pulse/tired-wasting-time-meetings-try-oisin-grogan"&gt;Tired of wasting time in meetings? Try this&lt;/a&gt; and there were several suggestions for better meetings some of which I already knew:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Define the purpose of the meeting&lt;/li&gt;
&lt;li&gt;Define the outcome of the meeting&lt;/li&gt;
&lt;li&gt;Have a timed agenda and someone in charge&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And others that I didn't:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Facts - not opinions!&lt;/li&gt;
&lt;li&gt;Keep people on-point. (Only talk about matters relating to their job)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I think that number 4 is a key idea for any meeting (that isn't a brainstorming meeting) but number 5 is a bit too much. Keeping people on point is an important aspect to any meeeting, but only allowing people to talk about matters related to their job ... what is the dividing line between 'my job' and 'not my job'?&lt;/p&gt;
&lt;p&gt;This seems like it wouldn't actually have the intended outcome. I think people who are already quite will be encouraged to stay quite as the topic isn't related to their job (even if it might be) and those that talk too much already will assume that everything is related to their job so they will still contribute inappropriately.&lt;/p&gt;
&lt;p&gt;I think that point 5 is much better when restated as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Keep people on-point, only talk about the current agenda item&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The article did include a nice diagram that you can download (need to provide an email address first).&lt;/p&gt;</content><category term="Musings"></category><category term="Meetings"></category></entry><entry><title>Success through failure</title><link href="https://www.ryancheley.com/success-through-failure.html" rel="alternate"></link><published>2017-01-28T21:33:00+01:00</published><updated>2017-01-28T21:33:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-01-28:/success-through-failure.html</id><summary type="html">&lt;p&gt;One of my goals for 2017 has been to read more. According to &lt;a href="https://www.getpocket.com"&gt;Pocket&lt;/a&gt; I have been in the top 1% of 'pockters' in both 2015 and 2016, but even if that's true (and I'm not entirely convinced it isn't just marketing &lt;strong&gt;stuff&lt;/strong&gt;) what I'm reading are web articles, some …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of my goals for 2017 has been to read more. According to &lt;a href="https://www.getpocket.com"&gt;Pocket&lt;/a&gt; I have been in the top 1% of 'pockters' in both 2015 and 2016, but even if that's true (and I'm not entirely convinced it isn't just marketing &lt;strong&gt;stuff&lt;/strong&gt;) what I'm reading are web articles, some long form, but mostly short form articles.&lt;/p&gt;
&lt;p&gt;This isn't the kind of reading I want to focus on in 2017. I've got a list of (mostly) science fiction books I'm planning on reading this year.&lt;/p&gt;
&lt;p&gt;I'm also listening to audio books through &lt;a href="https://www.audible.com"&gt;Audible&lt;/a&gt; during my commute to work. Those books are a little more varied in their content so far, and exclusively non-fiction.&lt;/p&gt;
&lt;p&gt;But why does this matter? As I &lt;a href="https://www.ryancheley.com/blog/2017/1/26/struggle-determines-success"&gt;do&lt;/a&gt; I was reading an article on &lt;a href="https://en.m.wikipedia.org/wiki/Isaac_Asimovs"&gt;Isaac Asimov&lt;/a&gt; entitled &lt;a href="https://medium.com/personal-growth/isaac-asimov-how-to-never-run-out-of-ideas-again-b7bf8e09cc91#.tbua3lk49"&gt;Isaac Asimov: How to Never Run Out of Ideas Again – Personal Growth – Medium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From the article 4 points really struck me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read widely. Follow your curiosity. Never stop investing in yourself.&lt;/li&gt;
&lt;li&gt;Diversity is insurance of the mind.&lt;/li&gt;
&lt;li&gt;We fail. We struggle. And that is why we succeed.&lt;/li&gt;
&lt;li&gt;After all, never having ideas means never having to fail.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although I had planned on reading more &lt;strong&gt;before&lt;/strong&gt; having read the article, after reading it I'm even more dedicated to making sure I read as much as I can this year.&lt;/p&gt;
&lt;p&gt;The last 2 points are also something I've been trying to work on. One of the reasons for this site is so I can showcase the ways in which I &lt;em&gt;fail&lt;/em&gt; and what I am able to learn from those 'failures'.&lt;/p&gt;
&lt;p&gt;The ideas that failure and struggle lead directly to success is something I'd never really connected, but I can see the connection between them now.&lt;/p&gt;
&lt;p&gt;I like the idea that Isaac Asimov failed at things, but that they didn't prevent him from accomplishing those (and other) things.&lt;/p&gt;
&lt;p&gt;This article really helped crystallize an idea that I've had a hard time putting into words ...&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Failing only happens when you don't try. Trying to do a thing and not achieving that thing is not failing, it's simply a different result than you expected. The success is in the trying.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't know if these are the &lt;em&gt;best&lt;/em&gt; words, but as I'm learning, the success is in the trying, not in the perfection of the result.&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>Struggle determines success</title><link href="https://www.ryancheley.com/struggle-determines-success.html" rel="alternate"></link><published>2017-01-27T20:00:00+01:00</published><updated>2017-01-27T20:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-01-27:/struggle-determines-success.html</id><summary type="html">&lt;p&gt;On Sundays mornings I wake up pretty early, make myself some coffee and read through all of the interesting articles I came across during the week (usually from &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Last weekend I came across an article, &lt;a href="https://getpocket.com/explore/item/you-probably-know-to-ask-yourself-what-do-i-want-here-s-a-way-better-question-1149529539"&gt;You probably know to ask yourself, “What do I want?” Here’s a way …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;On Sundays mornings I wake up pretty early, make myself some coffee and read through all of the interesting articles I came across during the week (usually from &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Last weekend I came across an article, &lt;a href="https://getpocket.com/explore/item/you-probably-know-to-ask-yourself-what-do-i-want-here-s-a-way-better-question-1149529539"&gt;You probably know to ask yourself, “What do I want?” Here’s a way better question&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was struck by several passages in the article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you find yourself wanting something month after month, year after year, yet nothing happens and you never come any closer to it, then maybe what you actually want is a fantasy, an idealization, an image and a false promise. Maybe what you want isn’t what you want, you just enjoy wanting. Maybe you don’t actually want it at all.&lt;/p&gt;
&lt;p&gt;I wanted the reward and not the struggle. I wanted the result and not the process. I was in love not with the fight but only the victory. And life doesn’t work that way.&lt;/p&gt;
&lt;p&gt;This is the most simple and basic component of life: our struggles determine our successes. So choose your struggles wisely, my friend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I was younger I wanted to be many things, a Physicist, an Archtect, an Engineer, a Professor ... but none of those things ever got any closer. I'd be really engaged in the ideas of one of these for weeks or months at a time.&lt;/p&gt;
&lt;p&gt;I remember being so enamoured with the idea of Civil Engineering I convinced my parents to get me a drafting board that I had in my room and I used to 'design' a prototype of a Martian Habitat.&lt;/p&gt;
&lt;p&gt;But, as soon as I got bored I would move onto something else. From Physics to Archtecture to Engineering and back to Physics. I would always stop when it either got too hard &lt;strong&gt;OR&lt;/strong&gt; something else looked more interesting.&lt;/p&gt;
&lt;p&gt;I was always awed by my peers that could stay laser focused on a single hobby or dream job and was amazed at the amount of sacrifice they would be willing to make in order to achieve their goals.&lt;/p&gt;
&lt;p&gt;It wasn't until I got to college when I started to see what I needed to sacrifice in order to get ahead.&lt;/p&gt;
&lt;p&gt;Parties on the weekend. Not for me ... I had a full time job and was a full time student. I would hang with friends when I could, but I was mostly at the library studying, or at work studying or maybe getting a little bit of sleep.&lt;/p&gt;
&lt;p&gt;I suddenly became laser focused like the people I knew in high school. I had a single goal and that was to graduate and go onto graduate school so I could get a PhD in economics.&lt;/p&gt;
&lt;p&gt;The PhD didn't happen, and in the following years I felt like I did in high school ... becoming very interested in a 'thing' and then moving on from it because I'd get bored.&lt;/p&gt;
&lt;p&gt;Then I stumbled into the Healthcare Industry and it all came back. An ability to be laser focused on new and interesting things. Wanting (maybe needing) to learn everything I could about Healthcare.&lt;/p&gt;
&lt;p&gt;It's been more than 8 years since I started on my journey, and I've struggled every time I've started to learn a new aspect of the industry, or just an aspect of a new job that I had started.&lt;/p&gt;
&lt;p&gt;And that's when the final passage in the article really hit me like a ton of bricks:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the most simple and basic component of life: our struggles determine our successes. So choose your struggles wisely, my friend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It truly is the struggle that determines the success. I've struggled mightily while working in healthcare, but those struggles have lead to the most fulfilling and successful career I could have hoped for.&lt;/p&gt;</content><category term="Musings"></category><category term="Work"></category></entry><entry><title>Communication and Checklists</title><link href="https://www.ryancheley.com/communication-and-checklists.html" rel="alternate"></link><published>2017-01-14T20:00:00+01:00</published><updated>2017-01-14T20:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-01-14:/communication-and-checklists.html</id><summary type="html">&lt;p&gt;I've been thinking about communication ... a lot. How well people communicate (or don't communicate) is what drives nearly every problem, either at work or at home. Communication is essential to a feeling of &lt;strong&gt;team&lt;/strong&gt; which can help to avoid communication problems in the first place. Once you feel like you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been thinking about communication ... a lot. How well people communicate (or don't communicate) is what drives nearly every problem, either at work or at home. Communication is essential to a feeling of &lt;strong&gt;team&lt;/strong&gt; which can help to avoid communication problems in the first place. Once you feel like you are on a team, I think it's easier to engage in communication because you feel more comfortable asking questions, posing challenges when needed, and generally being happier with your surroundings.&lt;/p&gt;
&lt;p&gt;I'm almost finished with &lt;a href="https://en.wikipedia.org/wiki/Atul_Gawande"&gt;Atul Gawande's&lt;/a&gt; book &lt;a href="https://en.m.wikipedia.org/wiki/The_Checklist_Manifesto"&gt;The Checklist Manifesto&lt;/a&gt; and what struck me the most about it was the fact that checklists used by pilots, construction crews, and surgeons all had one thing in common. They &lt;strong&gt;forced&lt;/strong&gt; communication amongst disparate people helping to start the formation of bonds that lead to a team.&lt;/p&gt;
&lt;p&gt;Whether constructing a 32 floor high rise building, flying a 747 or performing open heart surgery, these are all complex problems and they all have checklists.&lt;/p&gt;
&lt;p&gt;The use of these checklists help the practitioners focus on what's important by using the checklist to remind them of what needs to be done but is easily forgotten.&lt;/p&gt;
&lt;p&gt;All of this is interesting, but you can get to a 'so what' or 'and ...' point.&lt;/p&gt;
&lt;p&gt;While reading &lt;a href="http://www.healthdatamanagement.com/news/data-silos-holding-back-healthcare-breakthroughs-outcomes?brief=00000152-14ad-d1cc-a5fa-7cff19540000"&gt;Data silos holding back healthcare breakthroughs, outcomes&lt;/a&gt; this line caught my attention:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the MIT researchers contend that the health data divide can be narrowed by creating a culture of collaboration between clinicians and data scientists&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's the 'so what' point of all of this. Using &lt;strong&gt;Big Data&lt;/strong&gt; to help patients should be what the healthcare industry is focusing on. But this is difficult because Clinicians and Data Scientists don't always have the vocabulary nor the incentives to collaborate in a meaningful way that leads to improved patient outcomes.&lt;/p&gt;
&lt;p&gt;Could check lists for implementing &lt;strong&gt;Big Data&lt;/strong&gt; at various types and sizes of organizations help? I think so, because at the very least, it could start the neccesary conversations needed to engender a sense of &lt;strong&gt;team&lt;/strong&gt; between Clinicians and Data Scientists which can be sorely lacking in many institutions.&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>Big Data and Healthcare - thoughts</title><link href="https://www.ryancheley.com/big-data-and-healthcare-thoughts.html" rel="alternate"></link><published>2017-01-07T20:16:00+01:00</published><updated>2017-01-07T20:16:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2017-01-07:/big-data-and-healthcare-thoughts.html</id><summary type="html">&lt;p&gt;&lt;a href="http://healthitanalytics.com/news/healthcare-big-data-success-starts-with-the-right-questions"&gt;Healthcare Big Data Success Starts with the Right Questions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The last major piece of the puzzle is the ability to pick projects that can bear fruit quickly, Ibrahim added, in order to jumpstart enthusiasm and secure widespread support.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="http://healthitanalytics.com/news/healthcare-big-data-success-starts-with-the-right-questions"&gt;Healthcare Big Data Success Starts with the Right Questions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Moving from measurement …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://healthitanalytics.com/news/healthcare-big-data-success-starts-with-the-right-questions"&gt;Healthcare Big Data Success Starts with the Right Questions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The last major piece of the puzzle is the ability to pick projects that can bear fruit quickly, Ibrahim added, in order to jumpstart enthusiasm and secure widespread support.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="http://healthitanalytics.com/news/healthcare-big-data-success-starts-with-the-right-questions"&gt;Healthcare Big Data Success Starts with the Right Questions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Moving from measurement to management – and from management to improvement – was the next challenge, he added. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="http://healthitanalytics.com/news/healthcare-big-data-success-starts-with-the-right-questions"&gt;Healthcare Big Data Success Starts with the Right Questions&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Each question builds upon the previous answer to create a comprehensive portrait of how data flows throughout a segment of the organization.  Ibrahim paraphrased the survey like so:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;• Do we have the data and analytics to connect to the important organizations in each of these three domains?&lt;/p&gt;
&lt;p&gt;• If we have the data, is it integrated in a meaningful way?  Can we look at that data and tell meaningful stories about what is happening, where it’s happening, and why it’s happening?&lt;/p&gt;
&lt;p&gt;• Even if we have the data and it’s integrated meaningfully and we can start to tell that story, do we apply some statistical methodology to the data where we aggregate and report on it?&lt;/p&gt;
&lt;p&gt;• If we have the data, and it can tell us a story, and we use good analytics methodology, are we able to present it in an understandable way to all our stakeholders, from the front-line clinician all the way up to the chief executive?   &lt;/p&gt;
&lt;p&gt;• Are the analytics really meaningful?  Does the information help to make decisions?  Is it rich enough that we can really figure out why something is happening?&lt;/p&gt;
&lt;p&gt;• Lastly, even if we have accomplished all these other goals, can we deliver the information in a timely fashion to the people who need this data to do their jobs?&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>Presenting Data - Referee Crew Calls in the NFL</title><link href="https://www.ryancheley.com/presenting-data-referee-crew-calls-in-the-nfl.html" rel="alternate"></link><published>2016-12-25T20:00:00+01:00</published><updated>2016-12-25T20:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-12-25:/presenting-data-referee-crew-calls-in-the-nfl.html</id><summary type="html">&lt;p&gt;One of the great things about computers is their ability to take tabular data and turn them into pictures that are easier to interpret. I'm always amazed when given the opportunity to show data as a picture, more people don't jump at the chance.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href="http://www.espn.com/blog/nflnation/post/_/id/225804/aaron-rodgers-could-get-some-help-from-referee-jeff-triplette"&gt;this piece on ESPN …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the great things about computers is their ability to take tabular data and turn them into pictures that are easier to interpret. I'm always amazed when given the opportunity to show data as a picture, more people don't jump at the chance.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href="http://www.espn.com/blog/nflnation/post/_/id/225804/aaron-rodgers-could-get-some-help-from-referee-jeff-triplette"&gt;this piece on ESPN regarding the difference in officiating crews and their calls&lt;/a&gt; has some great data in it regarding how different officiating crews call games.&lt;/p&gt;
&lt;p&gt;One thing I find a bit disconcerting is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;~~One of the rows is missing data so that row looks 'odd' in the context of the story and makes it look like the writer missed a big thing ... they didn't~~ (it's since been fixed)&lt;/li&gt;
&lt;li&gt;This tabular format is just begging to be displayed as a picture.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Perhaps the issue here is that the author didn't know how to best visualize the data to make his story, but I'm going to help him out.&lt;/p&gt;
&lt;p&gt;If we start from the underlying premise that not all officiating crews call games in the same way, we want to see in what ways they differ.&lt;/p&gt;
&lt;p&gt;The data below is a reproduction of the table from the article:&lt;/p&gt;
&lt;p&gt;REFEREE              DEF. OFFSIDE   ENCROACH   FALSE START   NEUTRAL ZONE   TOTAL&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Triplette, Jeff           39           2           34             6          81
  Anderson, Walt            12           2           39             10         63
  Blakeman, Clete           13           2           41             7          63
  Hussey, John              10           3           42             3          58
  Cheffers, Cartlon         22           0           31             3          56
  Corrente, Tony            14           1           31             8          54
  Steratore, Gene           19           1           29             5          54
  Torbert, Ronald           9            4           31             7          51
  Allen, Brad               15           1           28             6          50
  McAulay, Terry            10           4           23             12         49
  Vinovich, Bill            8            7           29             5          49
  Morelli, Peter            12           3           24             9          48
  Boger, Jerome             11           3           27             6          47
  Wrolstad, Craig           9            1           31             5          46
  Hochuli, Ed               5            2           33             4          44
  Coleman, Walt             9            2           25             4          40
  Parry, John               7            5           20             6          38&lt;/p&gt;
&lt;p&gt;The author points out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Jeff Triplette's crew has called a combined 81 such penalties -- 18 more than the next-highest crew and more than twice the amount of two others&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author goes on to talk about his interview with &lt;a href="https://en.wikipedia.org/wiki/Mike_Pereira"&gt;Mike Pereira&lt;/a&gt; (who happens to be ~~pimping~~ promoting his new book).&lt;/p&gt;
&lt;p&gt;While the table above is &lt;em&gt;helpful&lt;/em&gt; it's not an image that you can look at and ask, "Man, what the heck is going on?" There is a visceral aspect to it that says, something is wrong here ... but I can't &lt;strong&gt;really&lt;/strong&gt; be sure about what it is.&lt;/p&gt;
&lt;p&gt;Let's sum up the defensive penalties (Defensive Offsides, Encroachment, and Neutral Zone Infractions) and see what the table looks like:&lt;/p&gt;
&lt;p&gt;REFEREE              DEF Total   OFF Total   TOTAL&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Triplette, Jeff         47          34        81
  Anderson, Walt          24          39        63
  Blakeman, Clete         22          41        63
  Hussey, John            16          42        58
  Cheffers, Cartlon       25          31        56
  Corrente, Tony          23          31        54
  Steratore, Gene         25          29        54
  Torbert, Ronald         20          31        51
  Allen, Brad             22          28        50
  McAulay, Terry          26          23        49
  Vinovich, Bill          20          29        49
  Morelli, Peter          24          24        48
  Boger, Jerome           20          27        47
  Wrolstad, Craig         15          31        46
  Hochuli, Ed             11          33        44
  Coleman, Walt           15          25        40
  Parry, John             18          20        38&lt;/p&gt;
&lt;p&gt;Now we can see what might actually be going on, but it's still a bit hard for those visual people. If we take this data and then generate a scatter plot we might have a picture to show us the issue. Something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-113" height="222" src="/images/uploads/2017/12/Officials-Crew-Calls-NFL-2016-300x222.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;The horizontal dashed blue lines represent the average defensive calls per crew while the vertical dashed blue line represents the average offensive calls per crew. The gray box represents the area containing plus/minus 2 standard deviations from the mean for both offensive and defensive penalty calls.&lt;/p&gt;
&lt;p&gt;Notice anything? Yeah, me too. Jeff Triplette's crew is so far out of range for defensive penalties it's like they're watching a different game, or reading from a different play book.&lt;/p&gt;
&lt;p&gt;What I'd really like to be able to do is this same analysis but on a game by game basis. I don't think this would really change the way that Jeff Triplette and his crew call games, but it may point out some other inconsistencies that are worth exploring.&lt;/p&gt;
&lt;p&gt;Code for this project can be found on my &lt;a href="https://github.com/miloardot/python-files/blob/master/Referees"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="data visualization"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>Rogue One - A Star Wars Story</title><link href="https://www.ryancheley.com/rogue-one-a-star-wars-story.html" rel="alternate"></link><published>2016-12-22T23:00:00+01:00</published><updated>2016-12-22T23:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-12-22:/rogue-one-a-star-wars-story.html</id><summary type="html">&lt;p&gt;Rogue One - A Star Wars Movie: My Thoughts&lt;/p&gt;
&lt;p&gt;Today I watched &lt;a href="https://en.m.wikipedia.org/wiki/Rogue_One"&gt;Rogue One&lt;/a&gt; and I wanted to jot down my thoughts while they were still fresh.&lt;/p&gt;
&lt;p&gt;First, what I didn't like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Rogue One Font at the beginning on the movie. There was just something about it that wasn't as …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Rogue One - A Star Wars Movie: My Thoughts&lt;/p&gt;
&lt;p&gt;Today I watched &lt;a href="https://en.m.wikipedia.org/wiki/Rogue_One"&gt;Rogue One&lt;/a&gt; and I wanted to jot down my thoughts while they were still fresh.&lt;/p&gt;
&lt;p&gt;First, what I didn't like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Rogue One Font at the beginning on the movie. There was just something about it that wasn't as strong as the Original Franchise&lt;/li&gt;
&lt;li&gt;The jumping around done at the beginning of the movie with the planet names (again, with a weak font).&lt;/li&gt;
&lt;li&gt;There were no &lt;a href="http://starwars.wikia.com/wiki/Bothan"&gt;Bonthans&lt;/a&gt; either dying or otherwise.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OK, not that's out of the way. What did I like:&lt;/p&gt;
&lt;p&gt;Every. Thing. Else.&lt;/p&gt;
&lt;p&gt;Jin's character had the depth needed to be a protagonist you would both believe and want to follow. I think the most surprising thing (maybe ... I still need to think about this) is that from a writing perspective you know &lt;strong&gt;ALL&lt;/strong&gt; of your characters are going to be throw away characters. They won't appear in Episodes 4-6, although the actions they take drive those movies.&lt;/p&gt;
&lt;p&gt;As I realized this, I realized that each lead character was going to die. It can't really be any other way. And while I was sad to see that premonition come to fruition, I was also glad that the writers did what the story called for. Make the story a one-off whose characters can't influence the canon in any way other then how they already had.&lt;/p&gt;
&lt;p&gt;Maybe I went into the movie with low expectations, or maybe it was just &lt;strong&gt;that&lt;/strong&gt; good. Either way, I would see this again and again and again.&lt;/p&gt;
&lt;p&gt;The story was strong, with dynamic characters. A mix of good and bad for the rebels (as it should be) and all bad, but with depth for the imperial characters.&lt;/p&gt;
&lt;p&gt;I liked this so much I have already pre-purchased it on &lt;a href="https://itun.es/us/mn6tgb"&gt;iTunes&lt;/a&gt;.&lt;/p&gt;</content><category term="Musings"></category></entry><entry><title>It's Science!</title><link href="https://www.ryancheley.com/its-science.html" rel="alternate"></link><published>2016-12-17T14:57:00+01:00</published><updated>2016-12-17T14:57:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-12-17:/its-science.html</id><summary type="html">&lt;p&gt;I have a 10 year old daughter in the fifth grade. She has participated in the Science Fair almost every year, but this year was different. This year was required participation.&lt;/p&gt;
&lt;p&gt;dun … dun … dun …&lt;/p&gt;
&lt;p&gt;She and her friend had a really interesting idea on what to do. They wanted to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a 10 year old daughter in the fifth grade. She has participated in the Science Fair almost every year, but this year was different. This year was required participation.&lt;/p&gt;
&lt;p&gt;dun … dun … dun …&lt;/p&gt;
&lt;p&gt;She and her friend had a really interesting idea on what to do. They wanted to ask the question, &lt;strong&gt;“Is Soap and Water the Best Cleaning Method?&lt;/strong&gt;”&lt;/p&gt;
&lt;p&gt;The two Scientists decided that they would test how well the following cleaning agents cleaned a white t-shirt (my white t-shirt actually) after it got dirty:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plain Water&lt;/li&gt;
&lt;li&gt;Soap and Water&lt;/li&gt;
&lt;li&gt;Milk&lt;/li&gt;
&lt;li&gt;Almond Milk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While working with them we experimented on how to make the process as scientific as possible. Our first attempt was to just take a picture of the Clean shirt, cut the shirt up and get it dirty. Then we’d try each cleaning agent to see how it went.&lt;/p&gt;
&lt;p&gt;It did not go well. It was immediately apparent that there would be no way to test the various cleaning methods efficacy.&lt;/p&gt;
&lt;p&gt;No problem. In our second trial we decided to approach it more scientifically.&lt;/p&gt;
&lt;p&gt;We would draw 12 equally sized squares on the shirt and take a picture:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-130" height="200" src="/images/uploads/2016/12/Clean-Shirt-Grid-small-300x200.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;We needed 12 squares because we had 4 cleaning methods and 3 trials that needed to be performed&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4 Cleaning Methods X 3 Trials = 12 Samples&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next, the Scientists would get the shirt dirty. We then cut out the squares so that we could test cleaning the samples.&lt;/p&gt;
&lt;p&gt;Here’s an outline of what the Scientists did to test their hypothesis:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Take a picture of each piece BEFORE they get dirty&lt;/li&gt;
&lt;li&gt;Get each sample dirty&lt;/li&gt;
&lt;li&gt;Take a picture of each dirty sample&lt;/li&gt;
&lt;li&gt;Clean each sample&lt;/li&gt;
&lt;li&gt;Take a picture of each cleaned sample&lt;/li&gt;
&lt;li&gt;Repeat for each trial&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the ‘Clean Each Sample’ step they placed 1/3 of a cup of the cleaning solution into a small Tupperware tub that could be sealed and &lt;em&gt;vigorously&lt;/em&gt; shook for 5 minutes. They had some tired arms at the end.&lt;/p&gt;
&lt;p&gt;Once we had performed the experiment we our &lt;strong&gt;raw&lt;/strong&gt; data:&lt;/p&gt;
&lt;h1&gt;Trial 1&lt;/h1&gt;
&lt;p&gt;Method           Start                                                                                                                                                             Dirty                                                                                                                                                             Cleaned&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Water            &lt;img alt="" class="alignnone size-medium wp-image-139" height="300" src="/images/uploads/2016/12/Trial1_Start_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-136" height="300" src="/images/uploads/2016/12/Trial1_Dirty_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-156" height="300" src="/images/uploads/2016/12/Trial1_Clean_Water-300x300.jpg" width="300"&gt;
  Soap And Water   &lt;img alt="" class="alignnone size-medium wp-image-134" height="300" src="/images/uploads/2016/12/Trial1_Start_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-133" height="300" src="/images/uploads/2016/12/Trial1_Dirty_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-135" height="300" src="/images/uploads/2016/12/Trial1_Clean_SoapAndWater-300x300.jpg" width="300"&gt;
  Milk             &lt;img alt="" class="alignnone size-medium wp-image-155" height="300" src="/images/uploads/2016/12/Trial1_Start_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-145" height="300" src="/images/uploads/2016/12/Trial1_Dirty_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-142" height="300" src="/images/uploads/2016/12/Trial1_Clean_Milk-300x300.jpg" width="300"&gt;
  Almond Milk      &lt;img alt="" class="alignnone size-medium wp-image-155" height="300" src="/images/uploads/2016/12/Trial1_Start_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-145" height="300" src="/images/uploads/2016/12/Trial1_Dirty_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-142" height="300" src="/images/uploads/2016/12/Trial1_Clean_Milk-300x300.jpg" width="300"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Trial 2&lt;/h1&gt;
&lt;p&gt;Method           Start                                                                                                                                                             Dirty                                                                                                                                                             Cleaned&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Water            &lt;img alt="" class="alignnone size-medium wp-image-153" height="300" src="/images/uploads/2016/12/Trial2_Start_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-147" height="300" src="/images/uploads/2016/12/Trial2_Dirty_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-154" height="300" src="/images/uploads/2016/12/Trial2_Clean_Water-300x300.jpg" width="300"&gt;
  Soap And Water   &lt;img alt="" class="alignnone size-medium wp-image-144" height="300" src="/images/uploads/2016/12/Trial2_Start_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-149" height="300" src="/images/uploads/2016/12/Trial2_Dirty_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-146" height="300" src="/images/uploads/2016/12/Trial2_Clean_SoapAndWater-300x300.jpg" width="300"&gt;
  Milk             &lt;img alt="" class="alignnone size-medium wp-image-164" height="300" src="/images/uploads/2016/12/Trial2_Start_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-152" height="300" src="/images/uploads/2016/12/Trial2_Dirty_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-150" height="300" src="/images/uploads/2016/12/Trial2_Clean_Milk-300x300.jpg" width="300"&gt;
  Almond Milk      &lt;img alt="" class="alignnone size-medium wp-image-143" height="300" src="/images/uploads/2016/12/Trial2_Start_AlmondMilk-300x300.jpg" width="300"&gt;     &lt;img alt="" class="alignnone size-medium wp-image-132" height="300" src="/images/uploads/2016/12/Trial2_Dirty_AlmondMilk-300x300.jpg" width="300"&gt;     &lt;img alt="" class="alignnone size-medium wp-image-165" height="300" src="/images/uploads/2016/12/Trial2_Clean_AlmondMilk-300x300.jpg" width="300"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Trial 3&lt;/h1&gt;
&lt;p&gt;Method           Start                                                                                                                                                             Dirty                                                                                                                                                             Cleaned&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Water            &lt;img alt="" class="alignnone size-medium wp-image-166" height="300" src="/images/uploads/2016/12/Trial3_Start_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-162" height="300" src="/images/uploads/2016/12/Trial3_Dirty_Water-300x300.jpg" width="300"&gt;          &lt;img alt="" class="alignnone size-medium wp-image-138" height="300" src="/images/uploads/2016/12/Trial3_Clean_Water-300x300.jpg" width="300"&gt;
  Soap And Water   &lt;img alt="" class="alignnone size-medium wp-image-158" height="300" src="/images/uploads/2016/12/Trial3_Start_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-163" height="300" src="/images/uploads/2016/12/Trial3_Dirty_SoapAndWater-300x300.jpg" width="300"&gt;   &lt;img alt="" class="alignnone size-medium wp-image-160" height="300" src="/images/uploads/2016/12/Trial3_Clean_SoapAndWater-300x300.jpg" width="300"&gt;
  Milk             &lt;img alt="" class="alignnone size-medium wp-image-141" height="300" src="/images/uploads/2016/12/Trial3_Start_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-161" height="300" src="/images/uploads/2016/12/Trial3_Dirty_Milk-300x300.jpg" width="300"&gt;           &lt;img alt="" class="alignnone size-medium wp-image-157" height="300" src="/images/uploads/2016/12/Trial3_Clean_Milk-300x300.jpg" width="300"&gt;
  Almond Milk      &lt;img alt="" class="alignnone size-medium wp-image-148" height="300" src="/images/uploads/2016/12/Trial3_Start_AlmondMilk-300x300.jpg" width="300"&gt;     &lt;img alt="" class="alignnone size-medium wp-image-137" height="300" src="/images/uploads/2016/12/Trial3_Dirty_AlmondMilk-300x300.jpg" width="300"&gt;     &lt;img alt="" class="alignnone size-medium wp-image-167" height="300" src="/images/uploads/2016/12/Trial3_Clean_AlmondMilk-300x300.jpg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;This is great and all, but now what? We can’t really use subjective measures to determine cleanliness and call it science!&lt;/p&gt;
&lt;p&gt;My daughter and her friend aren’t coders, but I did explain to them that we needed a more scientific way to determine cleanliness. I suggested that we use &lt;code&gt;python&lt;/code&gt; to examine the image and determine the brightness of the image.&lt;/p&gt;
&lt;p&gt;We could then use some math to compare the brightness.^&lt;a href="#fn:1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;Now, onto the code!&lt;/p&gt;
&lt;p&gt;OK, let’s import some libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ImageStat&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are 2 functions to determine &lt;code&gt;brightness&lt;/code&gt; that I found &lt;a href="http://stackoverflow.com/questions/3490727/what-are-some-methods-to-analyze-image-brightness-using-python"&gt;here&lt;/a&gt;. They were super useful for this project. As an aside, I love StackOverflow!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#&lt;span class="nv"&gt;Covert&lt;/span&gt; &lt;span class="nv"&gt;image&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;greyscale&lt;/span&gt;, &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;average&lt;/span&gt; &lt;span class="nv"&gt;pixel&lt;/span&gt; &lt;span class="nv"&gt;brightness&lt;/span&gt;.
&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;brightness01&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;im_file&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;:
   &lt;span class="nv"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Image&lt;/span&gt;.&lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;im_file&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;convert&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;L&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ImageStat&lt;/span&gt;.&lt;span class="nv"&gt;Stat&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;im&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;stat&lt;/span&gt;.&lt;span class="nv"&gt;mean&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]

#&lt;span class="nv"&gt;Covert&lt;/span&gt; &lt;span class="nv"&gt;image&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;greyscale&lt;/span&gt;, &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;RMS&lt;/span&gt; &lt;span class="nv"&gt;pixel&lt;/span&gt; &lt;span class="nv"&gt;brightness&lt;/span&gt;.
&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;brightness02&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;im_file&lt;/span&gt; &lt;span class="ss"&gt;)&lt;/span&gt;:
   &lt;span class="nv"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Image&lt;/span&gt;.&lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;im_file&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;convert&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;L&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="nv"&gt;stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ImageStat&lt;/span&gt;.&lt;span class="nv"&gt;Stat&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;im&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;stat&lt;/span&gt;.&lt;span class="nv"&gt;rms&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next block of code takes the images and processes them to get the return the brightness levels (both of them) and return them to a &lt;code&gt;DataFrame&lt;/code&gt; to be used to write to a &lt;code&gt;csv&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;I named the files in such a way so that I could automate this. It was a bit tedious (and I did have the scientists help) but they were struggling to understand why we were doing what we were doing. Turns out teaching CS concepts is harder than it looks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;img_brightness01&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;img_brightness02&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;trial&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;filename&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;glob&lt;/span&gt;.&lt;span class="nv"&gt;glob&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Dropbox/Abby/Science project 2016/cropped images/**/*&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;recursive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;img_brightness01&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;round&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;brightness01&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
    &lt;span class="nv"&gt;img_brightness02&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;round&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;brightness02&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;part&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="nv"&gt;trial&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;part&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;state&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;part&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;method&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;part&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.jpg&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;

&lt;span class="nv"&gt;dic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TrialNumber&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;trial&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SampleState&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;state&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;CleaningMethod&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;method&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BrightnessLevel01&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;img_brightness01&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BrightnessLevel02&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;img_brightness02&lt;/span&gt;}

&lt;span class="nv"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;pd&lt;/span&gt;.&lt;span class="nv"&gt;DataFrame&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dic&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I’m writing the output to a &lt;code&gt;csv&lt;/code&gt; file here so that the scientist will have their data to make their graphs. This is where my help with them ended.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#write to a csv file
results.to_csv(&amp;#39;/Users/Ryan/Dropbox/Abby/Science project 2016/results.csv&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Something I wanted to do though was to see what our options were in &lt;code&gt;python&lt;/code&gt; for creating graphs. Part of the reason this wasn’t included with the science project is that we were on a time crunch and it was easier for the Scientists to use &lt;a href="https://docs.google.com"&gt;Google Docs&lt;/a&gt; to create their charts, and part of it was that I didn’t want to cheat them out of creating the charts on their own.&lt;/p&gt;
&lt;p&gt;There is a formula below to determine a &lt;code&gt;score&lt;/code&gt; which is given by a normalized percentage that was used by them, but the graphing portion below I did after the project was turned in.&lt;/p&gt;
&lt;p&gt;Let’s get the setup out of the way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#Create Bar Charts
trials = [&amp;#39;Trial1&amp;#39;,&amp;#39;Trial2&amp;#39;,&amp;#39;Trial3&amp;#39;]

n_trials = len(trials)
index = np.arange(n_trials)
bar_width = 0.25
bar_buffer = 0.05
opacity = 0.4

graph_color = [&amp;#39;b&amp;#39;, &amp;#39;r&amp;#39;, &amp;#39;g&amp;#39;, &amp;#39;k&amp;#39;]
methods = [&amp;#39;Water&amp;#39;, &amp;#39;SoapAndWater&amp;#39;, &amp;#39;Milk&amp;#39;, &amp;#39;AlmondMilk&amp;#39;]

graph_data = []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s loop through each cleaning method and generate a list of scores (where one score is for one trial)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;singlemethod&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;methods&lt;/span&gt;:
    &lt;span class="nv"&gt;score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; []
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;trialnumber&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;trials&lt;/span&gt;:
        &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;results&lt;/span&gt;.&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;CleaningMethod&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;singlemethod&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TrialNumber&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;trialnumber&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SampleState&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Start&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;][[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BrightnessLevel01&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]]
        &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;.&lt;span class="nv"&gt;values&lt;/span&gt;.&lt;span class="nv"&gt;flatten&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
        &lt;span class="nv"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;results&lt;/span&gt;.&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;CleaningMethod&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;singlemethod&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TrialNumber&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;trialnumber&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SampleState&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Dirty&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;][[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BrightnessLevel01&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]]
        &lt;span class="nv"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;.&lt;span class="nv"&gt;values&lt;/span&gt;.&lt;span class="nv"&gt;flatten&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
        &lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;results&lt;/span&gt;.&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;CleaningMethod&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;singlemethod&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TrialNumber&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;trialnumber&lt;/span&gt;].&lt;span class="nv"&gt;loc&lt;/span&gt;[&lt;span class="nv"&gt;results&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SampleState&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Clean&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;][[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BrightnessLevel01&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]]
        &lt;span class="nv"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;.&lt;span class="nv"&gt;values&lt;/span&gt;.&lt;span class="nv"&gt;flatten&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
        &lt;span class="nv"&gt;scorepct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nv"&gt;float&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;d&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
        &lt;span class="nv"&gt;score&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;scorepct&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;graph_data&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;score&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This last section was what stumped me for the longest time. I had such a mental block converting from iterating over items in a list to item counts of a list. After much &lt;a href="https://www.google.com"&gt;Googling&lt;/a&gt; I was finally able to make the breakthrough I needed and found the idea of looping through a range and everything came together:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;graph_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bar_width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;graph_data&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bar_width&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;graph_color&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Trial Number&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axvline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;.025&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linestyle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;bar_width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;trials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yticks&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;.75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Brightness Percent Score&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Comparative Brightness Scores&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The final output of this code gives:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-169" height="212" src="/images/uploads/2016/12/Results_Graph-300x212.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;From the graph you can see the results are … inconclusive. I’m not sure what the heck happened in Trial 3 but the Scientists were able to make the samples dirtier. Ignoring &lt;code&gt;Trial 3&lt;/code&gt; there is no clear winner in either &lt;code&gt;Trial 1&lt;/code&gt; or &lt;code&gt;Trial 2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I think it would have been interesting to have 30 - 45 trials and tested this with a some statistics, but that’s just me wanting to show something to be statistically valid.&lt;/p&gt;
&lt;p&gt;I think the best part of all of this was the time I got to spend with my daughter and the thinking through the experiment. I think she and her friend learned a bit more about the scientific method (and hey, isn’t that what this type of thing is all about?).&lt;/p&gt;
&lt;p&gt;I was also really excited when her friend said, “Science is pretty cool” and then had a big smile on her face.&lt;/p&gt;
&lt;p&gt;They didn’t go onto district, or get a blue ribbon, but they won in that they learned how neat science can be.&lt;/p&gt;
&lt;p&gt;::: {.footnotes}&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;[The score is the ratio of how clean the cleaning method was able to get the sample compared to where it started, i.e. the ratio of the difference of the &lt;code&gt;cleaned&lt;/code&gt; sample and the &lt;code&gt;dirty&lt;/code&gt; sample to the difference of the &lt;code&gt;starting&lt;/code&gt; sample and the &lt;code&gt;dirty&lt;/code&gt; sample.&lt;a href="#fnref:1"&gt;↩&lt;/a&gt;]{#fn:1}
:::&lt;/li&gt;
&lt;/ol&gt;</content><category term="Musings"></category><category term="python"></category><category term="Science Fair"></category></entry><entry><title>Declaring Omnifocus Bankrupty</title><link href="https://www.ryancheley.com/declaring-omnifocus-bankrupty.html" rel="alternate"></link><published>2016-11-29T03:07:00+01:00</published><updated>2016-11-29T03:07:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-29:/declaring-omnifocus-bankrupty.html</id><summary type="html">&lt;p&gt;I've been an on-again, off-again user of the &lt;a href="http://gettingthingsdone.com"&gt;Getting Things Done&lt;/a&gt; methodology for several years now. I'm also a geek, so I indulge my inner geekiness and like to have 'tools' to help me with my hobbies / neuroses. Enter &lt;a href="https://www.omnigroup.com/omnifocus/"&gt;Omnifocus&lt;/a&gt; an amazing GTD application created by &lt;a href="https://www.omnigroup.com"&gt;The Omni Group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been an on-again, off-again user of the &lt;a href="http://gettingthingsdone.com"&gt;Getting Things Done&lt;/a&gt; methodology for several years now. I'm also a geek, so I indulge my inner geekiness and like to have 'tools' to help me with my hobbies / neuroses. Enter &lt;a href="https://www.omnigroup.com/omnifocus/"&gt;Omnifocus&lt;/a&gt; an amazing GTD application created by &lt;a href="https://www.omnigroup.com"&gt;The Omni Group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have always enjoyed how easy it is to sync between each of my devices using the Omni Sync Server so that my iPhone knows what changes I made on my iMac. It's pretty sweet, but lately I've gotten overwhelmed with the cruft in my Omnifocus database. So much so that I've actually stopped using OmniFocus as my GTD application of choice and have 'gone rogue' and am not using anything right now. Actually, I haven't used anything for several weeks now. It's starting to get to me.&lt;/p&gt;
&lt;p&gt;Tonight I decided, the hell with it. I'm ignoring my 'todo' list anyway, why now just declare 'OmniFocus / GTD bankruptcy' and start the whole darn thing over again.&lt;/p&gt;
&lt;p&gt;In order to make 'all my troubles go away' I found &lt;a href="https://support.omnigroup.com/omnifocus-reset-database/"&gt;this&lt;/a&gt; article on the &lt;a href="https://support.omnigroup.com/"&gt;OmniGroup's support forum&lt;/a&gt; ... which BTW is a great place for all things OmniFocus!&lt;/p&gt;
&lt;p&gt;using the instructions I found where the &lt;code&gt;ofocus&lt;/code&gt; file was located and changed it's name from this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-172" height="115" src="/images/uploads/2016/11/OmniFocus-Original-300x115.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-171" height="114" src="/images/uploads/2016/11/OmniFocus-Updated-300x114.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Then I just followed the steps 5 - 11 and magically all of my tasks were gone. Just. Like. That.&lt;/p&gt;
&lt;p&gt;Then I had to update my iOS OmniFocus, but that wasn't an issue. Just selected the 'Keep Sync Database' to over write the database on iOS and I was all set.&lt;/p&gt;
&lt;p&gt;Doing this loses ALL data, including the Contexts, and Perspectives, but I can create ones that I need easily enough. There's this guy called &lt;a href="https://www.macsparky.com"&gt;MacSparky&lt;/a&gt; that's kind of a savant about this stuff. I'm sure he's got a post or two that can help.&lt;/p&gt;
&lt;p&gt;I don't know that I'll do better this time, or that I won't just do this again in 6 months, or 12 months, or 5 years ... but for right now, it's what I need to do so I can get back to Getting Things Done.&lt;/p&gt;</content><category term="Productivity"></category><category term="GTD"></category><category term="OmniFocus"></category></entry><entry><title>Keeping track of which movies I want to watch</title><link href="https://www.ryancheley.com/keeping-track-of-which-movies-i-want-to-watch.html" rel="alternate"></link><published>2016-11-28T01:53:00+01:00</published><updated>2016-11-28T01:53:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-28:/keeping-track-of-which-movies-i-want-to-watch.html</id><summary type="html">&lt;p&gt;One thing I like to do with my family is watch movies. But not just any movies, Comic Book movies. We've seen both &lt;a href="https://itun.es/us/ieifP"&gt;Thor&lt;/a&gt; and &lt;a href="https://itun.es/us/7tLNR"&gt;Thor: The Dark World&lt;/a&gt;, &lt;a href="https://itun.es/us/sLibP"&gt;Iron Man&lt;/a&gt; and &lt;a href="https://itun.es/us/KoVM1"&gt;Guardians of the Galaxy&lt;/a&gt;. It's not a lot, but we're working on it.&lt;/p&gt;
&lt;p&gt;I've mapped out the &lt;a href="https://en.m.wikipedia.org/wiki/Marvel_Cinematic_Universe"&gt;Marvel …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;One thing I like to do with my family is watch movies. But not just any movies, Comic Book movies. We've seen both &lt;a href="https://itun.es/us/ieifP"&gt;Thor&lt;/a&gt; and &lt;a href="https://itun.es/us/7tLNR"&gt;Thor: The Dark World&lt;/a&gt;, &lt;a href="https://itun.es/us/sLibP"&gt;Iron Man&lt;/a&gt; and &lt;a href="https://itun.es/us/KoVM1"&gt;Guardians of the Galaxy&lt;/a&gt;. It's not a lot, but we're working on it.&lt;/p&gt;
&lt;p&gt;I've mapped out the &lt;a href="https://en.m.wikipedia.org/wiki/Marvel_Cinematic_Universe"&gt;Marvel Cinematic Universe&lt;/a&gt; movies for us to watch, and it's OK, but there wasn't a easy way to link into the iTunes store from the list.&lt;/p&gt;
&lt;p&gt;I decided that I could probably use &lt;a href="https://appsto.re/us/2IzJ2.i"&gt;Workflow&lt;/a&gt; to do this, but I hadn't really worked with it to do it, but today I had a bit of time and figured, "what they heck ... why not?"&lt;/p&gt;
&lt;p&gt;My initial attempt was clunky. It required to workflows to accomplish what I needed. This was because I had to split the work of &lt;a href="https://appsto.re/us/2IzJ2.i"&gt;Workflow&lt;/a&gt; into 2 workflows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get the Name&lt;/li&gt;
&lt;li&gt;Get the Link&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Turns out there's a much easier way, so I'll post the link to that workflow, and not the workflows that are much harder to use!&lt;/p&gt;
&lt;p&gt;The workflow &lt;a href="https://workflow.is/workflows/66f269ed34cb42469df4de8dcb7739e7"&gt;Add Movie to Watch&lt;/a&gt; accepts &lt;code&gt;iTunes products&lt;/code&gt;. The workflow then does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It saves the &lt;code&gt;iTunes products&lt;/code&gt; URL as a variable called &lt;code&gt;iTunes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It then gets the &lt;code&gt;iTunes&lt;/code&gt; variable to retrieve the &lt;code&gt;Name&lt;/code&gt; and sets the value to a variable called &lt;code&gt;Movie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Next it asks 'Who is the movie being added by?' This is important for my family as we want a common list, but it's also good to know who added the movie!&lt;/li&gt;
&lt;li&gt;This value is saved to a variable called &lt;code&gt;User&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finally, I want to know when the movie was added so I get the current date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We take all of the items and construct a bit of &lt;code&gt;text&lt;/code&gt; that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[{Movie}]({iTunes}) - Added on {Input} by {User}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Where each of the words above surrounded by the {} are the variable names previously mentioned ({Input} is from the get current date and doesn't need to be saved to a variable).&lt;/p&gt;
&lt;p&gt;In my last step I take this text and append it to a file in Dropbox called &lt;code&gt;Movies to Watch.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It took &lt;strong&gt;way&lt;/strong&gt; longer than I would have liked to finish this up, but at the end of the day, I'm glad that I was able to get it done.&lt;/p&gt;</content><category term="Musings"></category><category term="iTunes"></category><category term="Workflow"></category></entry><entry><title>Dropbox Files Word Cloud</title><link href="https://www.ryancheley.com/dropbox-files-word-cloud.html" rel="alternate"></link><published>2016-11-25T16:22:00+01:00</published><updated>2016-11-25T16:22:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-25:/dropbox-files-word-cloud.html</id><summary type="html">&lt;p&gt;In one of my &lt;a href="https://www.ryancheley.com/blog/2016/11/22/twitter-word-cloud"&gt;previous posts&lt;/a&gt; I walked through how I generated a wordcloud based on my most recent 20 tweets. I though it would be &lt;em&gt;neat&lt;/em&gt; to do this for my &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; file names as well. just to see if I could.&lt;/p&gt;
&lt;p&gt;When I first tried to do it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In one of my &lt;a href="https://www.ryancheley.com/blog/2016/11/22/twitter-word-cloud"&gt;previous posts&lt;/a&gt; I walked through how I generated a wordcloud based on my most recent 20 tweets. I though it would be &lt;em&gt;neat&lt;/em&gt; to do this for my &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; file names as well. just to see if I could.&lt;/p&gt;
&lt;p&gt;When I first tried to do it (as previously stated, the Twitter Word Cloud post was the first python script I wrote) I ran into some difficulties. I didn't really understand what I was doing (although I still don't &lt;strong&gt;really&lt;/strong&gt; understand, I at least have a vague idea of what the heck I'm doing now).&lt;/p&gt;
&lt;p&gt;The script isn't much different than the &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; word cloud. The only real differences are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the way in which the &lt;code&gt;words&lt;/code&gt; variable is being populated&lt;/li&gt;
&lt;li&gt;the mask that I'm using to display the cloud&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In order to go get the information from the file system I use the &lt;code&gt;glob&lt;/code&gt; library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next lines have not changed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;wordcloud&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WordCloud&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STOPWORDS&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instead of writing to a 'tweets' file I'm looping through the files, splitting them at the &lt;code&gt;/&lt;/code&gt; character and getting the last item (i.e. the file name) and appending it to the list &lt;code&gt;f&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;filename&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;glob&lt;/span&gt;.&lt;span class="nv"&gt;glob&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Dropbox/Ryan/**/*&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;recursive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The rest of the script generates the image and saves it to my Dropbox Account. Again, instead of using a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; logo, I'm using a &lt;strong&gt;Cloud&lt;/strong&gt; image I found &lt;a href="http://www.shapecollage.com/shapes/mask-cloud.png"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt;

&lt;span class="nv"&gt;stopwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;https&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}

&lt;span class="nv"&gt;logomask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;imread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;mask-cloud.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;wordcloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;WordCloud&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;font_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Library/Fonts/Inconsolata.otf&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;STOPWORDS&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
    &lt;span class="nv"&gt;background_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;white&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;logomask&lt;/span&gt;,
    &lt;span class="nv"&gt;max_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;,
    &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1800&lt;/span&gt;,
    &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1400&lt;/span&gt;
&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;generate&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;imshow&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt;.&lt;span class="nv"&gt;recolor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;color_func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;None&lt;/span&gt;, &lt;span class="nv"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;savefig&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Dropbox/Ryan/Post Images/dropbox_wordcloud.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we get this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-112" height="200" src="/images/uploads/2017/12/dropbox_wordcloud-300x200.png" width="300"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>Installing the osmnx package for Python</title><link href="https://www.ryancheley.com/installing-the-osmnx-package-for-python.html" rel="alternate"></link><published>2016-11-24T16:44:00+01:00</published><updated>2016-11-24T16:44:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-24:/installing-the-osmnx-package-for-python.html</id><summary type="html">&lt;p&gt;I read about a cool gis package for Python and decided I wanted to play around with it. This post isn't about any of the things I've learned about the package, it's so I can remember how I installed it so I can do it again if I need to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I read about a cool gis package for Python and decided I wanted to play around with it. This post isn't about any of the things I've learned about the package, it's so I can remember how I installed it so I can do it again if I need to. The package is described by it's author in his &lt;a href="http://geoffboeing.com/2016/11/osmnx-python-street-networks/"&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To install &lt;code&gt;osmnx&lt;/code&gt; I needed to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="http://geoffboeing.com/2016/11/osmnx-python-street-networks/"&gt;Home Brew&lt;/a&gt; if it's not already installed by running this command (as an administrator) in the &lt;code&gt;terminal&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="https://github.com/kjordahl/SciPy-Tutorial-2015/issues/1"&gt;Home Brew to install the &lt;code&gt;spatialindex&lt;/code&gt; dependency&lt;/a&gt;. From the &lt;code&gt;terminal&lt;/code&gt; (again as an administrator):&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew install spatialindex&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In python run pip to install &lt;code&gt;rtree&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install rtree&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In python run pip to install &lt;code&gt;osmnx&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install osmnx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I did this on my 2014 iMac but didn't document the process. This lead to a problem when I tried to run some code on my 2012 MacBook Pro.&lt;/p&gt;
&lt;p&gt;Step 3 may not be required, but I'm &lt;strong&gt;not&lt;/strong&gt; sure and I don't want to not have it written down and then wonder why I can't get &lt;code&gt;osmnx&lt;/code&gt; to install in 3 years when I try again!&lt;/p&gt;
&lt;p&gt;Remember, you're not going to remember what you did, so you need to write it down!&lt;/p&gt;</content><category term="Python"></category><category term="osmnx"></category><category term="package"></category><category term="python"></category></entry><entry><title>Twitter Word Cloud</title><link href="https://www.ryancheley.com/twitter-word-cloud.html" rel="alternate"></link><published>2016-11-23T03:41:00+01:00</published><updated>2016-11-23T03:41:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-23:/twitter-word-cloud.html</id><summary type="html">&lt;p&gt;&lt;a href="/pitching-stats-and-python.html"&gt;As previously mentioned&lt;/a&gt; I'm a bit of a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user. One of the things that I came across, actually the first python project I did, was writing code to create a &lt;a href="https://en.wikipedia.org/wiki/Tag_cloud"&gt;word cloud&lt;/a&gt; based on the most recent 20 posts of my &lt;a href="https://www.twitter.com/"&gt;Twitter&lt;/a&gt; feed.&lt;/p&gt;
&lt;p&gt;I used a post by &lt;a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html"&gt;Sebastian …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/pitching-stats-and-python.html"&gt;As previously mentioned&lt;/a&gt; I'm a bit of a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user. One of the things that I came across, actually the first python project I did, was writing code to create a &lt;a href="https://en.wikipedia.org/wiki/Tag_cloud"&gt;word cloud&lt;/a&gt; based on the most recent 20 posts of my &lt;a href="https://www.twitter.com/"&gt;Twitter&lt;/a&gt; feed.&lt;/p&gt;
&lt;p&gt;I used a post by &lt;a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html"&gt;Sebastian Raschka&lt;/a&gt; and a post on &lt;a href="http://www.techtrek.io/generating-word-cloud-from-twitter-feed-with-python/"&gt;TechTrek.io&lt;/a&gt; as guides and was able to generate the word cloud pretty easily.&lt;/p&gt;
&lt;p&gt;As usual, we import the need libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OAuthHandler&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;wordcloud&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WordCloud&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STOPWORDS&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code below allows access to my feed using secret keys from my twitter account. They have been removed from the post so that my twitter account doesn't stop being mine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;consumer_key = consumer_key
consumer_secret = consumer_secret
access_token = access_token
access_secret = access_secret

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)

api = tweepy.API(auth)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next I open a file called &lt;code&gt;tweets&lt;/code&gt; and write to it the tweets (referred to in the &lt;code&gt;for&lt;/code&gt; loop as &lt;code&gt;status&lt;/code&gt;) and encode with &lt;code&gt;utf-8&lt;/code&gt;. If you don't do the following error is thrown: &lt;code&gt;TypeError: a bytes-like object is required, not 'str'&lt;/code&gt;. And who wants a &lt;code&gt;TypeError&lt;/code&gt; to be thrown?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tweets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;wb&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;api&lt;/span&gt;.&lt;span class="nv"&gt;user_timeline&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;api&lt;/span&gt;.&lt;span class="nv"&gt;get_status&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;.&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;encode&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;utf-8&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I'm ready to do something with the tweets that I collected. I read the file into a variable called &lt;code&gt;words&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tweets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;rb&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt;.&lt;span class="nv"&gt;decode&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;utf-8&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we start on constructing the word cloud itself. We declare words that we want to ignore (in this case &lt;strong&gt;https&lt;/strong&gt; is ignored, otherwise it would count the protocol of links that I've been tweeting).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stopwords = {&amp;#39;https&amp;#39;, &amp;#39;co&amp;#39;, &amp;#39;RT&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Read in the twitter bird to act as a mask&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;logomask = imread(&amp;#39;twitter_mask.png&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, generate the wordcloud, plot it and save the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;WordCloud&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;font_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Library/Fonts/Inconsolata.otf&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;STOPWORDS&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
    &lt;span class="nv"&gt;background_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;white&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;logomask&lt;/span&gt;,
    &lt;span class="nv"&gt;max_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;,
    &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1800&lt;/span&gt;,
    &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1400&lt;/span&gt;
&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;generate&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;imshow&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt;.&lt;span class="nv"&gt;recolor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;color_func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;None&lt;/span&gt;, &lt;span class="nv"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;savefig&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;./Twitter Word Cloud - &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;time&lt;/span&gt;.&lt;span class="nv"&gt;strftime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%Y%m%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second to last line generates a dynamically named file based on the date so that I can do this again and save the image without needing to do too much thinking.&lt;/p&gt;
&lt;p&gt;Full Code can be found on my &lt;a href="https://www.github.com/miloardot/"&gt;GitHub Report&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Twitter Word Cloud as of today looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-116" height="200" src="/images/uploads/2017/12/Twitter-Word-Cloud-20161122-300x200.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;I think it will be fun to post this image every once in a while, so as I remember, I'll run the script again and update the Word Cloud!&lt;/p&gt;</content><category term="Python"></category><category term="python"></category><category term="twitter"></category></entry><entry><title>Home, End, PgUp, PgDn ... BBEdit Preferences</title><link href="https://www.ryancheley.com/home-end-pgup-pgdn-bbedit-preferences.html" rel="alternate"></link><published>2016-11-22T05:21:00+01:00</published><updated>2016-11-22T05:21:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-22:/home-end-pgup-pgdn-bbedit-preferences.html</id><summary type="html">&lt;p&gt;As I've been writing up my posts for the last couple of days I've been using the amazing &lt;a href="https://en.wikipedia.org/wiki/Macintosh_operating_systems"&gt;macOS&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/Text_editor"&gt;Text Editor&lt;/a&gt; &lt;a href="http://www.barebones.com/products/bbedit/index.html"&gt;BBEdit&lt;/a&gt;. One of the things that has been tripping me up though are my 'Windows' tendencies on the keyboard. Specifically, my muscle memory of the use and behavior of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I've been writing up my posts for the last couple of days I've been using the amazing &lt;a href="https://en.wikipedia.org/wiki/Macintosh_operating_systems"&gt;macOS&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/Text_editor"&gt;Text Editor&lt;/a&gt; &lt;a href="http://www.barebones.com/products/bbedit/index.html"&gt;BBEdit&lt;/a&gt;. One of the things that has been tripping me up though are my 'Windows' tendencies on the keyboard. Specifically, my muscle memory of the use and behavior of the &lt;code&gt;Home&lt;/code&gt;, &lt;code&gt;End&lt;/code&gt;, &lt;code&gt;PgUp&lt;/code&gt; and &lt;code&gt;PgDn&lt;/code&gt; keys. The default behavior for these keys in BBEdit are not what I needed (nor wanted). I lived with it for a couple of days figuring I'd get used to it and that would be that.&lt;/p&gt;
&lt;p&gt;While driving home from work today I was listening to &lt;a href="https://atp.fm/episodes/196"&gt;ATP Episode 196&lt;/a&gt; and their Post-Show discussion of the recent departure of &lt;a href="https://en.wikipedia.org/wiki/Sal_Soghoian"&gt;Sal Soghoian&lt;/a&gt; who was the Project Manager for the macOS automation. I'm not sure why, but suddenly it clicked with me that I could probably change the behavior of the keys through the Preferences for the Keyboard (either system wide, or just in the Application).&lt;/p&gt;
&lt;p&gt;When I got home I fired up &lt;a href="http://www.barebones.com/products/bbedit/index.html"&gt;BBEdit&lt;/a&gt; and jumped into the preferences and saw this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-110" height="273" src="/images/uploads/2017/12/BBEdit-Default-Keyboard-Preferences-300x273.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;I made a couple of changes, and now the keys that I use to navigate through the text editor are now how I want them to be:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-111" height="270" src="/images/uploads/2017/12/BBEdit-Ryans-Keyboard-Preferences-300x270.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Nothing too fancy, or anything, but goodness, does it feel right to have the keys work the way I need them to.&lt;/p&gt;</content><category term="macOS"></category><category term="BBEdit"></category><category term="macOS"></category><category term="preferences"></category></entry><entry><title>Pitching Stats and Python</title><link href="https://www.ryancheley.com/pitching-stats-and-python.html" rel="alternate"></link><published>2016-11-21T05:19:00+01:00</published><updated>2016-11-21T05:19:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-21:/pitching-stats-and-python.html</id><summary type="html">&lt;p&gt;I'm an avid &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user, mostly as a replacement &lt;a href="https://en.wikipedia.org/wiki/RSS"&gt;RSS&lt;/a&gt; feeder, but also because I can't stand &lt;a href="https://www.facebook.com"&gt;Facebook&lt;/a&gt; and this allows me to learn about really important world events when I need to and to just stay isolated with &lt;a href="http://gerdleonhard.typepad.com/.a/6a00d8341c59be53ef013488b614d8970c-800wi"&gt;my head in the sand&lt;/a&gt; when I don't. It's perfect for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm an avid &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user, mostly as a replacement &lt;a href="https://en.wikipedia.org/wiki/RSS"&gt;RSS&lt;/a&gt; feeder, but also because I can't stand &lt;a href="https://www.facebook.com"&gt;Facebook&lt;/a&gt; and this allows me to learn about really important world events when I need to and to just stay isolated with &lt;a href="http://gerdleonhard.typepad.com/.a/6a00d8341c59be53ef013488b614d8970c-800wi"&gt;my head in the sand&lt;/a&gt; when I don't. It's perfect for me.&lt;/p&gt;
&lt;p&gt;One of the people I follow on &lt;a href="https://twitter.com/drdrang"&gt;Twitter&lt;/a&gt; is &lt;a href="http://www.leancrew.com/all-this/"&gt;Dr. Drang&lt;/a&gt; who is an Engineer of some kind by training. He also appears to be a fan of baseball and posted an &lt;a href="http://leancrew.com/all-this/2016/09/jake-arrieta-and-python/"&gt;analysis of Jake Arrieata's pitching&lt;/a&gt; over the course of the 2016 MLB season (through September 22 at least).&lt;/p&gt;
&lt;p&gt;When I first read it I hadn't done too much with Python, and while I found the results interesting, I wasn't sure what any of the code was doing (not really anyway).&lt;/p&gt;
&lt;p&gt;Since I had just spent the last couple of days learning more about &lt;code&gt;BeautifulSoup&lt;/code&gt; specifically and &lt;code&gt;Python&lt;/code&gt; in general I thought I'd try to do two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the data used by Dr. Drang&lt;/li&gt;
&lt;li&gt;Try to generalize it for any pitcher&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dr. Drang uses a flat csv file for his analysis and I wanted to use &lt;code&gt;BeautifulSoup&lt;/code&gt; to scrape the data from &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt; directly.&lt;/p&gt;
&lt;p&gt;OK, I know how to do that (sort of ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯)&lt;/p&gt;
&lt;p&gt;First things first, import your libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;strptime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next two lines I ~~stole~~ borrowed directly from Dr. Drang's post. The first line is to force the plot output to be inline with the code entered in the terminal. The second he explains as such:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The odd ones are the &lt;code&gt;rcParams&lt;/code&gt; call, which makes the inline graphs bigger than the tiny Jupyter default, and the functools import, which will help us create ERAs over small portions of the season.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not using &lt;a href="http://jupyter.org"&gt;Jupyter&lt;/a&gt; I'm using &lt;a href="http://rodeo.yhat.com"&gt;Rodeo&lt;/a&gt; as my IDE but I kept them all the same:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;%matplotlib&lt;/span&gt; &lt;span class="kr"&gt;inline&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the next section I use &lt;code&gt;BeautifulSoup&lt;/code&gt; to scrape the data I want from &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;http://www.espn.com/mlb/player/gamelog/_/id/30145/jake-arrieta&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;requests&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;

&lt;span class="nv"&gt;date_pitched&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;full_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;part_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;earned_runs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="nv"&gt;tables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;lxml&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;table&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tablehead mod-player-stats&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tables&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tr&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;: # &lt;span class="nv"&gt;Remove&lt;/span&gt; &lt;span class="nv"&gt;header&lt;/span&gt;
        &lt;span class="nv"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;:
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;re&lt;/span&gt;.&lt;span class="nv"&gt;match&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;[a-zA-Z]{3}\s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;:
                &lt;span class="nv"&gt;date_pitched&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
                    &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
                    &lt;span class="nv"&gt;year&lt;/span&gt;
                    , &lt;span class="nv"&gt;strptime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;], &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;%b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;tm_mon&lt;/span&gt;
                    , &lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                    &lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;full_ip&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;part_ip&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;earned_runs&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;6&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;except&lt;/span&gt; &lt;span class="nv"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;:
            &lt;span class="nv"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is basically a rehash of what I did for my Passer scraping (&lt;a href="https://www.ryancheley.com/blog/2016/11/17/web-scrapping"&gt;here&lt;/a&gt;, &lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;here&lt;/a&gt;, and &lt;a href="https://www.ryancheley.com/blog/2016/11/19/web-scrapping-passer-data-part-iii"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This proved a useful starting point, but unlike the NFL data on ESPN which has pre- and regular season breaks, the MLB data on ESPN has monthly breaks, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Regular Season Games through October 2, 2016
DATE
Oct 1
Monthly Totals
DATE
Sep 24
Sep 19
Sep 14
Sep 9
Monthly Totals
DATE
Jun 26
Jun 20
Jun 15
Jun 10
Jun 4
Monthly Totals
DATE
May 29
May 23
May 17
May 12
May 7
May 1
Monthly Totals
DATE
Apr 26
Apr 21
Apr 15
Apr 9
Apr 4
Monthly Totals
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, all I wanted was the lines that correspond to &lt;code&gt;columns[0].text&lt;/code&gt; with actual dates like 'Apr 21'.&lt;/p&gt;
&lt;p&gt;In reviewing how the dates were being displayed it was basically '%b %D', i.e. May 12, Jun 4, etc. This is great because it means I want 3 letters and then a space and nothing else. Turns out, Regular Expressions are great for stuff like this!&lt;/p&gt;
&lt;p&gt;After a bit of &lt;a href="https://www.google.com"&gt;Googling&lt;/a&gt; I got what I was looking for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;re.match(&amp;#39;[a-zA-Z]{3}\s&amp;#39;, columns[0].text)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To get my regular expression and then just add an &lt;code&gt;if&lt;/code&gt; in front and call it good!&lt;/p&gt;
&lt;p&gt;The only issue was that as I ran it in testing, I kept getting no return data. What I didn't realize is that returns a &lt;code&gt;NoneType&lt;/code&gt; when it's false. Enter more Googling and I see that in order for the &lt;code&gt;if&lt;/code&gt; to work I have to add the &lt;code&gt;is not None&lt;/code&gt; which leads to results that I wanted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Oct 22
Oct 16
Oct 13
Oct 11
Oct 7
Oct 1
Sep 24
Sep 19
Sep 14
Sep 9
Jun 26
Jun 20
Jun 15
Jun 10
Jun 4
May 29
May 23
May 17
May 12
May 7
May 1
Apr 26
Apr 21
Apr 15
Apr 9
Apr 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next part of the transformation is to convert to a date so I can sort on it (and display it properly) later.&lt;/p&gt;
&lt;p&gt;With all of the data I need, I put the columns into a &lt;code&gt;Dictionary&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dic = {&amp;#39;date&amp;#39;: date_pitched, &amp;#39;Full_IP&amp;#39;: full_ip, &amp;#39;Partial_IP&amp;#39;: part_ip, &amp;#39;ER&amp;#39;: earned_runs}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then into a &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games = pd.DataFrame(dic)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and apply some manipulations to the &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[&amp;#39;Full_IP&amp;#39;,&amp;#39;Partial_IP&amp;#39;, &amp;#39;ER&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[&amp;#39;Full_IP&amp;#39;,&amp;#39;Partial_IP&amp;#39;, &amp;#39;ER&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numeric&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now to apply some Baseball math to get the Earned Run Average:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games[&amp;#39;IP&amp;#39;] = games.Full_IP + games.Partial_IP/3
games[&amp;#39;GERA&amp;#39;] = games.ER/games.IP*9
games[&amp;#39;CIP&amp;#39;] = games.IP.cumsum()
games[&amp;#39;CER&amp;#39;] = games.ER.cumsum()
games[&amp;#39;ERA&amp;#39;] = games.CER/games.CIP*9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the next part of Dr. Drang's post he writes a custom function to help create moving averages. It looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only problem with it is I called my &lt;code&gt;DataFrame&lt;/code&gt; &lt;code&gt;games&lt;/code&gt;, not &lt;code&gt;df&lt;/code&gt;. Simple enough, I'll just replace &lt;code&gt;df&lt;/code&gt; with &lt;code&gt;games&lt;/code&gt; and call it a day, right? Nope:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When I try to run the code I get errors. Lots of them. This is because while i made sure to update the &lt;code&gt;DataFrame&lt;/code&gt; name to be correct I overlooked that the function was using a parameter called &lt;code&gt;games&lt;/code&gt; and &lt;code&gt;Python&lt;/code&gt; got a bit confused about what was what.&lt;/p&gt;
&lt;p&gt;OK, round two, replace the paramater &lt;code&gt;games&lt;/code&gt; with &lt;code&gt;games_t&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games_t&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No more errors! Now we calculate the 3- and 4-game moving averages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;era4 = partial(rera, 4)
era3 = partial(rera,3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then add them to the &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games[&amp;#39;ERA4&amp;#39;] = games.apply(era4, axis=1)
games[&amp;#39;ERA3&amp;#39;] = games.apply(era3, axis=1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And print out a pretty graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA3&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA4&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;GERA&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.k&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;--k&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dr. Drang focused on Jake Arrieta (he is a Chicago guy after all), but I thought it was be interested to look at the Graphs for Arrieta and the top 5 finishers in the NL Cy Young Voting (because Clayton Kershaw was 5th place and I'm a Dodgers guy).&lt;/p&gt;
&lt;p&gt;Here is the graph for &lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/30145/jake-arrieta"&gt;Jake Arrieata&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-177" height="222" src="/images/uploads/2016/11/arrieta-300x222.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;And here are the graphs for the top 5 finishers in Ascending order in the &lt;a href="http://bbwaa.com/16-nl-cy/"&gt;2016 NL Cy Young voting&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28976/max-scherzer"&gt;Max Scherzer&lt;/a&gt; winner of the 2016 NL &lt;a href="https://en.wikipedia.org/wiki/Cy_Young_Award"&gt;Cy Young Award&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-178" height="229" src="/images/uploads/2016/11/scherzer-300x229.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28487/jon-lester"&gt;Jon Lester&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-182" height="223" src="/images/uploads/2016/11/lester-300x223.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/33173/kyle-hendricks"&gt;Kyle Hendricks&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-179" height="225" src="/images/uploads/2016/11/hendricks-300x225.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/29949/madison-bumgarner"&gt;Madison Bumgarner&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-180" height="232" src="/images/uploads/2016/11/bumgarner-300x232.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28963/clayton-kershaw"&gt;Clayton Kershaw&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-176" height="232" src="/images/uploads/2016/11/kershaw-300x232.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;I've not spent much time analyzing the data, but I'm sure that it says &lt;em&gt;something&lt;/em&gt;. At the very least, it got me to wonder, 'How many 0 ER games did each pitcher pitch?'&lt;/p&gt;
&lt;p&gt;I also noticed that the stats include the playoffs (which I wasn't intending). Another thing to look at later.&lt;/p&gt;
&lt;p&gt;Legend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Black Dot - ERA on Date of Game&lt;/li&gt;
&lt;li&gt;Black Solid Line - Cummulative ERA&lt;/li&gt;
&lt;li&gt;Blue Solid Line - 3-game trailing average ERA&lt;/li&gt;
&lt;li&gt;Red Solid Line - 4-game trailing average ERA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full code can be found on my &lt;a href="https://www.github.com/miloardot"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="mlb"></category><category term="python"></category></entry><entry><title>Web Scrapping - Passer Data (Part III)</title><link href="https://www.ryancheley.com/web-scrapping-passer-data-part-iii.html" rel="alternate"></link><published>2016-11-19T17:25:00+01:00</published><updated>2016-11-19T17:25:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-19:/web-scrapping-passer-data-part-iii.html</id><summary type="html">&lt;p&gt;In Part III I'm reviewing the code to populate a DataFrame with Passer data from the current NFL season.&lt;/p&gt;
&lt;p&gt;To start I use the &lt;code&gt;games&lt;/code&gt; &lt;code&gt;DataFrame&lt;/code&gt; I created in &lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;Part II&lt;/a&gt; to create 4 new &lt;code&gt;DataFrames&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reg_season_games - All of the Regular Season Games&lt;/li&gt;
&lt;li&gt;pre_season_games - All of the Pre Season Games …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;In Part III I'm reviewing the code to populate a DataFrame with Passer data from the current NFL season.&lt;/p&gt;
&lt;p&gt;To start I use the &lt;code&gt;games&lt;/code&gt; &lt;code&gt;DataFrame&lt;/code&gt; I created in &lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;Part II&lt;/a&gt; to create 4 new &lt;code&gt;DataFrames&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reg_season_games - All of the Regular Season Games&lt;/li&gt;
&lt;li&gt;pre_season_games - All of the Pre Season Games&lt;/li&gt;
&lt;li&gt;gameshome - The Home Games&lt;/li&gt;
&lt;li&gt;gamesaway - The Away Games&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A cool aspect of the DataFrames is that you can treat them kind of like temporary tables (at least, this is how I'm thinking about them as I am mostly a &lt;code&gt;SQL&lt;/code&gt; programmer) and create other temporary tables based on criteria. In the code below I'm taking the &lt;code&gt;nfl_start_date&lt;/code&gt; that I defined in &lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;Part II&lt;/a&gt; as a way to split the data frame into pre / and regular season &lt;code&gt;DataFrame&lt;/code&gt;. I then take the regular season &lt;code&gt;DataFrame&lt;/code&gt; and split that into home and away &lt;code&gt;DataFrames&lt;/code&gt;. I do this so I don't double count the statistics for the passers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt; &lt;span class="n"&gt;Section&lt;/span&gt; &lt;span class="mh"&gt;3&lt;/span&gt;

&lt;span class="n"&gt;reg_season_games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;match_date&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;nfl_start_date&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pre_season_games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;match_date&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nfl_start_date&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;gameshome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_season_games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;reg_season_games&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;&amp;#39;ha&lt;/span&gt;&lt;span class="n"&gt;_ind&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt;
&lt;span class="n"&gt;gamesaway&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_season_games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;reg_season_games&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;&amp;#39;ha&lt;/span&gt;&lt;span class="n"&gt;_ind&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;@&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I set up some variables to be used later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.espn.com/nfl/boxscore/_/gameId/{0}&amp;#39;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;games&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;passers&lt;/span&gt;
&lt;span class="n"&gt;player_pass_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_catch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_attempt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_yds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_avg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_td&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_sacks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_sacks_yds_lost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_rtg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_week_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_pass_ha_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_match_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;player_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="cp"&gt;#declare&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;player_id&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;t&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;str&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt;

&lt;span class="n"&gt;headers_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;match_id&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;CATCHES&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ATTEMPTS&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;YDS&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;TD&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;INT&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;SACKS&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;YRDLSTSACKS&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;RTG&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now it's time to start populating some of the &lt;code&gt;list&lt;/code&gt; variables I created above. I am taking the &lt;code&gt;week_id&lt;/code&gt;, &lt;code&gt;result&lt;/code&gt;, &lt;code&gt;team_x&lt;/code&gt;, and &lt;code&gt;ha_ind&lt;/code&gt; columns from the &lt;code&gt;games&lt;/code&gt; &lt;code&gt;DataFrame&lt;/code&gt; (I'm sure there is a better way to do this, and I will need to revisit it in the future)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;player_pass_week_id.append(gamesaway.week_id)
player_pass_result.append(gamesaway.result)
player_pass_team.append(gamesaway.team_x)
player_pass_ha_ind.append(gamesaway.ha_ind)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now for the looping (everybody's favorite part!). Using &lt;code&gt;BeautifulSoup&lt;/code&gt; I get the &lt;code&gt;div&lt;/code&gt; of class &lt;code&gt;col column-one gamepackage-away-wrap&lt;/code&gt;. Once I have that I get the table rows and then loop through the data in the row to get what I need from the table holding the passer data. Some intersting things happening below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Catches / Attempts and Sacks / Yrds Lost are displayed as a single column each (even though each column holds 2 statistics). In order to &lt;em&gt;fix&lt;/em&gt; this I use the &lt;code&gt;index()&lt;/code&gt; method and get all of the data to the left of a character (&lt;code&gt;-&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; respectively for each column previously mentioned) and append the resulting 2 items per column (so four in total) to 2 different lists (four in total).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last line of code gets the &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt; &lt;code&gt;player_id&lt;/code&gt;, just in case I need/want to use it later.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;gamesaway&lt;/span&gt;.&lt;span class="nv"&gt;iterrows&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:
    &lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;try&lt;/span&gt;:
        &lt;span class="nv"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;requests&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;BASE_URL&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
        &lt;span class="nv"&gt;table_pass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;request&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;lxml&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;col column-one gamepackage-away-wrap&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

        &lt;span class="nv"&gt;pass_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;table_pass&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]
        &lt;span class="nv"&gt;player_pass_all&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;pass_&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tr&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;


        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;player_pass_all&lt;/span&gt;:
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;sacks&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_sacks&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;:&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]&lt;span class="ss"&gt;))&lt;/span&gt;
                        &lt;span class="nv"&gt;player_pass_sacks_yds_lost&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;[&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;:]&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;c-att&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_catch&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;:&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]&lt;span class="ss"&gt;))&lt;/span&gt;
                        &lt;span class="nv"&gt;player_pass_attempt&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;[&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;:]&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;span&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                            &lt;span class="nv"&gt;player_pass_name&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;yds&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_yds&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;avg&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_avg&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;float&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_td&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_int&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;td&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;rtg&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TEAM&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:
                        &lt;span class="nv"&gt;player_pass_rtg&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;float&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;td&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
                        &lt;span class="nv"&gt;player_match_id&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            #&lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="nv"&gt;below&lt;/span&gt; &lt;span class="nv"&gt;cycles&lt;/span&gt; &lt;span class="nv"&gt;through&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;passers&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;gets&lt;/span&gt; &lt;span class="nv"&gt;their&lt;/span&gt; &lt;span class="nv"&gt;ESPN&lt;/span&gt; &lt;span class="nv"&gt;Player&lt;/span&gt; &lt;span class="nv"&gt;ID&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tr&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="nv"&gt;player_id&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;href&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;http://www.espn.com/nfl/player/_/id/&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;:&lt;span class="nv"&gt;a&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;href&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;http://www.espn.com/nfl/player/_/id/&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;except&lt;/span&gt; &lt;span class="nv"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;:
        &lt;span class="nv"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With all of the data from above we now populate our &lt;code&gt;DataFrame&lt;/code&gt; using specific headers (that's why we set the &lt;code&gt;headers_pass&lt;/code&gt; variable above):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;player_passer_data = pd.DataFrame(np.column_stack((
player_match_id,
player_id,
player_pass_name,
player_pass_catch,
player_pass_attempt,
player_pass_yds,
player_pass_avg,
player_pass_td,
player_pass_int,
player_pass_sacks,
player_pass_sacks_yds_lost,
player_pass_rtg
)), columns=headers_pass)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;An issue that I ran into as I was playing with the generated &lt;code&gt;DataFrame&lt;/code&gt; was that even though I had set the numbers generated in the &lt;code&gt;for&lt;/code&gt; loop above to be of type &lt;code&gt;int&lt;/code&gt; anytime I would do something like a &lt;code&gt;sum()&lt;/code&gt; on the &lt;code&gt;DataFrame&lt;/code&gt; the numbers would be concatenated as though they were &lt;code&gt;strings&lt;/code&gt; (because they were!).&lt;/p&gt;
&lt;p&gt;After much &lt;a href="https://www.google.com"&gt;Googling&lt;/a&gt; I came across a &lt;a href="http://stackoverflow.com/questions/15891038/pandas-change-data-type-of-columns"&gt;useful answer&lt;/a&gt; on &lt;a href="https://www.stackexchange.com"&gt;StackExchange&lt;/a&gt; (where else would I find it, right?)&lt;/p&gt;
&lt;p&gt;What it does is to set the data type of the columns from &lt;code&gt;string&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;player_passer_data[[&amp;#39;TD&amp;#39;, &amp;#39;CATCHES&amp;#39;, &amp;#39;ATTEMPTS&amp;#39;, &amp;#39;YDS&amp;#39;, &amp;#39;INT&amp;#39;, &amp;#39;SACKS&amp;#39;, &amp;#39;YRDLSTSACKS&amp;#39;,&amp;#39;AVG&amp;#39;,&amp;#39;RTG&amp;#39;]] = player_passer_data[[&amp;#39;TD&amp;#39;, &amp;#39;CATCHES&amp;#39;, &amp;#39;ATTEMPTS&amp;#39;, &amp;#39;YDS&amp;#39;, &amp;#39;INT&amp;#39;, &amp;#39;SACKS&amp;#39;, &amp;#39;YRDLSTSACKS&amp;#39;,&amp;#39;AVG&amp;#39;,&amp;#39;RTG&amp;#39;]].apply(pd.to_numeric)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK, so I've got a &lt;code&gt;DataFrame&lt;/code&gt; with passer data, I've got a &lt;code&gt;DataFrame&lt;/code&gt; with away game data, now I need to join them. As expected, &lt;code&gt;pandas&lt;/code&gt; has a way to join &lt;code&gt;DataFrame&lt;/code&gt; data ... with the &lt;a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.join.html"&gt;join&lt;/a&gt; method obviously!&lt;/p&gt;
&lt;p&gt;I create a new &lt;code&gt;DataFrame&lt;/code&gt; called &lt;code&gt;game_passer_data&lt;/code&gt; which joins &lt;code&gt;player_passer_data&lt;/code&gt; with &lt;code&gt;games_away&lt;/code&gt; on their common key &lt;code&gt;match_id&lt;/code&gt;. I then have to use &lt;code&gt;set_index&lt;/code&gt; to make sure that the index stays set to &lt;code&gt;match_id&lt;/code&gt; ... If I don't then the &lt;code&gt;index&lt;/code&gt; is reset to an auto-incremented integer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;game_passer_data = player_passer_data.join(gamesaway, on=&amp;#39;match_id&amp;#39;).set_index(&amp;#39;match_id&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is great, but now &lt;code&gt;game_passer_data&lt;/code&gt; has all of these extra columns. Below is the result of running &lt;code&gt;game_passer_data.head()&lt;/code&gt; from the terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;id          Name  CATCHES  ATTEMPTS  YDS  AVG  TD  INT  SACKS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518  2577417  Dak Prescott       22        30  292  9.7   0    0      4
    400874674  2577417  Dak Prescott       23        32  245  7.7   2    0      2
    400874733  2577417  Dak Prescott       18        27  247  9.1   3    1      2
    400874599  2577417  Dak Prescott       21        27  247  9.1   3    0      0
    400874599    12482  Mark Sanchez        1         1    8  8.0   0    0      0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;           YRDLSTSACKS                        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id                                      ...
    400874518           14                        ...
    400874674           11                        ...
    400874733           14                        ...
    400874599            0                        ...
    400874599            0                        ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;           ha_ind  match_date                  opp result          team_x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518       @  2016-09-18  washington-redskins      W  Dallas Cowboys
    400874674       @  2016-10-02  san-francisco-49ers      W  Dallas Cowboys
    400874733       @  2016-10-16    green-bay-packers      W  Dallas Cowboys
    400874599       @  2016-11-06     cleveland-browns      W  Dallas Cowboys
    400874599       @  2016-11-06     cleveland-browns      W  Dallas Cowboys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;          week_id prefix_1             prefix_2               team_y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518       2      wsh  washington-redskins  Washington Redskins
    400874674       4       sf  san-francisco-49ers  San Francisco 49ers
    400874733       6       gb    green-bay-packers    Green Bay Packers
    400874599       9      cle     cleveland-browns     Cleveland Browns
    400874599       9      cle     cleveland-browns     Cleveland Browns&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;                                                         url
match_id
400874518  http://www.espn.com/nfl/team/_/name/wsh/washin...
400874674  http://www.espn.com/nfl/team/_/name/sf/san-fra...
400874733  http://www.espn.com/nfl/team/_/name/gb/green-b...
400874599  http://www.espn.com/nfl/team/_/name/cle/clevel...
400874599  http://www.espn.com/nfl/team/_/name/cle/clevel...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is nice, but not exactly what I want. In order to remove the &lt;em&gt;extra&lt;/em&gt; columns I use the &lt;code&gt;drop&lt;/code&gt; method which takes 2 arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what object to drop&lt;/li&gt;
&lt;li&gt;an axis which determine what types of object to drop (0 = rows, 1 = columns):&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below, the object I define is a list of columns (figured that part all out on my own as the documentation didn't explicitly state I could use a list, but I figured, what's the worst that could happen?)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;game_passer_data = game_passer_data.drop([&amp;#39;opp&amp;#39;, &amp;#39;prefix_1&amp;#39;, &amp;#39;prefix_2&amp;#39;, &amp;#39;url&amp;#39;], 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which gives me this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;id          Name  CATCHES  ATTEMPTS  YDS  AVG  TD  INT  SACKS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518  2577417  Dak Prescott       22        30  292  9.7   0    0      4
    400874674  2577417  Dak Prescott       23        32  245  7.7   2    0      2
    400874733  2577417  Dak Prescott       18        27  247  9.1   3    1      2
    400874599  2577417  Dak Prescott       21        27  247  9.1   3    0      0
    400874599    12482  Mark Sanchez        1         1    8  8.0   0    0      0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;           YRDLSTSACKS    RTG ha_ind  match_date result          team_x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518           14  103.8      @  2016-09-18      W  Dallas Cowboys
    400874674           11  114.7      @  2016-10-02      W  Dallas Cowboys
    400874733           14  117.4      @  2016-10-16      W  Dallas Cowboys
    400874599            0  141.8      @  2016-11-06      W  Dallas Cowboys
    400874599            0  100.0      @  2016-11-06      W  Dallas Cowboys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;          week_id               team_y
match_id
400874518       2  Washington Redskins
400874674       4  San Francisco 49ers
400874733       6    Green Bay Packers
400874599       9     Cleveland Browns
400874599       9     Cleveland Browns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I finally have a &lt;code&gt;DataFrame&lt;/code&gt; with the data I care about, &lt;strong&gt;BUT&lt;/strong&gt; all of the column names are wonky!&lt;/p&gt;
&lt;p&gt;This is easy enough to fix (and should have probably been fixed earlier with some of the objects I created only containing the necessary columns, but I can fix that later). By simply renaming the columns as below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;game_passer_data.columns = [&amp;#39;id&amp;#39;, &amp;#39;Name&amp;#39;, &amp;#39;Catches&amp;#39;, &amp;#39;Attempts&amp;#39;, &amp;#39;YDS&amp;#39;, &amp;#39;Avg&amp;#39;, &amp;#39;TD&amp;#39;, &amp;#39;INT&amp;#39;, &amp;#39;Sacks&amp;#39;, &amp;#39;Yards_Lost_Sacks&amp;#39;, &amp;#39;Rating&amp;#39;, &amp;#39;HA_Ind&amp;#39;, &amp;#39;game_date&amp;#39;, &amp;#39;Result&amp;#39;, &amp;#39;Team&amp;#39;, &amp;#39;Week&amp;#39;, &amp;#39;Opponent&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I now get the data I want, with column names to match!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;id          Name  Catches  Attempts  YDS  Avg  TD  INT  Sacks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518  2577417  Dak Prescott       22        30  292  9.7   0    0      4
    400874674  2577417  Dak Prescott       23        32  245  7.7   2    0      2
    400874733  2577417  Dak Prescott       18        27  247  9.1   3    1      2
    400874599  2577417  Dak Prescott       21        27  247  9.1   3    0      0
    400874599    12482  Mark Sanchez        1         1    8  8.0   0    0      0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;           Yards_Lost_Sacks  Rating HA_Ind   game_date Result            Team
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;match_id
    400874518                14   103.8      @  2016-09-18      W  Dallas Cowboys
    400874674                11   114.7      @  2016-10-02      W  Dallas Cowboys
    400874733                14   117.4      @  2016-10-16      W  Dallas Cowboys
    400874599                 0   141.8      @  2016-11-06      W  Dallas Cowboys
    400874599                 0   100.0      @  2016-11-06      W  Dallas Cowboys&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;          Week             Opponent
match_id
400874518    2  Washington Redskins
400874674    4  San Francisco 49ers
400874733    6    Green Bay Packers
400874599    9     Cleveland Browns
400874599    9     Cleveland Browns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I've posted the code for all three parts to my &lt;a href="https://www.github.com/miloardot"&gt;GitHub Repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Work that I still need to do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add code to get the home game data&lt;/li&gt;
&lt;li&gt;Add code to get data for the other position players&lt;/li&gt;
&lt;li&gt;Add code to get data for the defense&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When I started this project on Wednesday I had only a bit of exposure to very basic aspects of &lt;code&gt;Python&lt;/code&gt; and my background as a developer. I'm still a long way from considering myself proficient in &lt;code&gt;Python&lt;/code&gt; but I know more now that I did 3 days ago and for that I'm pretty excited! It's also given my an ~~excuse~~ reason to write some stuff which is a nice side effect.&lt;/p&gt;</content><category term="Sports"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>Web Scrapping - Passer Data (Part II)</title><link href="https://www.ryancheley.com/web-scrapping-passer-data-part-ii.html" rel="alternate"></link><published>2016-11-18T20:27:00+01:00</published><updated>2016-11-18T20:27:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-18:/web-scrapping-passer-data-part-ii.html</id><summary type="html">&lt;p&gt;On a previous post I went through my new found love of Fantasy Football and the rationale behind the 'why' of this particular project. This included getting the team names and their URLs from the &lt;a href="https://www.espn.com"&gt;ESPN website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As before, let's set up some basic infrastructure to be used later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;On a previous post I went through my new found love of Fantasy Football and the rationale behind the 'why' of this particular project. This included getting the team names and their URLs from the &lt;a href="https://www.espn.com"&gt;ESPN website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As before, let's set up some basic infrastructure to be used later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;strptime&lt;/span&gt;

&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt; &lt;span class="c1"&gt;# allows us to change the year that we are interested in.&lt;/span&gt;
&lt;span class="n"&gt;nfl_start_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://espn.go.com/nfl/team/schedule/_/name/&lt;/span&gt;&lt;span class="si"&gt;{0}&lt;/span&gt;&lt;span class="s1"&gt;/year/&lt;/span&gt;&lt;span class="si"&gt;{1}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{2}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#URL that we&amp;#39;ll use to cycle through to get the gameid&amp;#39;s (called match_id)&lt;/span&gt;

&lt;span class="n"&gt;match_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;week_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;week_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;match_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;ha_ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;team_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we iterate through the &lt;code&gt;teams&lt;/code&gt; &lt;code&gt;dictionary&lt;/code&gt; that I created yesterday:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;teams&lt;/span&gt;.&lt;span class="nv"&gt;iterrows&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:
    &lt;span class="nv"&gt;_team&lt;/span&gt;, &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;team&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;], &lt;span class="nv"&gt;row&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]
    &lt;span class="nv"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;requests&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;BASE_URL&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;row&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;prefix_1&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;], &lt;span class="nv"&gt;year&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;prefix_2&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]&lt;span class="ss"&gt;))&lt;/span&gt;
    &lt;span class="nv"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;lxml&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;table&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tr&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;:]: # &lt;span class="nv"&gt;Remove&lt;/span&gt; &lt;span class="nv"&gt;header&lt;/span&gt;
        &lt;span class="nv"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;:
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;result&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;find&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;li&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                &lt;span class="nv"&gt;match_result&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;week_id&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; #&lt;span class="nv"&gt;get&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;week_id&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt; &lt;span class="nv"&gt;dictionary&lt;/span&gt; &lt;span class="nv"&gt;so&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;know&lt;/span&gt; &lt;span class="nv"&gt;what&lt;/span&gt; &lt;span class="nv"&gt;week&lt;/span&gt; &lt;span class="nv"&gt;everything&lt;/span&gt; &lt;span class="nv"&gt;happened&lt;/span&gt;
                &lt;span class="nv"&gt;_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
                    &lt;span class="nv"&gt;year&lt;/span&gt;,
                    &lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;strptime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;], &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;%b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;tm_mon&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
                    &lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;week_date&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_date&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;team_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_team&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;ha&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;].&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;li&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;game-status&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
                    &lt;span class="nv"&gt;ha_ind&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ha&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;link&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;: # &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;realized&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="nv"&gt;didn&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;t need to do the fancy thing from the site I was mimicking http://danielfrg.com/blog/2013/04/01/nba-scraping-data/&lt;/span&gt;
                &lt;span class="nv"&gt;match_id&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;link&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;href&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;:]&lt;span class="ss"&gt;)&lt;/span&gt;

        &lt;span class="nv"&gt;except&lt;/span&gt; &lt;span class="nv"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;:
            &lt;span class="nv"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, we set up some variables to be used in the &lt;code&gt;for&lt;/code&gt; loop. But I want to really talk about the &lt;code&gt;try&lt;/code&gt; portion of my code and the part where the &lt;code&gt;week_date&lt;/code&gt; is being calculated.&lt;/p&gt;
&lt;p&gt;Although I've been developing and managing developers for a while, I've not had the need to use a construct like &lt;code&gt;try&lt;/code&gt;. (I know, right, weird!)&lt;/p&gt;
&lt;p&gt;The basic premise of the &lt;code&gt;try&lt;/code&gt; is that it will execute some code and if it succeeds that code will be executed. If not, it will go to the exception portion. For Python (and maybe other languages, I'm not sure) the exception &lt;strong&gt;MUST&lt;/strong&gt; have something in it. In this case, I use Python's &lt;code&gt;pass&lt;/code&gt; function, which basically says, 'hey, just forget about doing anything'. I'm not raising any errors here because I don't care if the result is 'bad' I just want to ignore it because there isn't any data I can use.&lt;/p&gt;
&lt;p&gt;The other interesting (or gigantic pain in the a\$\$) thing is that the way &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt; displays dates on the schedule page is as &lt;code&gt;Day of Week, Month Day&lt;/code&gt;, i.e. &lt;code&gt;Sun Sep 11&lt;/code&gt;. There is no year. I think this is because for the most part the regular season for an &lt;a href="https://www.nfl.com"&gt;NFL&lt;/a&gt; is always in the same calendar year. However, this year the last game of the season, in week 17, is in January. Since I'm only getting games that have been played, I'm &lt;em&gt;safe&lt;/em&gt; for a couple more weeks, but this will need to be addressed, otherwise the date of the last games of the 2016 season will show as January 2016, instead of January 2017.&lt;/p&gt;
&lt;p&gt;Anyway, I digress. In order to change the displayed date to a date I can actually use is I had to get the necessary function. In order to get that I had to add the following line to my code from yesterday&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;strptime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This allows me to make some changes to the date (see where &lt;code&gt;_date&lt;/code&gt; is being calculated in &lt;code&gt;for result in columns[3].find('li'):&lt;/code&gt; portion of the &lt;code&gt;try:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One of the things that confused the heck out of me initially was the way the date is being stored in the list &lt;code&gt;week_date&lt;/code&gt;. It is in the form &lt;code&gt;datetime.date(2016, 9, 1)&lt;/code&gt;, but I was expecting it to be stored as &lt;code&gt;2016-09-01&lt;/code&gt;. I did a couple of things to try and &lt;em&gt;fix&lt;/em&gt; this, especially because once the list was added to the &lt;code&gt;gamesdic&lt;/code&gt; &lt;code&gt;dictionary&lt;/code&gt; and then used in the &lt;code&gt;games&lt;/code&gt; &lt;code&gt;DataFrame&lt;/code&gt; the &lt;code&gt;week_date&lt;/code&gt; was then stored as &lt;code&gt;1472688000000&lt;/code&gt; which is the milliseconds since Jan 1, 1970 to the date of the game, but it took an embarising amount of &lt;a href="https://www.google.com"&gt;Googling&lt;/a&gt; to ~~realize~~ discover this.&lt;/p&gt;
&lt;p&gt;With this new discovery, I forged on. The last two things that I needed to do was to create a &lt;code&gt;dictionary&lt;/code&gt; to hold my data with all of my columns:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gamesdic = {&amp;#39;match_id&amp;#39;: match_id, &amp;#39;week_id&amp;#39;: week_id, &amp;#39;result&amp;#39;: match_result, &amp;#39;ha_ind&amp;#39;: ha_ind, &amp;#39;team&amp;#39;: team_list, &amp;#39;match_date&amp;#39;: week_date}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With dictionary in hand I was able to create a &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games = pd.DataFrame(gamesdic).set_index(&amp;#39;match_id&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The line above is frighteningly simple. It's basically saying, hey, take all of the data from the &lt;code&gt;gamesdic&lt;/code&gt; &lt;code&gt;dictionary&lt;/code&gt; and make the &lt;code&gt;match_id&lt;/code&gt; the index.&lt;/p&gt;
&lt;p&gt;To get the first part, see my post &lt;a href="https://www.ryancheley.com/blog/2016/11/17/web-scrapping"&gt;Web Scrapping - Passer Data (Part I)&lt;/a&gt;.&lt;/p&gt;</content><category term="Sports"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>Web Scrapping - Passer Data (Part I)</title><link href="https://www.ryancheley.com/web-scrapping.html" rel="alternate"></link><published>2016-11-18T00:54:00+01:00</published><updated>2016-11-18T00:54:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-18:/web-scrapping.html</id><summary type="html">&lt;p&gt;For the first time in &lt;strong&gt;many&lt;/strong&gt; years I've joined a &lt;a href="http://www.espn.com"&gt;Fantasy Football league&lt;/a&gt; with some of my family. One of the reasons I have not engaged in the Fantasy football is that, frankly, I'm not very good. In fact, I'm pretty bad. I have a passing interest in Football, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the first time in &lt;strong&gt;many&lt;/strong&gt; years I've joined a &lt;a href="http://www.espn.com"&gt;Fantasy Football league&lt;/a&gt; with some of my family. One of the reasons I have not engaged in the Fantasy football is that, frankly, I'm not very good. In fact, I'm pretty bad. I have a passing interest in Football, but my interests lie more with Baseball than football (especially in light of the NFLs policy on punishing players for some infractions of league rules, but not punishing them for infractions of societal norms (see Tom Brady and Ray Lewis respectively).&lt;/p&gt;
&lt;p&gt;That being said, I am in a Fantasy Football league this year, and as of this writing am a respectable 5-5 and only 2 games back from making the playoffs with 3 games left.&lt;/p&gt;
&lt;p&gt;This means that what I started on yesterday I really should have started on much sooner, but I didn't.&lt;/p&gt;
&lt;p&gt;I had been counting on ESPN's 'projected points' to help guide me to victory ... it's working about as well as flipping a coin (see my record above).&lt;/p&gt;
&lt;p&gt;I had a couple of days off from work this week and some time to tinker with Python, so I thought, what the hell, let's see what I can do.&lt;/p&gt;
&lt;p&gt;Just to see what other people had done I did a quick &lt;a href="http://www.google.com"&gt;Google Search&lt;/a&gt; and found &lt;a href="http://danielfrg.com/blog/2013/04/01/nba-scraping-data/"&gt;someone that had done what I was trying to do with data from the NBA in 2013&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using their post as a model I set to work.&lt;/p&gt;
&lt;p&gt;The basic strategy I am mimicking is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get the Teams and put them into a dictionary&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;Get the 'matches' and put them into a dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get the player stats and put them into a dictionary for later analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I start of importing some standard libraries &lt;code&gt;pandas&lt;/code&gt;, &lt;code&gt;requests&lt;/code&gt;, and &lt;code&gt;BeautifulSoup&lt;/code&gt; (the other libraries are for later).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I need to set up some variables. &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;&lt;code&gt;BeautifulSoup&lt;/code&gt; is a Python library for pulling data out of HTML and XML files.&lt;/a&gt;. It's pretty sweet. The code below is declaring a URL to scrape and then users the &lt;code&gt;requests&lt;/code&gt; library to get the actual &lt;code&gt;HTML&lt;/code&gt; of the page and put it into a variable called &lt;code&gt;r&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://espn.go.com/nfl/teams&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;r&lt;/code&gt; has a method called &lt;code&gt;text&lt;/code&gt; which I'll use with &lt;code&gt;BeautifulSoup&lt;/code&gt; to create the &lt;code&gt;soup&lt;/code&gt;. The &lt;code&gt;'lxml'&lt;/code&gt; declares the parser type to be used. The default is &lt;code&gt;lxml&lt;/code&gt; and when I left it off I was presented with a warning, so I decided to explicitly state which parser I was going to be using to avoid the warning.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;soup = BeautifulSoup(r.text, &amp;#39;lxml&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next I use the &lt;code&gt;find_all&lt;/code&gt; function from &lt;code&gt;BeautifulSoup&lt;/code&gt;. The cool thing about &lt;code&gt;find_all&lt;/code&gt; is that you can either pass just a tag element, i.e. &lt;code&gt;li&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt;, but you can add an additional &lt;code&gt;class_&lt;/code&gt; argument (notice the underscore at the end ... I missed it more than once and got an error because &lt;code&gt;class&lt;/code&gt; is a keyword used by &lt;code&gt;Python&lt;/code&gt;). Below I'm getting all of the `ul' elements of the class type 'medium-logos'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tables = soup.find_all(&amp;#39;ul&amp;#39;, class_=&amp;#39;medium-logos&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I set up some &lt;code&gt;list&lt;/code&gt; variables to hold the items I'll need for later use to create my &lt;code&gt;dictionary&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;teams = []
prefix_1 = []
prefix_2 = []
teams_urls = []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we do some &lt;em&gt;actual&lt;/em&gt; programming:&lt;/p&gt;
&lt;p&gt;Using a nested &lt;code&gt;for&lt;/code&gt; loop to find all of the &lt;code&gt;li&lt;/code&gt; elements in the variable called &lt;code&gt;lis&lt;/code&gt; which is based on the variable &lt;code&gt;tables&lt;/code&gt; (recall this is all of the &lt;code&gt;HTML&lt;/code&gt; from the page I scrapped that has &lt;em&gt;only&lt;/em&gt; the tags that match &lt;code&gt;&amp;lt;ul class='medium-logos&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt; and all of the content between them).&lt;/p&gt;
&lt;p&gt;The nested &lt;code&gt;for&lt;/code&gt; loop creates 2 new variables which are used to populate the 4 lists from above. The creating of the &lt;code&gt;info&lt;/code&gt; variable gets the a tag from the li tags. The &lt;code&gt;url&lt;/code&gt; variable takes the &lt;code&gt;href&lt;/code&gt; tag from the &lt;code&gt;info&lt;/code&gt; variable. In order to add an item to a list (remember, all of the lists above are empty at this point) we have to invoke the method &lt;code&gt;append&lt;/code&gt; on each of the lists with the data that we care about (as we look through).&lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;split&lt;/code&gt; can be used on a string (which &lt;code&gt;url&lt;/code&gt; is). It allows you to take a string apart based on a passed through value and convert the output into a list. This is super useful with URLs since there are many cases where we're trying to get to the path. Using &lt;code&gt;split('/')&lt;/code&gt; allows the URL to be broken into it's constituent parts. The negative indexes used allows you to go from right to left instead of left to right.&lt;/p&gt;
&lt;p&gt;To really break this down a bit, if we looked at just one of the URLs we'd get this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://www.espn.com/nfl/team/_/name/ten/tennessee-titans&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;split('/')&lt;/code&gt; command will turn the URL into this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;['http:', '', 'www.espn.com', 'nfl', 'team', '_', 'name', 'ten', 'tennessee-titans']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Using the negative index allows us to get the right most 2 values that we need.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tables&lt;/span&gt;:
    &lt;span class="nv"&gt;lis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;li&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;li&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;lis&lt;/span&gt;:
        &lt;span class="nv"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;li&lt;/span&gt;.&lt;span class="nv"&gt;h5&lt;/span&gt;.&lt;span class="nv"&gt;a&lt;/span&gt;
        &lt;span class="nv"&gt;teams&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;info&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;href&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]
        &lt;span class="nv"&gt;teams_urls&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;prefix_1&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;prefix_2&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we put it all together into a dictionary&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dic = {&amp;#39;url&amp;#39;: teams_urls, &amp;#39;prefix_2&amp;#39;: prefix_2, &amp;#39;prefix_1&amp;#39;: prefix_1, &amp;#39;team&amp;#39;: teams}
teams = pd.DataFrame(dic)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the end of part 1. Parts 2 and 3 will be coming later this week.&lt;/p&gt;
&lt;p&gt;I've also posted all of the code to my &lt;a href="https://github.com/miloardot"&gt;GitHub Repo&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>Pushing Changes from Pythonista to GitHub - Step 1</title><link href="https://www.ryancheley.com/pushingchangesfrompythonistatogithub-step1.html" rel="alternate"></link><published>2016-10-29T16:00:00+02:00</published><updated>2016-10-29T16:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-29:/pushingchangesfrompythonistatogithub-step1.html</id><summary type="html">&lt;p&gt;With the most recent release of the iOS app &lt;a href="https://workflow.is"&gt;Workflow&lt;/a&gt; I was toying with the idea of writing a workflow that would allow me to update / add a file to a &lt;a href="https://github.com"&gt;GitHub repo&lt;/a&gt; via a workflow.&lt;/p&gt;
&lt;p&gt;My thinking was that since &lt;a href="http://omz-software.com/pythonista/"&gt;Pythonista&lt;/a&gt; is only running local files on my iPad …&lt;/p&gt;</summary><content type="html">&lt;p&gt;With the most recent release of the iOS app &lt;a href="https://workflow.is"&gt;Workflow&lt;/a&gt; I was toying with the idea of writing a workflow that would allow me to update / add a file to a &lt;a href="https://github.com"&gt;GitHub repo&lt;/a&gt; via a workflow.&lt;/p&gt;
&lt;p&gt;My thinking was that since &lt;a href="http://omz-software.com/pythonista/"&gt;Pythonista&lt;/a&gt; is only running local files on my iPad if I could use a workflow to access the api elements to push the changes to my repo that would be pretty sweet.&lt;/p&gt;
&lt;p&gt;In order to get this to work I'd need to be able to accomplosh the following things (not necessarily in this order)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have the workflow get a list of all of the repositories in my GitHub&lt;/li&gt;
&lt;li&gt;Get the current contents of the app to the clip board&lt;/li&gt;
&lt;li&gt;Commit the changes to the master of the repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have been able to write a &lt;a href="https://workflow.is/workflows/8e986867ff074dbe89c7b0bf9dcb72f5"&gt;Workflow&lt;/a&gt; that will get all of the public repos of a specified github user. Pretty straight forward stuff.&lt;/p&gt;
&lt;p&gt;The next thing I'm working on getting is to be able to commit the changes from the clip board to a specific file in the repo (if one is specified) otherwise a new file would be created.&lt;/p&gt;
&lt;p&gt;I really just want to 'have the answer' for this, but I know that the journey will be the best part of getting this project completed.&lt;/p&gt;
&lt;p&gt;So for now, I continue to read the &lt;a href="https://developer.github.com/v3/"&gt;GitHub API Documentation&lt;/a&gt; to discover exactly how to do what I want to do.&lt;/p&gt;</content><category term="Automation"></category><category term="Github"></category><category term="Workflow"></category></entry><entry><title>An Update to my first Python Script</title><link href="https://www.ryancheley.com/an-update-to-my-first-python-script.html" rel="alternate"></link><published>2016-10-22T16:00:00+02:00</published><updated>2016-10-22T16:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-22:/an-update-to-my-first-python-script.html</id><summary type="html">&lt;p&gt;Nothing can ever really be considered &lt;strong&gt;done&lt;/strong&gt; when you're talking about programming, right?&lt;/p&gt;
&lt;p&gt;I decided to try and add images to the &lt;a href="https://github.com/miloardot/python-files/commit/e603eb863dbba169938b63df3fa82263df942984"&gt;python script I wrote last week&lt;/a&gt; and was able to do it, with not too much hassel.&lt;/p&gt;
&lt;p&gt;The first thing I decided to do was to update the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nothing can ever really be considered &lt;strong&gt;done&lt;/strong&gt; when you're talking about programming, right?&lt;/p&gt;
&lt;p&gt;I decided to try and add images to the &lt;a href="https://github.com/miloardot/python-files/commit/e603eb863dbba169938b63df3fa82263df942984"&gt;python script I wrote last week&lt;/a&gt; and was able to do it, with not too much hassel.&lt;/p&gt;
&lt;p&gt;The first thing I decided to do was to update the code on &lt;code&gt;pythonista&lt;/code&gt; on my iPad Pro and verify that it would run.&lt;/p&gt;
&lt;p&gt;It took some doing (mostly because I &lt;em&gt;forgot&lt;/em&gt; that the attributes in an &lt;code&gt;img&lt;/code&gt; tag included what I needed ... initially I was trying to programatically get the name of the person from the image file itelf using &lt;a href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt; ... it didn't work out well).&lt;/p&gt;
&lt;p&gt;Once that was done I branched the &lt;code&gt;master&lt;/code&gt; on GitHub into a &lt;code&gt;development&lt;/code&gt; branch and copied the changes there. Once that was done I performed a &lt;strong&gt;pull request&lt;/strong&gt; on the macOS GitHub Desktop Application.&lt;/p&gt;
&lt;p&gt;Finally, I used the macOS GitHub app to merge my &lt;strong&gt;pull request&lt;/strong&gt; from &lt;code&gt;development&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt; and now have the changes.&lt;/p&gt;
&lt;p&gt;The updated script will now also get the image data to display into the multi markdown table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Mike&lt;/span&gt; &lt;span class="n"&gt;Cheley&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;CEO&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Creative&lt;/span&gt; &lt;span class="n"&gt;Director&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Mike_Cheley.png &amp;quot;Mike Cheley&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ozzy&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Official&lt;/span&gt; &lt;span class="n"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Ozzy.png &amp;quot;Ozzy&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Jay&lt;/span&gt; &lt;span class="n"&gt;Sant&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Vice&lt;/span&gt; &lt;span class="n"&gt;President&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Jay_Sant.png &amp;quot;Jay Sant&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Shawn&lt;/span&gt; &lt;span class="n"&gt;Isaac&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Vice&lt;/span&gt; &lt;span class="n"&gt;President&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Shawn_Isaac.png &amp;quot;Shawn Isaac&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Jason&lt;/span&gt; &lt;span class="n"&gt;Gurzi&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;SEM&lt;/span&gt; &lt;span class="n"&gt;Specialist&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Jason_Gurzi.png &amp;quot;Jason Gurzi&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Yvonne&lt;/span&gt; &lt;span class="n"&gt;Valles&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Director&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Impressions&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Yvonne_Valles.png &amp;quot;Yvonne Valles&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ed&lt;/span&gt; &lt;span class="n"&gt;Lowell&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Senior&lt;/span&gt; &lt;span class="n"&gt;Designer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Ed_Lowell.png &amp;quot;Ed Lowell&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Paul&lt;/span&gt; &lt;span class="n"&gt;Hasas&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Interface&lt;/span&gt; &lt;span class="n"&gt;Designer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Paul_Hasas.png &amp;quot;Paul Hasas&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Alan&lt;/span&gt; &lt;span class="n"&gt;Schmidt&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Senior&lt;/span&gt; &lt;span class="n"&gt;Web&lt;/span&gt; &lt;span class="n"&gt;Developer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Alan_Schmidt.png &amp;quot;Alan Schmidt&amp;quot;)|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which gets displayed as this:&lt;/p&gt;
&lt;p&gt;Name            Title                           Image&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mike Cheley     CEO/Creative Director           &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Mike_Cheley.png" title="Mike Cheley"&gt;
  Ozzy            Official Greeter                &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Ozzy.png" title="Ozzy"&gt;
  Jay Sant        Vice President                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Jay_Sant.png" title="Jay Sant"&gt;
  Shawn Isaac     Vice President                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Shawn_Isaac.png" title="Shawn Isaac"&gt;
  Jason Gurzi     SEM Specialist                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Jason_Gurzi.png" title="Jason Gurzi"&gt;
  Yvonne Valles   Director of First Impressions   &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Yvonne_Valles.png" title="Yvonne Valles"&gt;
  Ed Lowell       Senior Designer                 &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Ed_Lowell.png" title="Ed Lowell"&gt;
  Paul Hasas      User Interface Designer         &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Paul_Hasas.png" title="Paul Hasas"&gt;
  Alan Schmidt    Senior Web Developer            &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Alan_Schmidt.png" title="Alan Schmidt"&gt;&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>My First Python Script that does 'something'</title><link href="https://www.ryancheley.com/my%E2%80%93first%E2%80%93python-script-that-does-something.html" rel="alternate"></link><published>2016-10-15T21:33:00+02:00</published><updated>2016-10-15T21:33:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-15:/my–first–python-script-that-does-something.html</id><summary type="html">&lt;p&gt;I've been interested in python as a tool for a while and today I had the chance to try and see what I could do.&lt;/p&gt;
&lt;p&gt;With my 12.9 iPad Pro set up at my desk, I started out. I have &lt;a href="http://omz-software.com/pythonista/"&gt;Ole Zorn's Pythonista 3&lt;/a&gt; installed so I started on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been interested in python as a tool for a while and today I had the chance to try and see what I could do.&lt;/p&gt;
&lt;p&gt;With my 12.9 iPad Pro set up at my desk, I started out. I have &lt;a href="http://omz-software.com/pythonista/"&gt;Ole Zorn's Pythonista 3&lt;/a&gt; installed so I started on my first script.&lt;/p&gt;
&lt;p&gt;My first task was to scrape something from a website. I tried to start with a website listing doctors, but for some reason the html rendered didn't include anything useful.&lt;/p&gt;
&lt;p&gt;So the next best thing was to find a website with staff listed on it. I used my dad's company and his &lt;a href="http://www.graphtek.com/Our-Team"&gt;staff listing&lt;/a&gt; as a starting point.&lt;/p&gt;
&lt;p&gt;I started with a quick Google search to find Pythonista Web Scrapping and came across &lt;a href="https://forum.omz-software.com/topic/1513/screen-scraping"&gt;this&lt;/a&gt; post on the Pythonista forums.&lt;/p&gt;
&lt;p&gt;That got me this much of my script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;myurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.graphtek.com/Our-Team&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_beautiful_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bs4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;html5lib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_beautiful_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I needed to see how to start traversing the html to get the elements that I needed. I recalled something I read a while ago and was (luckily) able to find some &lt;a href="https://first-web-scraper.readthedocs.io/en/latest/"&gt;help&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That got me this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tablemgmt = soup.findAll('div', attrs={'id':'our-team'})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This was close, but it would only return 2 of the 3 &lt;code&gt;div&lt;/code&gt; tags I cared about (the management team has a different id for some reason ... )&lt;/p&gt;
&lt;p&gt;I did a search for regular expressions and Python and found this useful &lt;a href="http://stackoverflow.com/questions/24748445/beautiful-soup-using-regex-to-find-tags"&gt;stackoverflow&lt;/a&gt; question and saw that if I updated my imports to include &lt;code&gt;re&lt;/code&gt; then I could use regular expressions.&lt;/p&gt;
&lt;p&gt;Great, update the imports section to this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import bs4, requests, re&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And added &lt;code&gt;re.compile&lt;/code&gt; to my &lt;code&gt;findAll&lt;/code&gt; to get this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tablemgmt = soup.findAll('div', attrs={'id':re.compile('our-team')})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now I had all 3 of the &lt;code&gt;div&lt;/code&gt; tags I cared about.&lt;/p&gt;
&lt;p&gt;Of course the next thing I wanted to do was get the information i cared out of the structure &lt;code&gt;tablemgmt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When I printed out the results I noticed leading and trailing square brackets and eveytime I tried to do something I'd get an error.&lt;/p&gt;
&lt;p&gt;It took an embarrassingly long time to realize that I needed to treat &lt;code&gt;tablemgmt&lt;/code&gt; as an array. Whoops!&lt;/p&gt;
&lt;p&gt;Once I got through that it was straight forward to loop through the data and output it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;list_of_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tablemgmt&lt;/span&gt;:

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;.&lt;span class="nv"&gt;findAll&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;span&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;class&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;team-name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;span class=&amp;quot;team-name&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:

&lt;span class="nv"&gt;list_of_names&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;list_of_titles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tablemgmt&lt;/span&gt;:

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;.&lt;span class="nv"&gt;findAll&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;span&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;class&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;team-title&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;span class=&amp;quot;team-title&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:

&lt;span class="nv"&gt;list_of_titles&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last bit I wanted to do was to add some headers &lt;strong&gt;and&lt;/strong&gt; make the lists into a two column multimarkdown table.&lt;/p&gt;
&lt;p&gt;OK, first I needed to see how to 'combine' the lists into a multidimensional array. Another google search and ... success. Of course the answer would be on &lt;a href="http://stackoverflow.com/questions/12040989/printing-all-the-values-from-multiple-lists-at-the-same-time"&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With my knowldge of looping through arrays and the function &lt;code&gt;zip&lt;/code&gt; I was able to get this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;zip&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;list_of_names&lt;/span&gt;, &lt;span class="nv"&gt;list_of_titles&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which would output this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;|Mike Cheley|CEO/Creative Director|

|Ozzy|Official Greeter|

|Jay Sant|Vice President|

|Shawn Isaac|Vice President|

|Jason Gurzi|SEM Specialist|

|Yvonne Valles|Director of First Impressions|

|Ed Lowell|Senior Designer|

|Paul Hasas|User Interface Designer|

|Alan Schmidt|Senior Web Developer|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is close, however, it still needs headers.&lt;/p&gt;
&lt;p&gt;No problem, just add some static lines to print out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;print(&amp;#39;| Name | Title |&amp;#39;)
print(&amp;#39;| --- | --- |&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And voila, we have a multimarkdown table that was scrapped from a web page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;| Name | Title |
| --- | --- |
|Mike Cheley|CEO/Creative Director|
|Ozzy|Official Greeter|
|Jay Sant|Vice President|
|Shawn Isaac|Vice President|
|Jason Gurzi|SEM Specialist|
|Yvonne Valles|Director of First Impressions|
|Ed Lowell|Senior Designer|
|Paul Hasas|User Interface Designer|
|Alan Schmidt|Senior Web Developer|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which will render to this:&lt;/p&gt;
&lt;p&gt;Name            Title&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mike Cheley     CEO/Creative Director
  Ozzy            Official Greeter
  Jay Sant        Vice President
  Shawn Isaac     Vice President
  Jason Gurzi     SEM Specialist
  Yvonne Valles   Director of First Impressions
  Ed Lowell       Senior Designer
  Paul Hasas      User Interface Designer
  Alan Schmidt    Senior Web Developer&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Converting Writing Examples from doc to markdown: My Process</title><link href="https://www.ryancheley.com/converting-writing-examples-from-doc-to-markdown-my-process.html" rel="alternate"></link><published>2016-10-07T16:21:00+02:00</published><updated>2016-10-07T16:21:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-07:/converting-writing-examples-from-doc-to-markdown-my-process.html</id><summary type="html">&lt;h1&gt;Converting Writing Examples from doc to markdown: My Process&lt;/h1&gt;
&lt;p&gt;All of my writing examples were written while attending the &lt;a href="http://www.arizona.edu"&gt;University of Arizona&lt;/a&gt; when I was studying Economics.&lt;/p&gt;
&lt;p&gt;These writing examples are from 2004 and were written in either &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Microsoft Word&lt;/a&gt; OR the &lt;a href="https://en.wikipedia.org/wiki/OpenOffice.org"&gt;OpenOffice Writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before getting the files onto &lt;a href="https://github.com/miloardot/"&gt;Github …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Converting Writing Examples from doc to markdown: My Process&lt;/h1&gt;
&lt;p&gt;All of my writing examples were written while attending the &lt;a href="http://www.arizona.edu"&gt;University of Arizona&lt;/a&gt; when I was studying Economics.&lt;/p&gt;
&lt;p&gt;These writing examples are from 2004 and were written in either &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Microsoft Word&lt;/a&gt; OR the &lt;a href="https://en.wikipedia.org/wiki/OpenOffice.org"&gt;OpenOffice Writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before getting the files onto &lt;a href="https://github.com/miloardot/"&gt;Github&lt;/a&gt; I wanted to convert them into &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;markdown&lt;/a&gt; so that they would be in plain text.&lt;/p&gt;
&lt;p&gt;I did this mostly as an exercise to see if I could, but in going through it I'm glad I did. Since the files were written in .doc format, and the &lt;a href="https://en.wikipedia.org/wiki/Doc_(computing)"&gt;.doc&lt;/a&gt; format has been replaced with the &lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML"&gt;.docx&lt;/a&gt; format it could be that at some point my work would be inaccessible. Now, I don't have to worry about that.&lt;/p&gt;
&lt;p&gt;So, how did I get from a .doc file written in 2004 to a converted markdown file created in 2016? Here's how:&lt;/p&gt;
&lt;h2&gt;Round 1&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Downloaded the Doc files from my Google Drive to my local Desktop and saved them into a folder called &lt;code&gt;Summaries&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each week of work had it's own directory, so I had to go into each directory individually (not sure how to do recursive work &lt;em&gt;yet&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Each of the files was written in 2004 so I had to change the file types from .doc to .docx. This was accomplished with this command:&lt;br&gt;
&lt;code&gt;textutil -convert docx *.doc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Once the files were converted from .doc to .docx I ran the following commands:&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd ../yyyymmdd&lt;/code&gt; where yyyy = YEAR, mm = Month in 2 digits; dd = day in 2 digits&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for f in *\ *; do mv "$f" "${f// /_}"; done&lt;/code&gt; &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^1&lt;/a&gt;- this would replace the space character with an underscore. this was needed so I could run the next command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for file in $(ls *.docx); do pandoc -s -S "${file}" -o "${file%docx}md"; done&lt;/code&gt; &lt;a href="http://stackoverflow.com/questions/11023543/recursive-directory-parsing-with-pandoc-on-mac"&gt;\^2&lt;/a&gt; - this uses pandoc to convert the docx file into valid markdown files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv *.md ../&lt;/code&gt; - used to move the .md files into the next directory up&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;With that done I just needed to move the files from my &lt;code&gt;Summaries&lt;/code&gt; directory to my &lt;code&gt;writing-examples&lt;/code&gt; github repo. I'm using the GUI for this so I have a folder on my desktop called &lt;code&gt;writing-examples&lt;/code&gt;. To move them I just used &lt;code&gt;mv Summaries/*.md writing-examples/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So that's it. Nothing &lt;strong&gt;too&lt;/strong&gt; fancy, but I wanted to write it down so I can look back on it later and know what the heck I did.&lt;/p&gt;
&lt;h2&gt;Round 2&lt;/h2&gt;
&lt;p&gt;The problem I'm finding is that the bulk conversion using &lt;code&gt;textutil&lt;/code&gt; isn't keeping the footnotes from the original .doc file. These are important though, as they reference the original work. Ugh!&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^5&lt;/a&gt; to recursively replace the spaces in the files names with underscores:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -depth -name '* *' \ | while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"|tr ' ' _)" ; done&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="http://hints.macworld.com/article.php?story=20060309220909384"&gt;\^3&lt;/a&gt; to convert all of the .doc to .docx at the same time&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name *.doc -exec textutil -convert docx '{}' \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="https://gist.github.com/bzerangue/2504041"&gt;\^4&lt;/a&gt; to generate the markdown files recursively:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name "*.docx" | while read i; do pandoc -f docx -t markdown "$i" -o "${i%.*}.md"; done;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command to move the markdown files:&lt;/p&gt;
&lt;p&gt;Never figured out what to do here :(&lt;/p&gt;
&lt;h2&gt;Round 3&lt;/h2&gt;
&lt;p&gt;OK, I just gave up on using &lt;code&gt;textutil&lt;/code&gt; for the conversion. It wasn't keeping the footnotes on the conversion from .doc to .docx.&lt;/p&gt;
&lt;p&gt;Instead I used the &lt;a href="https://drive.google.com/"&gt;Google Drive&lt;/a&gt; add in &lt;a href="https://www.driveconverter.com"&gt;Converter for Google Drive Document&lt;/a&gt;. It converted the .doc to .docx &lt;strong&gt;AND&lt;/strong&gt; kept the footnotes like I wanted it to.&lt;/p&gt;
&lt;p&gt;Of course, it output all of the files to the same directory, so the work I did to get the recursion to work previously can't be applied here &lt;strong&gt;sigh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, the only commands to run from the terminal are the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$f&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${f// /_}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;underscore&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="kr"&gt;run&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="kr"&gt;next&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file%docx}md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="kr"&gt;to&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;docx&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="nb"&gt;val&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Round 4&lt;/h2&gt;
&lt;p&gt;Like any ~~good~~ ~~bad~~ lazy programer I've opted for a rute force method of converting the &lt;code&gt;doc&lt;/code&gt; files to &lt;code&gt;docx&lt;/code&gt; files. I opened each one in Word on macOS and saved as &lt;code&gt;docx&lt;/code&gt;. Problem solved ¯_(ツ)_/¯&lt;/p&gt;
&lt;p&gt;Step 1: used the command I found here &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^7&lt;/a&gt; to recursively replace the spaces in the files names with underscores &lt;code&gt;_&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;find . -depth -name '* *' \&lt;/code&gt;&lt;br&gt;
&lt;code&gt;| while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"|tr ' ' _)" ; done&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Step 2: Use the command found here &lt;a href="https://gist.github.com/bzerangue/2504041"&gt;\^6&lt;/a&gt; to generate the markdown files recursively:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name "*.docx" | while read i; do pandoc -f docx -t markdown "$i" -o "${i%.*}.md"; done;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Step 3: Add the files to my GitHub repo &lt;code&gt;graduate-writing-examples&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For this I used the GitHub macOS Desktop App to create a repo in my Documents directory, so it lives in &lt;code&gt;~/Documents/graduate-writing-examples/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I then used the finder to locate all of the &lt;code&gt;md&lt;/code&gt; files in the &lt;code&gt;Summaries&lt;/code&gt; folder and then dragged them into the repo. There were 2 files with the same name &lt;code&gt;Rose_Summary&lt;/code&gt; and &lt;code&gt;Libecap_and_Johnson_Summary&lt;/code&gt;. While I'm sure that I could have figured out how to accomplish this with the command line, this took less than 1 minute, and I had just spent 5 minutes trying to find a terminal command to do it. Again, the lazy programmer wins.&lt;/p&gt;
&lt;p&gt;Once the files were in the local repo I committed the files and &lt;em&gt;boom&lt;/em&gt; they were in my &lt;a href="https://github.com/miloardot/graduate-writing-examples"&gt;GitHub Writing Examples&lt;/a&gt; repo.&lt;/p&gt;</content><category term="Writing"></category></entry><entry><title>Vin's Last Game</title><link href="https://www.ryancheley.com/vins-last-game.html" rel="alternate"></link><published>2016-10-03T02:21:00+02:00</published><updated>2016-10-03T02:21:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-03:/vins-last-game.html</id><summary type="html">&lt;p&gt;Twelve years ago today Steve Finley hit a Grand Slam in the 9th to clinch the NL West title against the Giants. Today, the Dodgers have already won the NL West title so we won't have anything like that again, but it is Vin Scully's last game to be called …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Twelve years ago today Steve Finley hit a Grand Slam in the 9th to clinch the NL West title against the Giants. Today, the Dodgers have already won the NL West title so we won't have anything like that again, but it is Vin Scully's last game to be called. EVER.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I remember watching Dodgers games on KTLA with my grandmother in the 80's. I thought baseball was slow and boring, but the way that Vin would tell stories was able to keep me interested.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vin is able to call a game, with no emotion, just tell the story of the game. Dropping tidbits about this player or that player. Always knowing more about the people in the game while also knowing so much about the game.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;He's quite litterally seen everything. From perfect games to triple plays. He called Hank Aaron's historic record breaking home run. He even saw a pitcher throwing a perfect game through 7 get pulled (I'm looking at you DAve Roberts).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the last game he ever called the Dodgers are in playoff form. This ... is not a good thing. The Dodgers are historically an awful performing playoff team, and so far, they have managed to lose 4 of their last 5 and are working on making it 5 of 6.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's a dark and dreary day in San Francisco. It's raining in San Francisco. Kenta Maeda is pitching for the Dodgers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dodgers first out of the game is a Stikeout of Hunter Pence ... but the Dodgers are down 0-2. Might be a long one today&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The game ended not with a win, but a whimper as the Dodgers lost to the Giants 7-1.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As Vin gave his last call it wasn't a great call like Charlie Culberson's Home Run to win the West (and the game) last weekend. It was a pop fly that sent the Giants back to New York to face the Mets.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Five years ago I never wanted him to retire. This season, I'm glad he decided to put the microphone up. A little slower in the outfield, not quite as quick with the bat, still the greatest broadcaster that ever lived.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Vin was teaching lessons all those years, not just calling games. It was only in his last season, his last game, that I really was able to hear them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Realize that you are blessed to do what you do.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Don't be sad that something has ended, but be happy that it had started.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last one gets me in a way I can't quite describe. Maybe it's where I'm at in life right now, maybe it's that it would resonate with me regardless, but it is a nice reminder, that life is what you make of it. Don't be sad that a thing has ended, but instead be happy that you had a chance to have it happen at all.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Great words Vin. Thank you&lt;/p&gt;</content><category term="Musings"></category></entry></feed>