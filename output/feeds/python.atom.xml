<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Place on the Internet - Python</title><link href="https://www.ryancheley.com/" rel="alternate"></link><link href="https://www.ryancheley.com/feeds/python.atom.xml" rel="self"></link><id>https://www.ryancheley.com/</id><updated>2021-06-06T18:11:00+02:00</updated><entry><title>My First Python Package</title><link href="https://www.ryancheley.com/my-first-python-package.html" rel="alternate"></link><published>2021-06-06T18:11:00+02:00</published><updated>2021-06-06T18:11:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-06-06:/my-first-python-package.html</id><summary type="html">&lt;p&gt;A few months ago I was inspired by &lt;a href="https://simonwillison.net" title="Simon, creator of Datasette"&gt;Simon Willison&lt;/a&gt; and his project &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and it‚Äôs related ecosystem to write a Python Package for it.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; to track my time at work and I thought this would be a great opportunity use that data with &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few months ago I was inspired by &lt;a href="https://simonwillison.net" title="Simon, creator of Datasette"&gt;Simon Willison&lt;/a&gt; and his project &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and it‚Äôs related ecosystem to write a Python Package for it.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; to track my time at work and I thought this would be a great opportunity use that data with &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; and see if I couldn‚Äôt answer some interesting questions, or at the very least, do some neat data discovery.&lt;/p&gt;
&lt;p&gt;The purpose of this package is to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a SQLite database containing data from your &lt;a href="https://toggl.com" title="Toggl - a time tracking tool"&gt;toggl&lt;/a&gt; account&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I followed the &lt;a href="https://packaging.python.org/tutorials/packaging-projects/" title="How do I add a package to PyPi?"&gt;tutorial for committing a package to PyPi&lt;/a&gt; and did the first few pushes manually. Then, using a GitHub action from one of Simon‚Äôs &lt;a href="https://datasette.io" title="Datasette - An awesome tool for data exploration and publishing"&gt;Datasette&lt;/a&gt; projects, I was able to automate it when I make a release on GitHub!&lt;/p&gt;
&lt;p&gt;Since the initial commit on March 7 (my birthday BTW) I‚Äôve had 10 releases, with the most recent one coming yesterday which removed an issue with one of the tables reporting back an API key which, if published on the internet could be a bad thing ... so hooray for security enhancements!&lt;/p&gt;
&lt;p&gt;Anyway, it was a fun project, and got me more interested in authoring Python packages. I‚Äôm hoping to do a few more related to &lt;a href="https://datasette.io"&gt;Datasette&lt;/a&gt; (although I‚Äôm not sure what to write honestly!).&lt;/p&gt;
&lt;p&gt;Be sure to check out the package on &lt;a href="https://pypi.org/project/toggl-to-sqlite/" title="toggl-to-SQLite"&gt;PyPi.org&lt;/a&gt; and the source code on &lt;a href="https://github.com/ryancheley/toggl-to-sqlite/" title="GitHub repo of toggl-to-sqlite"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"></category><category term="datasette"></category><category term="python"></category><category term="python package"></category></entry><entry><title>Writing a Raffle Script</title><link href="https://www.ryancheley.com/writing-a-raffle-script.html" rel="alternate"></link><published>2020-06-29T05:24:00+02:00</published><updated>2020-06-29T05:24:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-06-29:/writing-a-raffle-script.html</id><summary type="html">&lt;p&gt;Due to the COVID Pandemic, many things are ... different. One thing that needed to be different this year was the way that students at my daughters middle school got to spend their ‚ÄòHero Points‚Äô.&lt;/p&gt;
&lt;p&gt;Hero Points are points earned for good behavior. In a typical year the students would get ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Due to the COVID Pandemic, many things are ... different. One thing that needed to be different this year was the way that students at my daughters middle school got to spend their ‚ÄòHero Points‚Äô.&lt;/p&gt;
&lt;p&gt;Hero Points are points earned for good behavior. In a typical year the students would get to spend them at the student store, but with all of the closures, this wasn‚Äôt possible. For the students in my daughter‚Äôs 8th grade this was a big deal as they‚Äôre going on to High School next year, so we can just roll them over to next year!&lt;/p&gt;
&lt;p&gt;Instead of having the kids ‚Äòspend‚Äô their Hero Points the PTO offered up the solution of a raffle based on the number of Hero Points they had. But they weren‚Äôt sure how to do it.&lt;/p&gt;
&lt;p&gt;I jumped at the chance to write something like this up (especially after all of my works on the PyBites &lt;a href="https://codechalleng.es" title="CodeChalleng.es"&gt;CodeChalleng.es&lt;/a&gt; platform) and so my wife volunteered me üòÅ&lt;/p&gt;
&lt;p&gt;In order to really get my head wrapped around the problem, I wanted to treat my solution like a real world analog. For example, in a real work raffle, when you get your tickets, there are two tickets with the same number. One that you get to hold onto, and one that goes into a bowl (or other vessel) that is randomly drawn from.&lt;/p&gt;
&lt;p&gt;How many tickets?&lt;/p&gt;
&lt;p&gt;Each student had some number of Hero Points. The PTO decided that 10 Hero Points would equal 1 Raffle ticket. Further, it was decided that we would ALWAYS round up. This means that 1 Hero Point would equal 1 Raffle Ticket, but that 9 Hero Points would also equal 1 Raffle Ticket.&lt;/p&gt;
&lt;h2&gt;Create tickets&lt;/h2&gt;
&lt;p&gt;I decided to use a &lt;code&gt;namedtuple&lt;/code&gt; to store the Raffle Tickets. Specifically, I store the student name, ticket numbers they drew, and the number of tickets they have&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Raffle_Tickets = namedtuple(&amp;#39;Raffle_Tickets&amp;#39;, [&amp;#39;name&amp;#39;, &amp;#39;ticket_numbers&amp;#39;, &amp;#39;tickets&amp;#39;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The list of student names and total Hero Points was stored in an Excel File (.xlsx) so I decided to use the Pandas Package to import it and manipulate it into a dataframe. The structure of the excel file is: Student Name, Grade, Available Points.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;df = pd.read_excel (r&amp;#39;/Users/ryan/Documents/python-files/8th  Hero Points.xlsx&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After a bit of review it turned out that there were a couple of students with NEGATIVE Hero Points. I‚Äôm not really sure how that happened, but I was not properly accounting for that originally, so I had to update my dataframe.&lt;/p&gt;
&lt;p&gt;The code below filters the dataframe to only return students with positive ‚ÄòAvailable Points‚Äô and then reindex. Finally, it calculates the number of Raffle tickets by dividing by 10 and rounding up using Python‚Äôs &lt;code&gt;ceil&lt;/code&gt; function. It puts all of this into a list called &lt;code&gt;tickets&lt;/code&gt;. We append our &lt;code&gt;tickets&lt;/code&gt; list to the original dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Available Points&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;]
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;reset_index&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;, &lt;span class="nv"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Available Points&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;:
    &lt;span class="nv"&gt;tickets&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ceil&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Tickets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;tickets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Our dataframe now looks like this: Student Name, Grade, Available Points, Tickets.&lt;/p&gt;
&lt;p&gt;Next, we need to figure out the Raffle ticket numbers. To do that I count the total number of Tickets available. I‚Äôm also using some extra features of the range function which allows me to set the start number of the Raffle.^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Tickets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ticket_number_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;
&lt;span class="nv"&gt;ticket_number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;range&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ticket_number_start&lt;/span&gt;, &lt;span class="nv"&gt;ticket_number_start&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;ticket_number_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once we have the list of ticket numbers I want to make a copy of it ‚Ä¶ remember there are two tickets, one that goes in the bowl and one that the student ‚Äògets‚Äô. Extending the metaphor of having two different, but related, tickets, I decided to use the &lt;code&gt;deepcopy&lt;/code&gt; function on the &lt;code&gt;ticket_number_list&lt;/code&gt; to create a list called &lt;code&gt;assigned_ticket_number_list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For more on deepcopy versus (shallow) copy &lt;a href="https://docs.python.org/3/library/copy.html" title="Deepcopy"&gt;see the documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, I reindex the dataframe just to add a bit more randomness to the list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;reindex&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;np&lt;/span&gt;.&lt;span class="k"&gt;random&lt;/span&gt;.&lt;span class="nv"&gt;permutation&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Assign Tickets&lt;/h2&gt;
&lt;p&gt;Next we‚Äôll assign the tickets randomly to the students.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;raffle_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tickets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assigned_ticket_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;raffle_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Raffle_Tickets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;student&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;student_ticket_list&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK ‚Ä¶ the code above looks pretty dense, but basically all we‚Äôre doing is looping through the students to determine the number of tickets they each have. Once we have that we loop through the available ticket numbers and randomly assign it to the student. At the end we add a &lt;code&gt;namedtuple&lt;/code&gt; object called &lt;code&gt;Raffle_Tickets&lt;/code&gt; that we defined above to the raffle_list to store the student‚Äôs name, their ticket numbers, and the number of tickets that they received.&lt;/p&gt;
&lt;h2&gt;Draw Tickets&lt;/h2&gt;
&lt;p&gt;Now we want to ‚Äòdraw‚Äô the tickets from the ‚Äòbowl‚Äô. We want to select 25 winners, but we also don‚Äôt want to have any student win more than once. Honestly, the ‚Äô25 winning tickets with 25 distinct winners‚Äô was the hardest part to get through.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;selected_tickets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number_index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number_index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;raffle_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;ticket_numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;ticket_number_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x for x in ticket_number_list if x not in r.ticket_numbers&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selected_tickets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selected_ticket_number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We see above that we‚Äôll select 25 items from the ‚Äòbowl‚Äô of tickets. We select the tickets one at a time. For each ticket we determine what set of tickets that selected ticket is in. Once we know that, we then remove &lt;strong&gt;all&lt;/strong&gt; tickets associated with that winning ticket so that we can guarantee 25 unique winners.&lt;/p&gt;
&lt;h2&gt;Find the Winners&lt;/h2&gt;
&lt;p&gt;We now have 25 tickets with 25 winners. Now we just need to get their names!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;winners_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;[]
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;raffle_list&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;ticket_numbers&lt;/span&gt;:
        &lt;span class="nv"&gt;student_winning_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;selected_tickets&lt;/span&gt;:
            &lt;span class="nv"&gt;student_winning_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
            &lt;span class="nv"&gt;winners_list&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;Raffle_Tickets&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;, &lt;span class="nv"&gt;student_winning_list&lt;/span&gt;, &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;student_winning_list&lt;/span&gt;&lt;span class="ss"&gt;))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, we construct a list of &lt;code&gt;namedtuple&lt;/code&gt; &lt;code&gt;Raffle\_Tickets&lt;/code&gt; only this time it‚Äôs just the winners.&lt;/p&gt;
&lt;h2&gt;Output winners&lt;/h2&gt;
&lt;p&gt;Whew! Now that we have the results we want to write them to a file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/ryan/PyBites/Raffle/winners_new.txt&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;w+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;winner&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;winners_list&lt;/span&gt;:
        &lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ticket_count&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;winner&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;percent_chance_of_winning&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;total_number_of_tickets&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
        &lt;span class="nv"&gt;percent_chance_of_winning_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;{:.2f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;.&lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;percent_chance_of_winning&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{winner.name} with winning ticket {winner.ticket_numbers[0]}. They had {tickets} tickets and a {percent_chance_of_winning_string}% chance of winning.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One of the reasons that I stored the number of tickets above was so that we could see what the chance was of a student winning given the number of tickets they started with.&lt;/p&gt;
&lt;p&gt;For each student we output to a line to a file with the student‚Äôs name, the winning tickets number, the number of tickets they started with and their chance of winning (the ratio of tickets the student had to the total number of starting tickets)&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This was a fun project for me because it was needed for a real world application, allowed me to use MANY of the concepts I learned at PyBites &lt;a href="https://codechalleng.es"&gt;CodeChalleng.es&lt;/a&gt; AND helped my daughter‚Äôs school.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Why am I doing this, versus just stating a &lt;code&gt;0&lt;/code&gt;? Mostly because I wanted the Raffle Ticket numbers to look like &lt;em&gt;real&lt;/em&gt; Raffle Ticket Numbers. How many times have you seen a raffle ticket with number 0 on it? &lt;a href="#ffn1"&gt;‚Ü©&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="PyBites"></category><category term="python"></category></entry><entry><title>Issues with psycopg2 ‚Ä¶ again</title><link href="https://www.ryancheley.com/issues-with-psycopg2-again.html" rel="alternate"></link><published>2020-05-03T14:00:00+02:00</published><updated>2020-05-03T14:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-05-03:/issues-with-psycopg2-again.html</id><summary type="html">&lt;p&gt;In a &lt;a href="/mischief-managed/"&gt;previous post&lt;/a&gt; I had written about an issue I‚Äôd had with upgrading, installing, or just generally maintaining the python package &lt;code&gt;psycopg2&lt;/code&gt; (&lt;a href="https://www.psycopg.org"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I ran into that issue again today, and thought to myself, ‚ÄúHey, I‚Äôve had this problem before AND wrote something up about it. Let ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a &lt;a href="/mischief-managed/"&gt;previous post&lt;/a&gt; I had written about an issue I‚Äôd had with upgrading, installing, or just generally maintaining the python package &lt;code&gt;psycopg2&lt;/code&gt; (&lt;a href="https://www.psycopg.org"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I ran into that issue again today, and thought to myself, ‚ÄúHey, I‚Äôve had this problem before AND wrote something up about it. Let me go see what I did last time.‚Äù&lt;/p&gt;
&lt;p&gt;I searched my site for &lt;code&gt;psycopg2&lt;/code&gt; and tried the solution, but I got the same &lt;a href="https://thegoodplace.fandom.com/wiki/Censored_Curse_Words"&gt;forking&lt;/a&gt; error.&lt;/p&gt;
&lt;p&gt;OK ‚Ä¶ let‚Äôs turn to the experts on the internet.&lt;/p&gt;
&lt;p&gt;After a while I came across &lt;a href="https://stackoverflow.com/questions/26288042/error-installing-psycopg2-library-not-found-for-lssl"&gt;this&lt;/a&gt; article on StackOverflow but this &lt;a href="https://stackoverflow.com/a/56146592"&gt;specific answer&lt;/a&gt; helped get me up and running.&lt;/p&gt;
&lt;p&gt;A side effect of all of this is that I upgraded from Python 3.7.5 to Python 3.8.1. I also updated all of my brew packages, and basically did a lot of cleaning up that I had neglected.&lt;/p&gt;
&lt;p&gt;Not how I expected to spend my morning, but productive nonetheless.&lt;/p&gt;</content><category term="Python"></category><category term="package"></category><category term="python"></category></entry><entry><title>Using Python to Check for File Changes in Excel</title><link href="https://www.ryancheley.com/using-python-to-check-for-file-changes-in-excel.html" rel="alternate"></link><published>2020-03-28T13:49:00+01:00</published><updated>2020-03-28T13:49:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-03-28:/using-python-to-check-for-file-changes-in-excel.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Data exchange in healthcare is ... harder than it needs to be. Not all partners in the healthcare arena understand and use technology to its fullest benefit.&lt;/p&gt;
&lt;p&gt;Take for example several health plans which want data reported to them for CMS (Centers for Medicare and Medicaid Services) regulations. They ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Data exchange in healthcare is ... harder than it needs to be. Not all partners in the healthcare arena understand and use technology to its fullest benefit.&lt;/p&gt;
&lt;p&gt;Take for example several health plans which want data reported to them for CMS (Centers for Medicare and Medicaid Services) regulations. They will ask their 'delegated' groups to fill out an excel file. As in, they expect you will &lt;em&gt;actually&lt;/em&gt; fill out an excel file, either by manually entering the data OR by potentially copying and pasting your data into their excel file.&lt;/p&gt;
&lt;p&gt;They will also, quite frequently, change their mind on what they want AND the order in which they want the data to appear in their excel file. But there's no change log to tell you what (if anything has changed). All that you will get is an email which states, "Here's the new template to be used for report XYZ" ... even if this 'new' report is the same as the last one that was sent.&lt;/p&gt;
&lt;p&gt;Some solutions might be to use versioning software (like Git) but all they will do is tell you that there is a difference, not &lt;em&gt;what&lt;/em&gt; the difference is. For example, when looking at a simple excel file added to git and using &lt;code&gt;git diff&lt;/code&gt; you see:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/Book3.xlsx b/Book3.xlsx&lt;/span&gt;
&lt;span class="gh"&gt;index 05a8b41..e96cdb5 100644&lt;/span&gt;
Binary files a/Book3.xlsx and b/Book3.xlsx differ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This has been a giant pain in the butt for a while, but with the recent shelter-in-place directives, I have a bit more time on the weekends to solve these kinds of problems.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Why Python of Course!&lt;/p&gt;
&lt;p&gt;Only two libraries are needed to make the comparison: (1) os, (2) pandas&lt;/p&gt;
&lt;p&gt;The basic idea is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Load the files&lt;/li&gt;
&lt;li&gt;use pandas to compare the files&lt;/li&gt;
&lt;li&gt;write out the differences, if they exist  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Load the Files&lt;/h3&gt;
&lt;p&gt;The code below loads the necessary libraries, and then loads the excel files into 2 pandas dataframes. One thing that my team has to watch out for are tab names that have leading spaces that aren't easy to see inside of excel. This can cause all sorts of nightmares from a troubleshooting perspective.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;file_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\\&lt;span class="n"&gt;path&lt;/span&gt;\\&lt;span class="n"&gt;to&lt;/span&gt;\\&lt;span class="n"&gt;original&lt;/span&gt;\\&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;original_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlsx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;file_new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\\&lt;span class="n"&gt;path&lt;/span&gt;\\&lt;span class="n"&gt;to&lt;/span&gt;\\&lt;span class="n"&gt;new&lt;/span&gt;\\&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlsx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sheet_name_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_of_sheet_in_original_file&lt;/span&gt;
&lt;span class="n"&gt;sheet_name_new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_of_sheet_in_new_file&lt;/span&gt;

&lt;span class="n"&gt;df1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_original&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet_name_original&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet_name_new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Use Pandas to compare&lt;/h3&gt;
&lt;p&gt;This is just a one liner, but is super powerful. Pandas DataFrames have a method to see if two frames are the same. So easy!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;data_frame_same = df1.equals(df2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Write out the differences if they exist:&lt;/h3&gt;
&lt;p&gt;First we specify where we're going to write out the differences to. We use &lt;code&gt;w+&lt;/code&gt; because we'll be writing out to a file AND potentially appending, depending on differences that are found. The &lt;code&gt;f.truncate(0)&lt;/code&gt; will clear out the file so that we get just the differences on this run. If we don't do this then we'll just append to the file over and over again ... and that can get confusing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;f.open(\\path\\to\\file\\to\\write\\differences.txt, &amp;#39;w+&amp;#39;)
f.truncate(0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we check to see if there are any differences and if they are, we write a simple message to our text file from above:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;data_frame_same&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;No differences detected&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If differences are found, then we loop through the lines of the file, finding the differences and and writing them to our file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*** WARNING *** Differences Found\n\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;header1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;header2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;header1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;header2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Headers are the same: {header1}\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Difference Found: {header1} -&amp;gt; {header2}\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ow"&gt;except&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above finds the largest column header list (the file may have had a new column added) and uses a &lt;code&gt;try/except&lt;/code&gt; to let us get the max of that to loop over.&lt;/p&gt;
&lt;p&gt;Next, we check for differences between &lt;code&gt;header1&lt;/code&gt; and &lt;code&gt;header2&lt;/code&gt;. If they are the same, we just write that out, if they aren't, we indicate that &lt;code&gt;header1&lt;/code&gt; was transformed to &lt;code&gt;header2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A sample of the output when the column headers have changed is below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="n"&gt;WARNING&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="n"&gt;Differences&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;

&lt;span class="n"&gt;Headers&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;beneficiary&lt;/span&gt; &lt;span class="kr"&gt;first&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Difference&lt;/span&gt; &lt;span class="n"&gt;Found&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;who&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Future Enhancements&lt;/h2&gt;
&lt;p&gt;In just using it a couple of times I've already spotted a couple of spots for enhancements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use &lt;code&gt;input&lt;/code&gt; to allow the user to enter the names/locations of the files&lt;/li&gt;
&lt;li&gt;Read the tab names and allow user to select from command line  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I'm looking forward to implementing the enhancements mentioned above to make this even more user friendly. In the mean time, it'll get the job done and allow someone on my team to work on something more interesting then comparing excel files to try (and hopefully find) differences.&lt;/p&gt;</content><category term="Python"></category><category term="excel"></category><category term="os"></category><category term="pandas"></category><category term="python"></category></entry><entry><title>Fixing a PyCharm issue when updating Python made via HomeBrew</title><link href="https://www.ryancheley.com/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew.html" rel="alternate"></link><published>2019-11-14T13:24:00+01:00</published><updated>2019-11-14T13:24:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-14:/fixing-a-pycharm-issue-when-updating-python-made-via-homebrew.html</id><summary type="html">&lt;p&gt;I‚Äôve written before about how easy it is to update your version of Python using homebrew. And it totally is easy.&lt;/p&gt;
&lt;p&gt;The thing that isn‚Äôt super clear is that when you do update Python via Homebrew, it seems to break your virtual environments in PyCharm. ü§¶‚Äç‚ôÇÔ∏è&lt;/p&gt;
&lt;p&gt;I did a ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I‚Äôve written before about how easy it is to update your version of Python using homebrew. And it totally is easy.&lt;/p&gt;
&lt;p&gt;The thing that isn‚Äôt super clear is that when you do update Python via Homebrew, it seems to break your virtual environments in PyCharm. ü§¶‚Äç‚ôÇÔ∏è&lt;/p&gt;
&lt;p&gt;I did a bit of searching to find this nice &lt;a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000306410-Cannot-use-system-interpreter-in-PyCharm-Pro-2018-1"&gt;post on the JetBrains forum&lt;/a&gt; which indicated&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;unfortunately it's a known issue: &lt;a href="https://youtrack.jetbrains.com/issue/PY-27251"&gt;https://youtrack.jetbrains.com/issue/PY-27251&lt;/a&gt; . Please close Pycharm and remove jdk.table.xml file from \~/Library/Preferences/.PyCharm2018.1/options directory, then start Pycharm again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK. I removed the file, but then you have to rebuild the virtual environments because that file is what stores PyCharms knowledge of those virtual environments.&lt;/p&gt;
&lt;p&gt;In order to get you back to where you need to be, do the following (after removing the &lt;code&gt;jdk.table.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;pip-freeze &gt; requirements.txt&lt;/li&gt;
&lt;li&gt;Remove old virtual environment &lt;code&gt;rm -r venv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a new Virtual Environemtn with PyCharm&lt;ol&gt;
&lt;li&gt;Go to Preferences&lt;/li&gt;
&lt;li&gt;Project &gt; Project Interpreter&lt;/li&gt;
&lt;li&gt;Show All&lt;/li&gt;
&lt;li&gt;Click ‚Äò+‚Äô button&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Restart PyCharm&lt;/li&gt;
&lt;li&gt;You're back&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is a giant PITA but thankfully it didn‚Äôt take too much to find the issue, nor to fix it. With that being said, I totally shouldn‚Äôt have to do this. But I‚Äôm writing it down so that once Python 3.8 is available I‚Äôll be able to remember what I did to fix going from Python 3.7.1 to 3.7.5.&lt;/p&gt;</content><category term="Python"></category><category term="homebrew"></category><category term="macOS"></category><category term="techsupport"></category></entry><entry><title>My Experience with the 100 Days of Web in Python</title><link href="https://www.ryancheley.com/my-experience-with-the-100-days-of-web-in-python.html" rel="alternate"></link><published>2019-08-18T09:42:00+02:00</published><updated>2019-08-18T09:42:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-08-18:/my-experience-with-the-100-days-of-web-in-python.html</id><summary type="html">&lt;p&gt;As soon as I discovered the Talk Python to me Podcast, I discovered the Talk Python to me courses. Through my job I have a basically free subscription to PluralSight so I wasn‚Äôt sure that I needed to pay for the courses when I was effectively getting courses in ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;As soon as I discovered the Talk Python to me Podcast, I discovered the Talk Python to me courses. Through my job I have a basically free subscription to PluralSight so I wasn‚Äôt sure that I needed to pay for the courses when I was effectively getting courses in Python for free.&lt;/p&gt;
&lt;p&gt;After taking a couple ( well, truth be told, all ) of the Python courses at PluralSight, I decided, what the heck, the courses at Talk Python looked interesting, Michael Kennedy has a good instructor‚Äôs voice and is genuinely excited about Python, and if it didn‚Äôt work out, it didn‚Äôt work out.&lt;/p&gt;
&lt;p&gt;I‚Äôm so glad I did, and I‚Äôm so glad I went through the 100 Days of Web in Python course.&lt;/p&gt;
&lt;p&gt;On May 2, 2019 I saw that the course had been released and I &lt;a href="https://mobile.twitter.com/ryancheley/status/1124127232262152192" title="This!"&gt;tweeted&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This x 1000000! Thank you so much \@TalkPython. I can‚Äôt wait to get started!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I started on the course on May 4, 2019 and completed it August 11, 2019. Full details on the course are &lt;a href="https://training.talkpython.fm/courses/details/100-days-of-web-in-python" title="#100DaysOfWeb in Python"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of the 28 concepts that were reviewed over the course, my favorites things were learning &lt;a href="https://www.djangoproject.com" title="Django Project"&gt;Django&lt;/a&gt; and &lt;a href="https://www.django-rest-framework.org" title="DRF"&gt;Django Rest Framework&lt;/a&gt; and &lt;a href="https://blog.getpelican.com" title="Pelican"&gt;Pelican&lt;/a&gt;. Holy crap, those parts were just so much fun for me. Part of my interest in Django and DRF comes from &lt;a href="https://wsvincent.com/books/" title="Will Vincent Books"&gt;William S Vincent‚Äôs books&lt;/a&gt; and Podcast &lt;a href="https://djangochat.com" title="Django Chat"&gt;Django Chat&lt;/a&gt;, but having actual videos to watch to get me through some of the things that have been conceptually tougher for me was a godsend.&lt;/p&gt;
&lt;p&gt;The other part that I really liked was actual deployment to a server. I had tried (about 16 months ago) to deploy a Django app to Digital Ocean and it was an unmitigated disaster. No static files no matter what I did. I eventually gave up.&lt;/p&gt;
&lt;p&gt;In this course I really learned how to deploy to both &lt;a href="https://www.heroku.com" title="Heroku"&gt;Heroku&lt;/a&gt; and a Linux box on &lt;a href="https://www.digitalocean.com" title="Digital Ocean"&gt;Digital Ocean&lt;/a&gt;, and so now I feel much more confident that the app I‚Äôm working on (more on that below) will actually see the light of day on something other than a dev machine!&lt;/p&gt;
&lt;p&gt;The one thing that I started to build (and am continuing to work on) is an app with a DRF backend and a Vue.js front end that allows a user to track which Baseball &lt;a href="https://www.writing-skills.com/is-it-stadia-or-stadiums" title="I‚Äôm going with the proper Latin pluralization because I‚Äôm fancy like that"&gt;stadia&lt;/a&gt; they‚Äôve been to. So far I have an API set up via DRF (hosted at Heroku) and sketches of what to do in Vue.js. There's also a Django front end (but it‚Äôs not the solution I really want to use).&lt;/p&gt;
&lt;p&gt;Writing code for 100 days is hard. Like really hard. For nearly 20 of those days I was on a family vacation in the Mid Western part of the US, but I made time for both the coding, and my family. My family was super supportive of my goal which was helpful, but the content in the course was really interesting and challenging and made me want to do it every day, which was also super helpful.&lt;/p&gt;
&lt;p&gt;On day 85 I got a video from Bob that helped get me through the last 2 weeks. It was encouraging, and helpful which is just what I needed. So thank you Bob.&lt;/p&gt;
&lt;p&gt;At the end I also got a nice &lt;a href="https://www.bonjoro.com/g/Wveg23mstaE"&gt;congratulatory video&lt;/a&gt; from Julian, which was surprising to say the least, especially because he called out some of the things that I tweeted that I enjoyed about the class, addressed me by name, and just genuinely made me feel good about my accomplishment!&lt;/p&gt;
&lt;p&gt;OK. I just wrapped up the 100 Days of Code with Python and the web. Now what?&lt;/p&gt;
&lt;p&gt;I took a week off to recuperate and am now ready to ‚Äòget back to it‚Äô.&lt;/p&gt;
&lt;p&gt;After all, I‚Äôve got baseball stadia to track in my app!&lt;/p&gt;
&lt;h1&gt;Talk Python to me Podcast&lt;/h1&gt;
&lt;p&gt;Why I like the Talk Python Podcast&lt;/p&gt;
&lt;p&gt;When I started listening to it&lt;/p&gt;
&lt;p&gt;Listening to the back catalog (nearly all of it)&lt;/p&gt;</content><category term="Python"></category><category term="coding"></category><category term="python"></category></entry><entry><title>Upgrading Python in a Virtual Environment</title><link href="https://www.ryancheley.com/upgrading-python-in-a-virtual-environment.html" rel="alternate"></link><published>2019-04-25T05:05:00+02:00</published><updated>2019-04-25T05:05:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-04-25:/upgrading-python-in-a-virtual-environment.html</id><summary type="html">&lt;p&gt;I have been wanting to use my Heroku account for a while with something a little more interesting than a &lt;a href="https://ryan-jupyter.herokuapp.com"&gt;Jupiter Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was hoping to try and do something with Django ‚Ä¶ but there‚Äôs a lot to using Django. I have some interesting things I‚Äôm doing on my ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been wanting to use my Heroku account for a while with something a little more interesting than a &lt;a href="https://ryan-jupyter.herokuapp.com"&gt;Jupiter Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was hoping to try and do something with Django ‚Ä¶ but there‚Äôs a lot to using Django. I have some interesting things I‚Äôm doing on my local machine, but it‚Äôs not quite ready yet.&lt;/p&gt;
&lt;p&gt;I had googled to find other Python Web frameworks and saw that Bottle was an even more light weight framework than Flask, so I thought, hey, maybe I can do something with that.&lt;/p&gt;
&lt;p&gt;I found &lt;a href="https://github.com/chucknado/bottle_heroku_tutorial/blob/master/README.md#reqs"&gt;this&lt;/a&gt; tutorial on how to do something relatively simple with Bottle and deploying to Heroku. Just what I wanted!&lt;/p&gt;
&lt;p&gt;I got through to the end of the tutorial and deployed to Heroku. The terminal output from the Heroku command indicated that a newer version of Python (3.7.3) was available than the one I was on (3.7.1).&lt;/p&gt;
&lt;p&gt;I figured it would be easy enough to upgrade to the newest version of Python on my Mac because I had done it &lt;a href="/keeping-python-up-to-date-on-macos.html"&gt;before&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I don‚Äôt know why I thought the virtual environment would be different than the local install of Python 3 but it turns out they are more tightly coupled than I thought.&lt;/p&gt;
&lt;p&gt;Upgrading to 3.7.3 broke the virtual environment I had in PyCharm. I did a bit a googling to see how to upgrade a virtual environment and found nothing. Like literally nothing.&lt;/p&gt;
&lt;p&gt;It was ... disheartening. But after a good night‚Äôs sleep I had a thought! What if I just delete the virtual environment directory and then recreated it.&lt;/p&gt;
&lt;p&gt;I ran this command to remove the virtual environment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -R venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then created a virtual environment in PyCharm and now I have 3.7.3 in my virtual environment.&lt;/p&gt;
&lt;p&gt;I had to make some changes to the files for deployment to Heroku, but that‚Äôs all covered in the tutorial mentioned above.&lt;/p&gt;
&lt;p&gt;Sometimes the answer is to &lt;a href="/did-you-try-restarting-it.html"&gt;just restart it&lt;/a&gt; ‚Ä¶ and sometimes the answer is delete it and start over.&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;I was listening to an &lt;a href="https://overcast.fm/+HjKUtfFUQ/13:45"&gt;episode of Python Bytes&lt;/a&gt; and heard &lt;a href="https://mobile.twitter.com/mkennedy"&gt;Michael Kennedy&lt;/a&gt; (of &lt;a href="https://talkpython.fm/home"&gt;Talk Python to Me&lt;/a&gt; fame) describing basically the same issue I had. Turns out, he solved it the same way I did. Nice to know i‚Äôm In good company.&lt;/p&gt;</content><category term="Python"></category><category term="Heroku"></category><category term="PyCharm"></category><category term="venv"></category><category term="Virtual Environment"></category></entry><entry><title>Keeping Python up to date on macOS</title><link href="https://www.ryancheley.com/keeping-python-up-to-date-on-macos.html" rel="alternate"></link><published>2018-12-22T04:08:00+01:00</published><updated>2018-12-22T04:08:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-12-22:/keeping-python-up-to-date-on-macos.html</id><summary type="html">&lt;p&gt;Sometimes the internet is a horrible, awful, ugly thing. And then other times, it‚Äôs exactly what you need.&lt;/p&gt;
&lt;p&gt;I have 2 Raspberry Pi each with different versions of Python. One running python 3.4.2 and the other running Python 3.5.3. I have previously tried to upgrade ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes the internet is a horrible, awful, ugly thing. And then other times, it‚Äôs exactly what you need.&lt;/p&gt;
&lt;p&gt;I have 2 Raspberry Pi each with different versions of Python. One running python 3.4.2 and the other running Python 3.5.3. I have previously tried to upgrade the version of the Pi running 3.5.3 to a more recent version (in this case 3.6.1) and read 10s of articles on how to do it. It did not go well. Parts seemed to have worked, while others didn‚Äôt. I have 3.6.1 installed, but in order to run it I have to issue the command &lt;code&gt;python3.6&lt;/code&gt; which is &lt;em&gt;fine&lt;/em&gt; but not really what I was looking for.&lt;/p&gt;
&lt;p&gt;For whatever reason, although I do nearly all of my Python development on my Mac, it hadn‚Äôt occurred to me to upgrade Python there until last night.&lt;/p&gt;
&lt;p&gt;With a simple Google search the first result came to Stackoverflow (what else?) and &lt;a href="https://apple.stackexchange.com/questions/201612/keeping-python-3-up-to-date-on-a-mac"&gt;this&lt;/a&gt; answer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew update
brew upgrade python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sometimes things on a Mac do ‚Äòjust work‚Äô. This was one of those times.&lt;/p&gt;
&lt;p&gt;I‚Äôm now running Python 3.7.1 and I‚Äôll I needed to do was a simple command in the terminal.&lt;/p&gt;
&lt;p&gt;God bless the internet.&lt;/p&gt;</content><category term="Python"></category><category term="macOS"></category><category term="python"></category><category term="Terminal"></category></entry><entry><title>ITFKH!!!</title><link href="https://www.ryancheley.com/itfkh.html" rel="alternate"></link><published>2018-11-09T19:33:00+01:00</published><updated>2018-11-09T19:33:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-11-09:/itfkh.html</id><summary type="html">&lt;p&gt;It‚Äôs time for Kings Hockey! A couple of years ago Emily and I I decided to be Hockey fans. This hasn‚Äôt really meant anything except that we picked a team (the Kings) and ‚Äòrooted‚Äô for them (i.e. talked sh*t* to our hockey friends), looked up their ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;It‚Äôs time for Kings Hockey! A couple of years ago Emily and I I decided to be Hockey fans. This hasn‚Äôt really meant anything except that we picked a team (the Kings) and ‚Äòrooted‚Äô for them (i.e. talked sh*t* to our hockey friends), looked up their position in the standings, and basically said, ‚ÄúUmm ... yeah, we‚Äôre hockey fans.‚Äù&lt;/p&gt;
&lt;p&gt;When the 2018 baseball season ended, and with the lack of interest in the NFL (or the NBA) Emily and I decided to actually focus on the NHL. Step 1 in becoming a Kings fan is watching the games. To that end we got a subscription to NHL Center Ice and have committed to watching the games.&lt;/p&gt;
&lt;p&gt;Step 2 is getting notified of when the games are on. To accomplish this I added the games to our family calendar, and decided to use what I learned writing my &lt;a href="/itfdb/"&gt;ITFDB&lt;/a&gt; program and write one for the Kings.&lt;/p&gt;
&lt;p&gt;For the Dodgers I had to create a CSV file and read it‚Äôs contents. Fortunately, the NHL as a sweet API that I could use. This also gave me an opportunity to use an API for the first time!&lt;/p&gt;
&lt;p&gt;The API is relatively straight forward and has some really good documentation so using it wasn‚Äôt too challenging.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sense_hat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dateutil.relativedelta&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;



&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;local_tz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;America/Los_Angeles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;utc_now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;utc_now&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_tz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://statsapi.web.nhl.com/api/v1/schedule?teamId=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;total_games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;totalGames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total_games&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gameDate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;away_team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;away&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;home_team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;away_team_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;away&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;home_team_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;games&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;teams&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_tz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;
        &lt;span class="n"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hours&lt;/span&gt;
        &lt;span class="n"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;
        &lt;span class="n"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relativedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;months&lt;/span&gt;
        &lt;span class="n"&gt;game_time_hour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;game_time_minute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;game_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_time_hour&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;game_time_minute&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;away_team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;home_record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;month_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;day_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;hour_diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;minute_diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;home_team_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) will be playing the &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) at &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;home_record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;The &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) will be playing at the &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;) at &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;home_record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_team&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;away_record&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;game_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sense&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;return_record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;standings_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://statsapi.web.nhl.com/api/v1/teams/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/stats&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;standings_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;wins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;losses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;otl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;splits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;losses&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;otl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the code for the LA Kings; the ID can be found here: https://statsapi.web.nhl.com/api/v1/teams/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The part that was the most interesting for me was getting the opponent name and then the record for both the opponent and the Kings. Since this is live data it allows the records to be updated which I couldn‚Äôt do (easily) with the Dodgers programs (hey MLB ... anytime you want to have a free API I‚Äôm ready!).&lt;/p&gt;
&lt;p&gt;Anyway, it was super fun and on November 6 I had the opportunity to actually see it work:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;iframe src="https://www.youtube.com/embed/AzdLSrA8wvU" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I really like doing fun little projects like this.&lt;/p&gt;</content><category term="Python"></category><category term="Hockey"></category><category term="python"></category><category term="Raspberry Pi"></category></entry><entry><title>Setting up Jupyter Notebook on my Linode</title><link href="https://www.ryancheley.com/setting-up-jupyter-notebook-on-my-linode.html" rel="alternate"></link><published>2018-05-27T12:32:00+02:00</published><updated>2018-05-27T12:32:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-05-27:/setting-up-jupyter-notebook-on-my-linode.html</id><summary type="html">&lt;p&gt;A &lt;a href="http://jupyter.org"&gt;Jupyter Notebook&lt;/a&gt; is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text.&lt;/p&gt;
&lt;p&gt;Uses include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;data cleaning and transformation&lt;/li&gt;
&lt;li&gt;numerical simulation&lt;/li&gt;
&lt;li&gt;statistical modeling&lt;/li&gt;
&lt;li&gt;data visualization&lt;/li&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;li&gt;and other stuff&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I‚Äôve been interested in how to set ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="http://jupyter.org"&gt;Jupyter Notebook&lt;/a&gt; is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text.&lt;/p&gt;
&lt;p&gt;Uses include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;data cleaning and transformation&lt;/li&gt;
&lt;li&gt;numerical simulation&lt;/li&gt;
&lt;li&gt;statistical modeling&lt;/li&gt;
&lt;li&gt;data visualization&lt;/li&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;li&gt;and other stuff&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I‚Äôve been interested in how to set up a Jupyter Notebook on my &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; server for a while, but kept running into a roadblock (either mental or technical I‚Äôm not really sure).&lt;/p&gt;
&lt;p&gt;Then I came across this ‚Äòsweet‚Äô solution to get them set up at&lt;a href="http://blog.lerner.co.il/five-minute-guide-setting-jupyter-notebook-server/"&gt;http://blog.lerner.co.il/five-minute-guide-setting-jupyter-notebook-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My main issue was what I needed to to do keep the Jupyter Notebook running once I disconnected from command line. The solution above gave me what I needed to solve that problem&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nohup jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;nohup&lt;/code&gt; allows you to disconnect from the terminal but keeps the command running in the background (which is exactly what I wanted).&lt;/p&gt;
&lt;p&gt;The next thing I wanted to do was to have the &lt;code&gt;jupyter&lt;/code&gt; notebook server run from a directory that wasn‚Äôt my home directory.&lt;/p&gt;
&lt;p&gt;To do this was way easier than I thought. You just run &lt;code&gt;nohup jupyter notebook&lt;/code&gt; from the directory you want to run it from.&lt;/p&gt;
&lt;p&gt;The last thing to do was to make sure that the notebook would start up with a server reboot. For that I wrote a shell script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# change to correct directory
cd /home/ryan/jupyter

nohup jupyter notebook &amp;amp;&amp;gt; /home/ryan/output.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last command is a slight modification of the line from above. I really wanted the output to get directed to a file that wasn‚Äôt in the directory that the &lt;code&gt;Jupyter&lt;/code&gt; notebook would be running from. Not any reason (that I know of anyway) ‚Ä¶ I just didn‚Äôt like the &lt;code&gt;nohup.out&lt;/code&gt; file in the working directory.&lt;/p&gt;
&lt;p&gt;Anyway, I now have a running Jupyter Notebook at &lt;a href="http://python.ryancheley.com:8888"&gt;http://python.ryancheley.com:8888&lt;/a&gt;^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[I‚Äôd like to update this to be running from a port other than 8888 AND I‚Äôd like to have it on SSL, but one thing at a time! &lt;a href="#ffn1"&gt;‚Ü©&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="jupyter"></category><category term="linux"></category><category term="python"></category><category term="Remote servers"></category><category term="Shell Script"></category></entry><entry><title>ITFDB Demo</title><link href="https://www.ryancheley.com/itfdb-demo.html" rel="alternate"></link><published>2018-04-01T16:38:00+02:00</published><updated>2018-04-01T16:38:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-04-01:/itfdb-demo.html</id><summary type="html">&lt;p&gt;Last Wednesday if you would have asked what I had planned for Easter I would have said something like, ‚ÄúGoing to hide some eggs for my daughter even though she knows the Easter bunny isn‚Äôt real.‚Äù&lt;/p&gt;
&lt;p&gt;Then suddenly my wife and I were planning on entertaining for 11 family ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last Wednesday if you would have asked what I had planned for Easter I would have said something like, ‚ÄúGoing to hide some eggs for my daughter even though she knows the Easter bunny isn‚Äôt real.‚Äù&lt;/p&gt;
&lt;p&gt;Then suddenly my wife and I were planning on entertaining for 11 family members. My how things change!&lt;/p&gt;
&lt;p&gt;Since I was going to have family over, some of whom are &lt;a href="https://www.mlb.com/giants"&gt;Giants&lt;/a&gt; fans, I wanted to show them the &lt;a href="http://www.ryancheley.com/index.php/2018/02/13/itfdb/"&gt;ITFDB program I have set up with my Pi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only problem is that they would be over at 10am and leave by 2pm while the game doesn‚Äôt start until 5:37pm (Thanks &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To help demonstrate the script I wrote a &lt;em&gt;demo&lt;/em&gt; script to display a message on the Pi and play the Vin Scully mp3.&lt;/p&gt;
&lt;p&gt;The Code was simple enough:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sense_hat&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SenseHat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#ITFDB!!! The Dodgers will be playing San Francisco at 5:37pm tonight!&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;sense&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scroll_speed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;omxplayer -b /home/pi/Documents/python_projects/itfdb/dodger_baseball.mp3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But then the question becomes, how can I easily launch the script without &lt;a href="https://en.wiktionary.org/wiki/futz"&gt;futzing&lt;/a&gt; with my laptop?&lt;/p&gt;
&lt;p&gt;I knew that I could run a shell script for the &lt;a href="https://workflow.is"&gt;Workflow app&lt;/a&gt; on my iPhone with a single action, so I wrote a simple shell script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 ~/Documents/python_projects/itfdb/demo.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which was called &lt;code&gt;itfdb_demo.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And made it executable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod u+x itfdb_demo.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, I created a WorkFlow which has only one action &lt;code&gt;Run Script over SSH&lt;/code&gt; and added it to my home screen so that with a simple tap I could demo the results.&lt;/p&gt;
&lt;p&gt;The WorkFlow looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-254" height="2208" src="/images/uploads/2018/04/IMG_9450.png" width="1242"&gt;&lt;/p&gt;
&lt;p&gt;Nothing too fancy, but I was able to reliably and easily demonstrate what I had done. And it was pretty freaking cool!&lt;/p&gt;</content><category term="Python"></category><category term="Easter"></category><category term="Family"></category><category term="Shell Script"></category><category term="Workflow"></category></entry><entry><title>Daylight Savings Time</title><link href="https://www.ryancheley.com/daylight-savings-time.html" rel="alternate"></link><published>2018-03-26T19:02:00+02:00</published><updated>2018-03-26T19:02:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-26:/daylight-savings-time.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr Drang has posted on Daylight Savings in the past&lt;/a&gt;, but in a recent &lt;a href="http://leancrew.com/all-this/2018/03/one-table-following-another/"&gt;post&lt;/a&gt; he critiqued (rightly so) the data presentation by a journalist at the Washington Post on Daylight Savings, and that got me thinking.&lt;/p&gt;
&lt;p&gt;In the post he generated a chart showing both the total number of ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr Drang has posted on Daylight Savings in the past&lt;/a&gt;, but in a recent &lt;a href="http://leancrew.com/all-this/2018/03/one-table-following-another/"&gt;post&lt;/a&gt; he critiqued (rightly so) the data presentation by a journalist at the Washington Post on Daylight Savings, and that got me thinking.&lt;/p&gt;
&lt;p&gt;In the post he generated a chart showing both the total number of daylight hours and the sunrise / sunset times in Chicago. However, initially he didn‚Äôt post the code on how he generated it. The next day, in a follow up &lt;a href="http://leancrew.com/all-this/2018/03/the-sunrise-plot/"&gt;post&lt;/a&gt;, he did and that &lt;strong&gt;really&lt;/strong&gt; got my thinking.&lt;/p&gt;
&lt;p&gt;I wonder what the chart would look like for cities up and down the west coast (say from San Diego, CA to Seattle WA)?&lt;/p&gt;
&lt;p&gt;Drang‚Äôs post had all of the code necessary to generate the graph, but for the data munging, he indicated:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If I were going to do this sort of thing on a regular basis, I‚Äôd write a script to handle this editing, but for a one-off I just did it ‚Äúby hand.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Doing it by hand wasn‚Äôt going to work for me if I was going to do several cities and so I needed to write a parser for the source of the data (&lt;a href="http://aa.usno.navy.mil"&gt;The US Naval Observatory&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The entire script is on my GitHub &lt;a href="https://github.com/ryancheley/sunrise_sunset"&gt;sunrise&lt;em&gt;sunset&lt;/em&gt;&lt;/a&gt; repo. I won‚Äôt go into the nitty gritty details, but I will call out a couple of things that I discovered during the development process.&lt;/p&gt;
&lt;p&gt;Writing a parser is hard. Like &lt;em&gt;really&lt;/em&gt; hard. Each time I thought I had it, I didn‚Äôt. I was finally able to get the parser to work o cities with &lt;code&gt;01&lt;/code&gt;, &lt;code&gt;29&lt;/code&gt;,&lt;code&gt;30&lt;/code&gt;, or &lt;code&gt;31&lt;/code&gt; in their longitude / latitude combinations.&lt;/p&gt;
&lt;p&gt;I generated the same graph as Dr. Drang for the following cities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Phoenix, AZ&lt;/li&gt;
&lt;li&gt;Eugene, OR&lt;/li&gt;
&lt;li&gt;Portland&lt;/li&gt;
&lt;li&gt;Salem, OR&lt;/li&gt;
&lt;li&gt;Seaside, OR&lt;/li&gt;
&lt;li&gt;Eureka, CA&lt;/li&gt;
&lt;li&gt;Indio, CA&lt;/li&gt;
&lt;li&gt;Long Beach, CA&lt;/li&gt;
&lt;li&gt;Monterey, CA&lt;/li&gt;
&lt;li&gt;San Diego, CA&lt;/li&gt;
&lt;li&gt;San Francisco, CA&lt;/li&gt;
&lt;li&gt;San Luis Obispo, CA&lt;/li&gt;
&lt;li&gt;Ventura, CA&lt;/li&gt;
&lt;li&gt;Ferndale, WA&lt;/li&gt;
&lt;li&gt;Olympia, WA&lt;/li&gt;
&lt;li&gt;Seattle, WA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why did I pick a city in Arizona? They don‚Äôt do Daylight Savings and I wanted to have a comparison of what it‚Äôs like for them!&lt;/p&gt;
&lt;p&gt;The charts in latitude order (from south to north) are below:&lt;/p&gt;
&lt;p&gt;San Diego&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone wp-image-242 size-full" height="900" src="/images/uploads/2018/03/N32_45_San-Diego_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Phoenix&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone wp-image-497 size-full" height="900" src="/images/uploads/2018/03/N33_30_Phoenix_AZ_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Indio&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-249" height="900" src="/images/uploads/2018/03/N33_44_Indio_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Long Beach&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-250" height="900" src="/images/uploads/2018/03/N33_49_Long-Beach_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Ventura&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-238" height="900" src="/images/uploads/2018/03/N34_17_Ventura_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;San Luis Obispo&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-234" height="900" src="/images/uploads/2018/03/N35_17_San-Luis-Obispo_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Monterey&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-245" height="900" src="/images/uploads/2018/03/N36_36_Monterey_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;San Francisco&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-235" height="900" src="/images/uploads/2018/03/N37_46_San-Francisco_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Eureka&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-236" height="900" src="/images/uploads/2018/03/N40_47_Eureka_CA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Eugene&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-247" height="900" src="/images/uploads/2018/03/N44_03_Eugene_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Salem&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-240" height="900" src="/images/uploads/2018/03/N44_56_Salem_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Portland&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-248" height="900" src="/images/uploads/2018/03/N45_31_Portland_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Seaside&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-244" height="900" src="/images/uploads/2018/03/N45_59_Seaside_OR_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Olympia&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-241" height="900" src="/images/uploads/2018/03/N47_02_Olympia_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Seattle&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-246" height="900" src="/images/uploads/2018/03/N47_38_Seattle_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;Ferndale&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-243" height="900" src="/images/uploads/2018/03/N48_51_Ferndale_WA_rise_set_chart.png" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;While these images do show the different impact of Daylight Savings, I think the images are more compelling when shown as a GIF:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-239" height="900" src="/images/uploads/2018/03/animated.gif" width="1500"&gt;&lt;/p&gt;
&lt;p&gt;We see just how different the impacts of DST are on each city depending on their latitude.&lt;/p&gt;
&lt;p&gt;One of &lt;a href="http://www.leancrew.com/all-this/2013/03/why-i-like-dst/"&gt;Dr. Drang‚Äôs main points in support of DST&lt;/a&gt; is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If, by the way, you think the solution is to stay on DST throughout the year, I can only tell you that we tried that back in the 70s and it didn‚Äôt turn out well. Sunrise here in Chicago was after 8:00 am, which put school children out on the street at bus stops before dawn in the dead of winter. It was the same on the East Coast. Nobody liked that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think that comment says more about our school system and less about the need for DST.&lt;/p&gt;
&lt;p&gt;For this whole argument I‚Äôm way more on the side of CGP Grey who does a &lt;a href="https://www.youtube.com/watch?v=84aWtseb2-4"&gt;great job of explaining what Day Lights Time is&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think we may want to start looking at a Universal Planetary time (say UTC) and base all activities on that &lt;strong&gt;regardless&lt;/strong&gt; of where you are in the world. The only reason 5am &lt;em&gt;seems&lt;/em&gt; early (to some people) is because we‚Äôve collectively decided that 5am (depending on the time of the year) is either &lt;strong&gt;WAY&lt;/strong&gt; before sunrise or just a bit before sunrise, but really it‚Äôs just a number.&lt;/p&gt;
&lt;p&gt;If we used UTC in California (where I‚Äôm at) 5am would we 12pm. Normally 12pm would be lunch time, but that‚Äôs only a convention that we have constructed. It could just as easily be the crack of dawn as it could be lunch time.&lt;/p&gt;
&lt;p&gt;Do I think a conversion like this will ever happen? No. I just really hope that at some point in the distant future when aliens finally come and visit us, we aren‚Äôt late (or them early) because we have such a wacky time system here.&lt;/p&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>Talk Python Build 10 Apps Review</title><link href="https://www.ryancheley.com/talk-python-build-10-apps-review.html" rel="alternate"></link><published>2018-03-20T13:27:00+01:00</published><updated>2018-03-20T13:27:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-03-20:/talk-python-build-10-apps-review.html</id><summary type="html">&lt;p&gt;Michael Kennedy over at Talk Python had a sale on his courses over the holidays so I took the plunge and bought them all. I have been listening to the podcast for several months now so I knew that I wouldn‚Äôt mind listening to him talk during a course ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Michael Kennedy over at Talk Python had a sale on his courses over the holidays so I took the plunge and bought them all. I have been listening to the podcast for several months now so I knew that I wouldn‚Äôt mind listening to him talk during a course (which is important!).&lt;/p&gt;
&lt;p&gt;The first course I watched was ‚ÄòPython Jumpstart by Building 10 Apps‚Äô. The apps were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;App 1: Hello (you Pythonic) world&lt;/li&gt;
&lt;li&gt;App 2: Guess that number game&lt;/li&gt;
&lt;li&gt;App 3: Birthday countdown app&lt;/li&gt;
&lt;li&gt;App 4: Journal app and file I/O&lt;/li&gt;
&lt;li&gt;App 5: Real-time weather client&lt;/li&gt;
&lt;li&gt;App 6: LOLCat Factory&lt;/li&gt;
&lt;li&gt;App 7: Wizard Battle App&lt;/li&gt;
&lt;li&gt;App 8: File Searcher App&lt;/li&gt;
&lt;li&gt;App 9: Real Estate Analysis App&lt;/li&gt;
&lt;li&gt;App 10: Movie Search App&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each app you learn a specific set of skills related to either Python or writing ‚ÄòPyhonic‚Äô code. I think the best part was that since it was all self paced I was able to spend time where I wanted to exploring ideas and concepts that wouldn‚Äôt have been available in traditional classrooms.&lt;/p&gt;
&lt;p&gt;Also, since I‚Äôm fully adulted it can be hard to find time to watch and interact with courses like this so being able to watch them when I wanted to was a bonus.&lt;/p&gt;
&lt;p&gt;Hello (you Pythonic) world is what you would expect from any introductory course. You write the basic ‚ÄòHello World‚Äô script, but with a twist. For this app you interact with it so that it asks your name and then it will output ‚ÄòHello username my name is HAL!‚Äô ‚Ä¶ although because I am who I am HAL wasn‚Äôt the name in the course, it was jut the name I chose for the app.&lt;/p&gt;
&lt;p&gt;My favorite app to build and use was the Wizard App (app 7). It is a text adventure influenced by dungeons and dragons and teaches about classes and inheritance an polymorphism. It ws pretty cool.&lt;/p&gt;
&lt;p&gt;The version that you are taught to make only has 4 creatures and ends pretty quickly. I enhanced the game to have it randomly create up to 250 creatures (some of them poisonous) and you level up during the game so that you can feel like a real character in an RPG.&lt;/p&gt;
&lt;p&gt;The journal application was interesting because I finally started to get my head wrapped around file I/o. I‚Äôm not sure why I‚Äôve had such a difficult time internalizing the concept, but the course seemed to help me better understand what was going on in terms of file streaming and reading data to do a thing.&lt;/p&gt;
&lt;p&gt;My overall experience with the course was super positive. I‚Äôm really glad that I watched it and have already started to try to use the things that I‚Äôve learned to improve code I‚Äôve previously written.&lt;/p&gt;
&lt;p&gt;With all of the good, there is some not so good.&lt;/p&gt;
&lt;p&gt;The course uses it‚Äôs own player, which is fine, but it‚Äôs missing some key features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Time reaming&lt;/li&gt;
&lt;li&gt;Speed controls (i.e. it only plays at one speed, 1x)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition, sometimes the player would need to be reloaded which could be frustrating.&lt;/p&gt;
&lt;p&gt;Overall though it was a great course and I‚Äôm glad I was able to do it.&lt;/p&gt;
&lt;p&gt;Next course: Mastering PyCharm!&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Fixing the Python 3 Problem on my Raspberry Pi</title><link href="https://www.ryancheley.com/fixing-the-python-3-problem-on-my-raspberry-pi.html" rel="alternate"></link><published>2018-02-13T21:00:00+01:00</published><updated>2018-02-13T21:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-13:/fixing-the-python-3-problem-on-my-raspberry-pi.html</id><summary type="html">&lt;p&gt;In my last post I indicated that I may need to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;reinstalling everything on the Pi and starting from scratch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While speaking about my issues with &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt;. Turns out that the fix was easier than I though. I checked to see what where &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt; where being ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my last post I indicated that I may need to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;reinstalling everything on the Pi and starting from scratch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While speaking about my issues with &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt;. Turns out that the fix was easier than I though. I checked to see what where &lt;code&gt;pip3&lt;/code&gt; and &lt;code&gt;python3&lt;/code&gt; where being executed from by running the &lt;code&gt;which&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;which pip3&lt;/code&gt; returned &lt;code&gt;/usr/local/bin/pip3&lt;/code&gt; while &lt;code&gt;which python3&lt;/code&gt; returned &lt;code&gt;/usr/local/bin/python3&lt;/code&gt;. This is exactly what was causing my problem.&lt;/p&gt;
&lt;p&gt;To verify what version of python was running, I checked &lt;code&gt;python3 --version&lt;/code&gt; and it returned &lt;code&gt;3.6.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To fix it I just ran these commands to &lt;em&gt;unlink&lt;/em&gt; the new, broken versions:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo unlink /usr/local/bin/pip3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo unlink /usr/local/bin/python3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I found this answer on &lt;a href="https://stackoverflow.com/questions/7679674/changing-default-python-to-another-version" title="Of Course the answer was on Stack Overflow!"&gt;StackOverflow&lt;/a&gt; and tweaked it slightly for my needs.&lt;/p&gt;
&lt;p&gt;Now, when I run &lt;code&gt;python --version&lt;/code&gt; I get &lt;code&gt;3.4.2&lt;/code&gt; instead of &lt;code&gt;3.6.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately I didn‚Äôt think to run the &lt;code&gt;--version&lt;/code&gt; flag on pip before and after the change, and I‚Äôm hesitant to do it now as it‚Äôs back to working.&lt;/p&gt;</content><category term="Python"></category><category term="linux"></category><category term="python"></category><category term="unlink"></category></entry><entry><title>ITFDB!!!</title><link href="https://www.ryancheley.com/itfdb.html" rel="alternate"></link><published>2018-02-13T18:23:00+01:00</published><updated>2018-02-13T18:23:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-02-13:/itfdb.html</id><summary type="html">&lt;p&gt;My wife and I &lt;strong&gt;love&lt;/strong&gt; baseball season. Specifically we love the &lt;a href="https://www.mlb.com/dodgers" title="Go Dodgers!!!"&gt;Dodgers&lt;/a&gt; and we can‚Äôt wait for Spring Training to begin. In fact, today pitchers and catchers report!&lt;/p&gt;
&lt;p&gt;I‚Äôve wanted to do something with the Raspberry Pi Sense Hat that I got (since I got it) but I ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;My wife and I &lt;strong&gt;love&lt;/strong&gt; baseball season. Specifically we love the &lt;a href="https://www.mlb.com/dodgers" title="Go Dodgers!!!"&gt;Dodgers&lt;/a&gt; and we can‚Äôt wait for Spring Training to begin. In fact, today pitchers and catchers report!&lt;/p&gt;
&lt;p&gt;I‚Äôve wanted to do something with the Raspberry Pi Sense Hat that I got (since I got it) but I‚Äôve struggled to find anything useful. And then I remembered baseball season and I thought, ‚ÄòHey, what if I wrote something to have the Sense Hat say ‚Äú#ITFDB‚Äù starting 10 minutes before a Dodgers game started?‚Äô&lt;/p&gt;
&lt;p&gt;And so I did!&lt;/p&gt;
&lt;p&gt;The script itself is relatively straight forward. It reads a csv file and checks to see if the current time in California is within 10 minutes of start time of the game. If it is, then it will send a &lt;code&gt;show_message&lt;/code&gt; command to the Sense Hat.&lt;/p&gt;
&lt;p&gt;I also wrote a cron job to run the script every minute so that I get a beautiful scrolling bit of text every minute before the Dodgers start!&lt;/p&gt;
&lt;p&gt;The code can be found on my &lt;a href="https://github.com/ryancheley/itfdb" title="Git Hub"&gt;GitHub&lt;/a&gt; page in the itfdb repository. There are 3 files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Program.py&lt;/code&gt; which does the actual running of the script&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data_types.py&lt;/code&gt; which defines a class used in &lt;code&gt;Program.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;schedule.csv&lt;/code&gt; which is the schedule of the games for 2018 as a csv file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I ran into a couple of issues along the way. First, my development environment on my Mac Book Pro was Python 3.6.4 while the Production Environment on the Raspberry Pi was 3.4. This made it so that the code about time ran locally but not on the server ü§¶‚Äç‚ôÇÔ∏è.&lt;/p&gt;
&lt;p&gt;It took some playing with the code, but I was finally able to go from this (which worked on 3.6 but not on 3.4):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;now = utc_now.astimezone(pytz.timezone(&amp;quot;America/Los_Angeles&amp;quot;))
game_date_time = game_date_time.astimezone(pytz.timezone(&amp;quot;America/Los_Angeles&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To this which worked on both:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;local_tz = pytz.timezone(&amp;#39;America/Los_Angeles&amp;#39;)
now = utc_now.astimezone(local_tz)
game_date_time = local_tz.localize(game_date_time)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For both, the &lt;code&gt;game_date_time&lt;/code&gt; variable setting was done in a for loop.&lt;/p&gt;
&lt;p&gt;Another issue I ran into was being able to &lt;em&gt;display&lt;/em&gt; the message for the sense hat on my Mac Book Pro. I wasn‚Äôt ever able to because of a package that is missing (RTIMU ) and is apparently only available on Raspbian (the OS on the Pi).&lt;/p&gt;
&lt;p&gt;Finally, in my attempts to get the code I wrote locally to work on the Pi I decided to install Python 3.6.0 on the Pi (while 3.4 was installed) and seemed to do nothing but break &lt;code&gt;pip&lt;/code&gt;. It looks like I‚Äôll be learning how to uninstall Python 3.4 OR reinstalling everything on the Pi and starting from scratch. Oh well ‚Ä¶ at least it‚Äôs just a Pi and not a &lt;em&gt;real&lt;/em&gt; server.&lt;/p&gt;
&lt;p&gt;Although, I‚Äôm pretty sure I hosed my &lt;a href="https://www.linode.com"&gt;Linode&lt;/a&gt; server a while back and basically did the same thing so maybe it‚Äôs just what I do with servers when I‚Äôm learning.&lt;/p&gt;
&lt;p&gt;One final thing. While sitting in the living room watching &lt;em&gt;DC Legends of Tomorrow&lt;/em&gt; the Sense Hat started to display the message. Turns out, I was accounting for the minute, hour, and day but &lt;em&gt;NOT&lt;/em&gt; the month. The Dodgers play the Cubs on September 12 at 9:35 (according to the schedule.csv file anyway) and so the conditions to display were met.&lt;/p&gt;
&lt;p&gt;I added another condition to make sure it was the right month and now we‚Äôre good to go!&lt;/p&gt;
&lt;p&gt;Super pumped for this season with the Dodgers!&lt;/p&gt;</content><category term="Python"></category><category term="Baseball"></category><category term="dodgers"></category><category term="python"></category><category term="Raspberry Pi"></category></entry><entry><title>My Map Art Project</title><link href="https://www.ryancheley.com/my-map-art-project.html" rel="alternate"></link><published>2018-01-12T05:44:00+01:00</published><updated>2018-01-12T05:44:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2018-01-12:/my-map-art-project.html</id><summary type="html">&lt;p&gt;I‚Äôd discovered a python package called &lt;code&gt;osmnx&lt;/code&gt; which will take GIS data and allow you to draw maps using python. Pretty cool, but I wasn‚Äôt sure what I was going to do with it.&lt;/p&gt;
&lt;p&gt;After a bit of playing around with it I finally decided that I could ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I‚Äôd discovered a python package called &lt;code&gt;osmnx&lt;/code&gt; which will take GIS data and allow you to draw maps using python. Pretty cool, but I wasn‚Äôt sure what I was going to do with it.&lt;/p&gt;
&lt;p&gt;After a bit of playing around with it I finally decided that I could make some pretty cool &lt;a href="https://www.fractureme.com" title="Fracture"&gt;Fractures&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I‚Äôve got lots of Fracture images in my house and I even turned my diplomas into Fractures to hang up on the wall at my office, but I hadn‚Äôt tried to make anything like this before.&lt;/p&gt;
&lt;p&gt;I needed to figure out what locations I was going to do. I decided that I wanted to do 9 of them so that I could create a 3 x 3 grid of these maps.&lt;/p&gt;
&lt;p&gt;I selected 9 cities that were important to me and my family for various reasons.&lt;/p&gt;
&lt;p&gt;Next writing the code. The script is 54 lines of code and doesn‚Äôt really adhere to PEP8 but that just gives me a chance to do some reformatting / refactoring later on.&lt;/p&gt;
&lt;p&gt;In order to get the desired output I needed several libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;osmnx (as I‚Äôd mentioned before)
matplotlib.pyplot
numpy
PIL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you‚Äôve never used PIL before it‚Äôs the ‚ÄòPython Image Library‚Äô and according to it‚Äôs &lt;a href="http://www.pythonware.com/products/pil/" title="Python Image Library Home Page"&gt;home page&lt;/a&gt; it&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;adds image processing capabilities to your Python interpreter. This library supports many file formats, and provides powerful image processing and graphics capabilities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK, let‚Äôs import some libraries!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;osmnx&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ox&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;geopandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;gpd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we establish the configurations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ox.config(log_file=True, log_console=False, use_cache=True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;ox.config&lt;/code&gt; allows you to specify several options. In this case, I‚Äôm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Specifying that the logs be saved to a file in the log directory&lt;/li&gt;
&lt;li&gt;Supress the output of the log file to the console (this is helpful to have set to &lt;code&gt;True&lt;/code&gt; when you‚Äôre first running the script to see what, if any, errors you have.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;use_chache=True&lt;/code&gt; will use a local cache to save/retrieve http responses instead of calling API repetitively for the same request URL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This option will help performance if you have the run the script more than once.&lt;/p&gt;
&lt;p&gt;OSMX has many different options to generate maps. I played around with the options and found that the walking network within 750 meters of my address gave me the most interesting lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;AddressDistance = 750
AddressDistanceType = &amp;#39;network&amp;#39;
AddressNetworkType = &amp;#39;walk&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now comes some of the most important decisions (and code!). Since I‚Äôll be making this into a printed image I want to make sure that the image and resulting file will be of a high enough quality to render good results. I also want to start with a white background (although a black background might have been kind of cool). I also want to have a high DPI. Taking these needs into consideration I set my plot variables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PlotBackgroundColor = &amp;#39;#ffffff&amp;#39;
PlotNodeSize = 0
PlotFigureHeight = 40
PlotFigureWidth = 40
PlotFileType = &amp;#39;png&amp;#39;
PlotDPI = 300
PlotEdgeLineWidth = 10.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I played with the &lt;code&gt;PlotEdgeLineWidth&lt;/code&gt; a bit until I got a result that I liked. It controls how thick the route lines are and is influenced by the &lt;code&gt;PlotDPI&lt;/code&gt;. For the look I was going for 10.0 worked out well for me. I‚Äôm not sure if that means a 30:1 ratio for &lt;code&gt;PlotDPI&lt;/code&gt; to &lt;code&gt;PlotEdgeLineWidth&lt;/code&gt; would be universal but if you like what you see then it‚Äôs a good place to start.&lt;/p&gt;
&lt;p&gt;One final piece was deciding on the landmarks that I was going to use. I picked nine places that my family and I had been to together and used addresses that were either of the places that we stayed at (usually hotels) OR major landmarks in the areas that we stayed. Nothing special here, just a text file with one location per line set up as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Address, City, State&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1234 Main Street, Anytown, CA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we just read that file into memory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;landmarks = open(&amp;#39;/Users/Ryan/Dropbox/Ryan/Python/landmarks.txt&amp;#39;, &amp;#39;r&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we set up some scaffolding so we can loop through the data effectively&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;landmarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;.&lt;span class="nv"&gt;readlines&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;span class="nv"&gt;landmarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; [&lt;span class="nv"&gt;item&lt;/span&gt;.&lt;span class="nv"&gt;rstrip&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;]

&lt;span class="nv"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The loop below is doing a couple of things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Splits the landmarks array into base elements by breaking it apart at the commas (I can do this because of the way that the addresses were entered. Changes may be needed to account for my complex addresses (i.e. those with multiple address lines (suite numbers, etc) or if local addresses aren‚Äôt constructed in the same way that US addresses are)&lt;/li&gt;
&lt;li&gt;Appends the second and third elements of the &lt;code&gt;parts&lt;/code&gt; array and replaces the space between them with an underscore to convert &lt;code&gt;Anytown, CA&lt;/code&gt; to &lt;code&gt;Anytown_CA&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;element&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;landmarks&lt;/span&gt;:
    &lt;span class="nv"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;element&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;city&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;parts&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;parts&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;].&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This next line isn‚Äôt strictly necessary as it could just live in the loop, but it was helpful for me when writing to see what was going on. We want to know how many items are in the &lt;code&gt;landmarks&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rows = len(landmarks)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now to loop through it. A couple of things of note:&lt;/p&gt;
&lt;p&gt;The package includes several &lt;code&gt;graph_from_...&lt;/code&gt; functions. They take as input some type, like address, i.e. &lt;code&gt;graph_from_address&lt;/code&gt; (which is what I‚Äôm using) and have several keyword arguments.&lt;/p&gt;
&lt;p&gt;In the code below I‚Äôm using the ith landmarks item and setting the &lt;code&gt;distance&lt;/code&gt;, &lt;code&gt;distance_type&lt;/code&gt;, &lt;code&gt;network_type&lt;/code&gt; and specifying an option to make the map simple by setting &lt;code&gt;simplify=‚Äòtrue‚Äô&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To add some visual interest to the map I‚Äôm using this line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;ec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; [&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#cc0000&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;length&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;] &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;#3366cc&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;u&lt;/span&gt;, &lt;span class="nv"&gt;v&lt;/span&gt;, &lt;span class="nv"&gt;key&lt;/span&gt;, &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt;.&lt;span class="nv"&gt;edges&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;, &lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the length of the part of the map is longer than 100m then the color is displayed as &lt;code&gt;#cc0000&lt;/code&gt; (red) otherwise it will be &lt;code&gt;#3366cc&lt;/code&gt; (blue)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;plot_graph&lt;/code&gt; is what does the heavy lifting to generate the image. It takes as input the output from the &lt;code&gt;graph_from_address&lt;/code&gt; and &lt;code&gt;ec&lt;/code&gt; to identify what and how the map will look.&lt;/p&gt;
&lt;p&gt;Next we use the &lt;code&gt;PIL&lt;/code&gt; library to add text to the image. It takes into memory the image file and saves out to a directory called &lt;code&gt;/images/&lt;/code&gt;. My favorite part of this library is that I can choose what font I want to use (whether it‚Äôs part of the system fonts or a custom user font) and the size of the font. For my project I used San Francisco at 512.&lt;/p&gt;
&lt;p&gt;Finally, there is an exception for the code that adds text. The reason for this is that when I was playing with adding text to the image I found that for 8 of 9 maps having the text in the upper left hand corner worker really well. It was just that last one (San Luis Obispo, CA) that didn‚Äôt.&lt;/p&gt;
&lt;p&gt;So, instead of trying to find a different landmark, I decided to take a bit of artistic license and put the San Luis Obispo text in the upper right hard corner.&lt;/p&gt;
&lt;p&gt;Once the script is all set simply typing &lt;code&gt;python MapProject.py&lt;/code&gt; in my terminal window from the directory where the file is saved generated the files.&lt;/p&gt;
&lt;p&gt;All I had to do what wait and the images were saved to my &lt;code&gt;/images/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Next, upload to Fracture and order the glass images!&lt;/p&gt;
&lt;p&gt;I received the images and was super excited. However, upon opening the box and looking at them I noticed something wasn‚Äôt quite right&lt;/p&gt;
&lt;p&gt;[caption id="attachment_188" align="alignnone" width="2376"]![Napa with the text slightly off the image]images/uploads/2018/01/Image-12-16-17-6-55-AM.jpeg){.alignnone .size-full .wp-image-188 width="2376" height="2327"} Napa with the text slightly off the image[/caption]&lt;/p&gt;
&lt;p&gt;As you can see, the name place is cut off on the left. Bummer.&lt;/p&gt;
&lt;p&gt;No reason to fret though! Fracture has a 100% satisfaction guarantee. So I emailed support and explained the situation.&lt;/p&gt;
&lt;p&gt;Within a couple of days I had my bright and shiny fractures to hang on my wall&lt;/p&gt;
&lt;p&gt;[caption id="attachment_187" align="alignnone" width="2138"]![Napa with the text properly displaying]images/uploads/2018/01/IMG_9079.jpg){.alignnone .size-full .wp-image-187 width="2138" height="2138"} Napa with the text properly displaying[/caption]&lt;/p&gt;
&lt;p&gt;So that my office wall is no longer blank and boring:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-189" height="768" src="/images/uploads/2018/01/UNADJUSTEDNONRAW_thumb_380b.jpg" width="1024"&gt;&lt;/p&gt;
&lt;p&gt;but interesting and fun to look at&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-186" height="3024" src="/images/uploads/2018/01/IMG_9156.jpg" width="4032"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="art"></category><category term="python"></category></entry><entry><title>Presenting Data - Referee Crew Calls in the NFL</title><link href="https://www.ryancheley.com/presenting-data-referee-crew-calls-in-the-nfl.html" rel="alternate"></link><published>2016-12-25T20:00:00+01:00</published><updated>2016-12-25T20:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-12-25:/presenting-data-referee-crew-calls-in-the-nfl.html</id><summary type="html">&lt;p&gt;One of the great things about computers is their ability to take tabular data and turn them into pictures that are easier to interpret. I'm always amazed when given the opportunity to show data as a picture, more people don't jump at the chance.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href="http://www.espn.com/blog/nflnation/post/_/id/225804/aaron-rodgers-could-get-some-help-from-referee-jeff-triplette"&gt;this piece on ESPN ‚Ä¶&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the great things about computers is their ability to take tabular data and turn them into pictures that are easier to interpret. I'm always amazed when given the opportunity to show data as a picture, more people don't jump at the chance.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href="http://www.espn.com/blog/nflnation/post/_/id/225804/aaron-rodgers-could-get-some-help-from-referee-jeff-triplette"&gt;this piece on ESPN regarding the difference in officiating crews and their calls&lt;/a&gt; has some great data in it regarding how different officiating crews call games.&lt;/p&gt;
&lt;p&gt;One thing I find a bit disconcerting is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;~~One of the rows is missing data so that row looks 'odd' in the context of the story and makes it look like the writer missed a big thing ... they didn't~~ (it's since been fixed)&lt;/li&gt;
&lt;li&gt;This tabular format is just begging to be displayed as a picture.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Perhaps the issue here is that the author didn't know how to best visualize the data to make his story, but I'm going to help him out.&lt;/p&gt;
&lt;p&gt;If we start from the underlying premise that not all officiating crews call games in the same way, we want to see in what ways they differ.&lt;/p&gt;
&lt;p&gt;The data below is a reproduction of the table from the article:&lt;/p&gt;
&lt;p&gt;REFEREE              DEF. OFFSIDE   ENCROACH   FALSE START   NEUTRAL ZONE   TOTAL&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Triplette, Jeff           39           2           34             6          81
  Anderson, Walt            12           2           39             10         63
  Blakeman, Clete           13           2           41             7          63
  Hussey, John              10           3           42             3          58
  Cheffers, Cartlon         22           0           31             3          56
  Corrente, Tony            14           1           31             8          54
  Steratore, Gene           19           1           29             5          54
  Torbert, Ronald           9            4           31             7          51
  Allen, Brad               15           1           28             6          50
  McAulay, Terry            10           4           23             12         49
  Vinovich, Bill            8            7           29             5          49
  Morelli, Peter            12           3           24             9          48
  Boger, Jerome             11           3           27             6          47
  Wrolstad, Craig           9            1           31             5          46
  Hochuli, Ed               5            2           33             4          44
  Coleman, Walt             9            2           25             4          40
  Parry, John               7            5           20             6          38&lt;/p&gt;
&lt;p&gt;The author points out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Jeff Triplette's crew has called a combined 81 such penalties -- 18 more than the next-highest crew and more than twice the amount of two others&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;The author goes on to talk about his interview with &lt;a href="https://en.wikipedia.org/wiki/Mike_Pereira"&gt;Mike Pereira&lt;/a&gt; (who happens to be ~~pimping~~ promoting his new book).&lt;/p&gt;
&lt;p&gt;While the table above is &lt;em&gt;helpful&lt;/em&gt; it's not an image that you can look at and ask, "Man, what the heck is going on?" There is a visceral aspect to it that says, something is wrong here ... but I can't &lt;strong&gt;really&lt;/strong&gt; be sure about what it is.&lt;/p&gt;
&lt;p&gt;Let's sum up the defensive penalties (Defensive Offsides, Encroachment, and Neutral Zone Infractions) and see what the table looks like:&lt;/p&gt;
&lt;p&gt;REFEREE              DEF Total   OFF Total   TOTAL&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Triplette, Jeff         47          34        81
  Anderson, Walt          24          39        63
  Blakeman, Clete         22          41        63
  Hussey, John            16          42        58
  Cheffers, Cartlon       25          31        56
  Corrente, Tony          23          31        54
  Steratore, Gene         25          29        54
  Torbert, Ronald         20          31        51
  Allen, Brad             22          28        50
  McAulay, Terry          26          23        49
  Vinovich, Bill          20          29        49
  Morelli, Peter          24          24        48
  Boger, Jerome           20          27        47
  Wrolstad, Craig         15          31        46
  Hochuli, Ed             11          33        44
  Coleman, Walt           15          25        40
  Parry, John             18          20        38&lt;/p&gt;
&lt;p&gt;Now we can see what might actually be going on, but it's still a bit hard for those visual people. If we take this data and then generate a scatter plot we might have a picture to show us the issue. Something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-113" height="222" src="/images/uploads/2017/12/Officials-Crew-Calls-NFL-2016-300x222.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;The horizontal dashed blue lines represent the average defensive calls per crew while the vertical dashed blue line represents the average offensive calls per crew. The gray box represents the area containing plus/minus 2 standard deviations from the mean for both offensive and defensive penalty calls.&lt;/p&gt;
&lt;p&gt;Notice anything? Yeah, me too. Jeff Triplette's crew is so far out of range for defensive penalties it's like they're watching a different game, or reading from a different play book.&lt;/p&gt;
&lt;p&gt;What I'd really like to be able to do is this same analysis but on a game by game basis. I don't think this would really change the way that Jeff Triplette and his crew call games, but it may point out some other inconsistencies that are worth exploring.&lt;/p&gt;
&lt;p&gt;Code for this project can be found on my &lt;a href="https://github.com/miloardot/python-files/blob/master/Referees"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="data visualization"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>Dropbox Files Word Cloud</title><link href="https://www.ryancheley.com/dropbox-files-word-cloud.html" rel="alternate"></link><published>2016-11-25T16:22:00+01:00</published><updated>2016-11-25T16:22:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-25:/dropbox-files-word-cloud.html</id><summary type="html">&lt;p&gt;In one of my &lt;a href="https://www.ryancheley.com/blog/2016/11/22/twitter-word-cloud"&gt;previous posts&lt;/a&gt; I walked through how I generated a wordcloud based on my most recent 20 tweets. I though it would be &lt;em&gt;neat&lt;/em&gt; to do this for my &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; file names as well. just to see if I could.&lt;/p&gt;
&lt;p&gt;When I first tried to do it ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;In one of my &lt;a href="https://www.ryancheley.com/blog/2016/11/22/twitter-word-cloud"&gt;previous posts&lt;/a&gt; I walked through how I generated a wordcloud based on my most recent 20 tweets. I though it would be &lt;em&gt;neat&lt;/em&gt; to do this for my &lt;a href="https://www.dropbox.com"&gt;Dropbox&lt;/a&gt; file names as well. just to see if I could.&lt;/p&gt;
&lt;p&gt;When I first tried to do it (as previously stated, the Twitter Word Cloud post was the first python script I wrote) I ran into some difficulties. I didn't really understand what I was doing (although I still don't &lt;strong&gt;really&lt;/strong&gt; understand, I at least have a vague idea of what the heck I'm doing now).&lt;/p&gt;
&lt;p&gt;The script isn't much different than the &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; word cloud. The only real differences are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the way in which the &lt;code&gt;words&lt;/code&gt; variable is being populated&lt;/li&gt;
&lt;li&gt;the mask that I'm using to display the cloud&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In order to go get the information from the file system I use the &lt;code&gt;glob&lt;/code&gt; library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next lines have not changed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;wordcloud&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WordCloud&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STOPWORDS&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instead of writing to a 'tweets' file I'm looping through the files, splitting them at the &lt;code&gt;/&lt;/code&gt; character and getting the last item (i.e. the file name) and appending it to the list &lt;code&gt;f&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;filename&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;glob&lt;/span&gt;.&lt;span class="nv"&gt;glob&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Dropbox/Ryan/**/*&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;recursive&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;filename&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The rest of the script generates the image and saves it to my Dropbox Account. Again, instead of using a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; logo, I'm using a &lt;strong&gt;Cloud&lt;/strong&gt; image I found &lt;a href="http://www.shapecollage.com/shapes/mask-cloud.png"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt;

&lt;span class="nv"&gt;stopwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;https&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}

&lt;span class="nv"&gt;logomask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;imread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;mask-cloud.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;wordcloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;WordCloud&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;font_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Library/Fonts/Inconsolata.otf&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;STOPWORDS&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
    &lt;span class="nv"&gt;background_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;white&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;logomask&lt;/span&gt;,
    &lt;span class="nv"&gt;max_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;,
    &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1800&lt;/span&gt;,
    &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1400&lt;/span&gt;
&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;generate&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;imshow&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt;.&lt;span class="nv"&gt;recolor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;color_func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;None&lt;/span&gt;, &lt;span class="nv"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;savefig&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Dropbox/Ryan/Post Images/dropbox_wordcloud.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we get this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-112" height="200" src="/images/uploads/2017/12/dropbox_wordcloud-300x200.png" width="300"&gt;&lt;/p&gt;</content><category term="Python"></category><category term="python"></category></entry><entry><title>Installing the osmnx package for Python</title><link href="https://www.ryancheley.com/installing-the-osmnx-package-for-python.html" rel="alternate"></link><published>2016-11-24T16:44:00+01:00</published><updated>2016-11-24T16:44:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-24:/installing-the-osmnx-package-for-python.html</id><summary type="html">&lt;p&gt;I read about a cool gis package for Python and decided I wanted to play around with it. This post isn't about any of the things I've learned about the package, it's so I can remember how I installed it so I can do it again if I need to ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I read about a cool gis package for Python and decided I wanted to play around with it. This post isn't about any of the things I've learned about the package, it's so I can remember how I installed it so I can do it again if I need to. The package is described by it's author in his &lt;a href="http://geoffboeing.com/2016/11/osmnx-python-street-networks/"&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To install &lt;code&gt;osmnx&lt;/code&gt; I needed to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="http://geoffboeing.com/2016/11/osmnx-python-street-networks/"&gt;Home Brew&lt;/a&gt; if it's not already installed by running this command (as an administrator) in the &lt;code&gt;terminal&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="https://github.com/kjordahl/SciPy-Tutorial-2015/issues/1"&gt;Home Brew to install the &lt;code&gt;spatialindex&lt;/code&gt; dependency&lt;/a&gt;. From the &lt;code&gt;terminal&lt;/code&gt; (again as an administrator):&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew install spatialindex&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In python run pip to install &lt;code&gt;rtree&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install rtree&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In python run pip to install &lt;code&gt;osmnx&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pip install osmnx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I did this on my 2014 iMac but didn't document the process. This lead to a problem when I tried to run some code on my 2012 MacBook Pro.&lt;/p&gt;
&lt;p&gt;Step 3 may not be required, but I'm &lt;strong&gt;not&lt;/strong&gt; sure and I don't want to not have it written down and then wonder why I can't get &lt;code&gt;osmnx&lt;/code&gt; to install in 3 years when I try again!&lt;/p&gt;
&lt;p&gt;Remember, you're not going to remember what you did, so you need to write it down!&lt;/p&gt;</content><category term="Python"></category><category term="osmnx"></category><category term="package"></category><category term="python"></category></entry><entry><title>Twitter Word Cloud</title><link href="https://www.ryancheley.com/twitter-word-cloud.html" rel="alternate"></link><published>2016-11-23T03:41:00+01:00</published><updated>2016-11-23T03:41:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-23:/twitter-word-cloud.html</id><summary type="html">&lt;p&gt;&lt;a href="/pitching-stats-and-python.html"&gt;As previously mentioned&lt;/a&gt; I'm a bit of a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user. One of the things that I came across, actually the first python project I did, was writing code to create a &lt;a href="https://en.wikipedia.org/wiki/Tag_cloud"&gt;word cloud&lt;/a&gt; based on the most recent 20 posts of my &lt;a href="https://www.twitter.com/"&gt;Twitter&lt;/a&gt; feed.&lt;/p&gt;
&lt;p&gt;I used a post by &lt;a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html"&gt;Sebastian ‚Ä¶&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/pitching-stats-and-python.html"&gt;As previously mentioned&lt;/a&gt; I'm a bit of a &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user. One of the things that I came across, actually the first python project I did, was writing code to create a &lt;a href="https://en.wikipedia.org/wiki/Tag_cloud"&gt;word cloud&lt;/a&gt; based on the most recent 20 posts of my &lt;a href="https://www.twitter.com/"&gt;Twitter&lt;/a&gt; feed.&lt;/p&gt;
&lt;p&gt;I used a post by &lt;a href="http://sebastianraschka.com/Articles/2014_twitter_wordcloud.html"&gt;Sebastian Raschka&lt;/a&gt; and a post on &lt;a href="http://www.techtrek.io/generating-word-cloud-from-twitter-feed-with-python/"&gt;TechTrek.io&lt;/a&gt; as guides and was able to generate the word cloud pretty easily.&lt;/p&gt;
&lt;p&gt;As usual, we import the need libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OAuthHandler&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;wordcloud&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WordCloud&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STOPWORDS&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code below allows access to my feed using secret keys from my twitter account. They have been removed from the post so that my twitter account doesn't stop being mine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;consumer_key = consumer_key
consumer_secret = consumer_secret
access_token = access_token
access_secret = access_secret

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)

api = tweepy.API(auth)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next I open a file called &lt;code&gt;tweets&lt;/code&gt; and write to it the tweets (referred to in the &lt;code&gt;for&lt;/code&gt; loop as &lt;code&gt;status&lt;/code&gt;) and encode with &lt;code&gt;utf-8&lt;/code&gt;. If you don't do the following error is thrown: &lt;code&gt;TypeError: a bytes-like object is required, not 'str'&lt;/code&gt;. And who wants a &lt;code&gt;TypeError&lt;/code&gt; to be thrown?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tweets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;wb&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;api&lt;/span&gt;.&lt;span class="nv"&gt;user_timeline&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;:
    &lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;write&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;api&lt;/span&gt;.&lt;span class="nv"&gt;get_status&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;.&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;encode&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;utf-8&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I'm ready to do something with the tweets that I collected. I read the file into a variable called &lt;code&gt;words&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;open&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tweets&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;rb&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;:
    &lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;words&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;line&lt;/span&gt;.&lt;span class="nv"&gt;decode&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;utf-8&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;f&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we start on constructing the word cloud itself. We declare words that we want to ignore (in this case &lt;strong&gt;https&lt;/strong&gt; is ignored, otherwise it would count the protocol of links that I've been tweeting).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stopwords = {&amp;#39;https&amp;#39;, &amp;#39;co&amp;#39;, &amp;#39;RT&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Read in the twitter bird to act as a mask&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;logomask = imread(&amp;#39;twitter_mask.png&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, generate the wordcloud, plot it and save the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;WordCloud&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;font_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/Users/Ryan/Library/Fonts/Inconsolata.otf&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;STOPWORDS&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;stopwords&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
    &lt;span class="nv"&gt;background_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;white&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,
    &lt;span class="nv"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;logomask&lt;/span&gt;,
    &lt;span class="nv"&gt;max_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;,
    &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1800&lt;/span&gt;,
    &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1400&lt;/span&gt;
&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;generate&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;words&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;imshow&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;wordcloud&lt;/span&gt;.&lt;span class="nv"&gt;recolor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;color_func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;None&lt;/span&gt;, &lt;span class="nv"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;axis&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;off&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;savefig&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;./Twitter Word Cloud - &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;time&lt;/span&gt;.&lt;span class="nv"&gt;strftime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%Y%m%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.png&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;dpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second to last line generates a dynamically named file based on the date so that I can do this again and save the image without needing to do too much thinking.&lt;/p&gt;
&lt;p&gt;Full Code can be found on my &lt;a href="https://www.github.com/miloardot/"&gt;GitHub Report&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Twitter Word Cloud as of today looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-116" height="200" src="/images/uploads/2017/12/Twitter-Word-Cloud-20161122-300x200.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;I think it will be fun to post this image every once in a while, so as I remember, I'll run the script again and update the Word Cloud!&lt;/p&gt;</content><category term="Python"></category><category term="python"></category><category term="twitter"></category></entry><entry><title>Pitching Stats and Python</title><link href="https://www.ryancheley.com/pitching-stats-and-python.html" rel="alternate"></link><published>2016-11-21T05:19:00+01:00</published><updated>2016-11-21T05:19:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-21:/pitching-stats-and-python.html</id><summary type="html">&lt;p&gt;I'm an avid &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user, mostly as a replacement &lt;a href="https://en.wikipedia.org/wiki/RSS"&gt;RSS&lt;/a&gt; feeder, but also because I can't stand &lt;a href="https://www.facebook.com"&gt;Facebook&lt;/a&gt; and this allows me to learn about really important world events when I need to and to just stay isolated with &lt;a href="http://gerdleonhard.typepad.com/.a/6a00d8341c59be53ef013488b614d8970c-800wi"&gt;my head in the sand&lt;/a&gt; when I don't. It's perfect for ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm an avid &lt;a href="https://www.twitter.com"&gt;Twitter&lt;/a&gt; user, mostly as a replacement &lt;a href="https://en.wikipedia.org/wiki/RSS"&gt;RSS&lt;/a&gt; feeder, but also because I can't stand &lt;a href="https://www.facebook.com"&gt;Facebook&lt;/a&gt; and this allows me to learn about really important world events when I need to and to just stay isolated with &lt;a href="http://gerdleonhard.typepad.com/.a/6a00d8341c59be53ef013488b614d8970c-800wi"&gt;my head in the sand&lt;/a&gt; when I don't. It's perfect for me.&lt;/p&gt;
&lt;p&gt;One of the people I follow on &lt;a href="https://twitter.com/drdrang"&gt;Twitter&lt;/a&gt; is &lt;a href="http://www.leancrew.com/all-this/"&gt;Dr. Drang&lt;/a&gt; who is an Engineer of some kind by training. He also appears to be a fan of baseball and posted an &lt;a href="http://leancrew.com/all-this/2016/09/jake-arrieta-and-python/"&gt;analysis of Jake Arrieata's pitching&lt;/a&gt; over the course of the 2016 MLB season (through September 22 at least).&lt;/p&gt;
&lt;p&gt;When I first read it I hadn't done too much with Python, and while I found the results interesting, I wasn't sure what any of the code was doing (not really anyway).&lt;/p&gt;
&lt;p&gt;Since I had just spent the last couple of days learning more about &lt;code&gt;BeautifulSoup&lt;/code&gt; specifically and &lt;code&gt;Python&lt;/code&gt; in general I thought I'd try to do two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the data used by Dr. Drang&lt;/li&gt;
&lt;li&gt;Try to generalize it for any pitcher&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dr. Drang uses a flat csv file for his analysis and I wanted to use &lt;code&gt;BeautifulSoup&lt;/code&gt; to scrape the data from &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt; directly.&lt;/p&gt;
&lt;p&gt;OK, I know how to do that (sort of ¬Ø\&lt;em&gt;(„ÉÑ)&lt;/em&gt;/¬Ø)&lt;/p&gt;
&lt;p&gt;First things first, import your libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;strptime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next two lines I ~~stole~~ borrowed directly from Dr. Drang's post. The first line is to force the plot output to be inline with the code entered in the terminal. The second he explains as such:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The odd ones are the &lt;code&gt;rcParams&lt;/code&gt; call, which makes the inline graphs bigger than the tiny Jupyter default, and the functools import, which will help us create ERAs over small portions of the season.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not using &lt;a href="http://jupyter.org"&gt;Jupyter&lt;/a&gt; I'm using &lt;a href="http://rodeo.yhat.com"&gt;Rodeo&lt;/a&gt; as my IDE but I kept them all the same:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;%matplotlib&lt;/span&gt; &lt;span class="kr"&gt;inline&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the next section I use &lt;code&gt;BeautifulSoup&lt;/code&gt; to scrape the data I want from &lt;a href="https://www.espn.com"&gt;ESPN&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;http://www.espn.com/mlb/player/gamelog/_/id/30145/jake-arrieta&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;requests&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;

&lt;span class="nv"&gt;date_pitched&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;full_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;part_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
&lt;span class="nv"&gt;earned_runs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="nv"&gt;tables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;lxml&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;table&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;class_&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tablehead mod-player-stats&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tables&lt;/span&gt;:
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;tr&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;: # &lt;span class="nv"&gt;Remove&lt;/span&gt; &lt;span class="nv"&gt;header&lt;/span&gt;
        &lt;span class="nv"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;td&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt;:
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;re&lt;/span&gt;.&lt;span class="nv"&gt;match&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;[a-zA-Z]{3}\s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;None&lt;/span&gt;:
                &lt;span class="nv"&gt;date_pitched&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
                    &lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
                    &lt;span class="nv"&gt;year&lt;/span&gt;
                    , &lt;span class="nv"&gt;strptime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;], &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;%b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;tm_mon&lt;/span&gt;
                    , &lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                    &lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;full_ip&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;part_ip&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;str&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;earned_runs&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;columns&lt;/span&gt;[&lt;span class="mi"&gt;6&lt;/span&gt;].&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;except&lt;/span&gt; &lt;span class="nv"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;:
            &lt;span class="nv"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is basically a rehash of what I did for my Passer scraping (&lt;a href="https://www.ryancheley.com/blog/2016/11/17/web-scrapping"&gt;here&lt;/a&gt;, &lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;here&lt;/a&gt;, and &lt;a href="https://www.ryancheley.com/blog/2016/11/19/web-scrapping-passer-data-part-iii"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This proved a useful starting point, but unlike the NFL data on ESPN which has pre- and regular season breaks, the MLB data on ESPN has monthly breaks, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Regular Season Games through October 2, 2016
DATE
Oct 1
Monthly Totals
DATE
Sep 24
Sep 19
Sep 14
Sep 9
Monthly Totals
DATE
Jun 26
Jun 20
Jun 15
Jun 10
Jun 4
Monthly Totals
DATE
May 29
May 23
May 17
May 12
May 7
May 1
Monthly Totals
DATE
Apr 26
Apr 21
Apr 15
Apr 9
Apr 4
Monthly Totals
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, all I wanted was the lines that correspond to &lt;code&gt;columns[0].text&lt;/code&gt; with actual dates like 'Apr 21'.&lt;/p&gt;
&lt;p&gt;In reviewing how the dates were being displayed it was basically '%b %D', i.e. May 12, Jun 4, etc. This is great because it means I want 3 letters and then a space and nothing else. Turns out, Regular Expressions are great for stuff like this!&lt;/p&gt;
&lt;p&gt;After a bit of &lt;a href="https://www.google.com"&gt;Googling&lt;/a&gt; I got what I was looking for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;re.match(&amp;#39;[a-zA-Z]{3}\s&amp;#39;, columns[0].text)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To get my regular expression and then just add an &lt;code&gt;if&lt;/code&gt; in front and call it good!&lt;/p&gt;
&lt;p&gt;The only issue was that as I ran it in testing, I kept getting no return data. What I didn't realize is that returns a &lt;code&gt;NoneType&lt;/code&gt; when it's false. Enter more Googling and I see that in order for the &lt;code&gt;if&lt;/code&gt; to work I have to add the &lt;code&gt;is not None&lt;/code&gt; which leads to results that I wanted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Oct 22
Oct 16
Oct 13
Oct 11
Oct 7
Oct 1
Sep 24
Sep 19
Sep 14
Sep 9
Jun 26
Jun 20
Jun 15
Jun 10
Jun 4
May 29
May 23
May 17
May 12
May 7
May 1
Apr 26
Apr 21
Apr 15
Apr 9
Apr 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The next part of the transformation is to convert to a date so I can sort on it (and display it properly) later.&lt;/p&gt;
&lt;p&gt;With all of the data I need, I put the columns into a &lt;code&gt;Dictionary&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dic = {&amp;#39;date&amp;#39;: date_pitched, &amp;#39;Full_IP&amp;#39;: full_ip, &amp;#39;Partial_IP&amp;#39;: part_ip, &amp;#39;ER&amp;#39;: earned_runs}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then into a &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games = pd.DataFrame(dic)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and apply some manipulations to the &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[&amp;#39;Full_IP&amp;#39;,&amp;#39;Partial_IP&amp;#39;, &amp;#39;ER&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[&amp;#39;Full_IP&amp;#39;,&amp;#39;Partial_IP&amp;#39;, &amp;#39;ER&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numeric&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now to apply some Baseball math to get the Earned Run Average:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games[&amp;#39;IP&amp;#39;] = games.Full_IP + games.Partial_IP/3
games[&amp;#39;GERA&amp;#39;] = games.ER/games.IP*9
games[&amp;#39;CIP&amp;#39;] = games.IP.cumsum()
games[&amp;#39;CER&amp;#39;] = games.ER.cumsum()
games[&amp;#39;ERA&amp;#39;] = games.CER/games.CIP*9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the next part of Dr. Drang's post he writes a custom function to help create moving averages. It looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only problem with it is I called my &lt;code&gt;DataFrame&lt;/code&gt; &lt;code&gt;games&lt;/code&gt;, not &lt;code&gt;df&lt;/code&gt;. Simple enough, I'll just replace &lt;code&gt;df&lt;/code&gt; with &lt;code&gt;games&lt;/code&gt; and call it a day, right? Nope:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When I try to run the code I get errors. Lots of them. This is because while i made sure to update the &lt;code&gt;DataFrame&lt;/code&gt; name to be correct I overlooked that the function was using a parameter called &lt;code&gt;games&lt;/code&gt; and &lt;code&gt;Python&lt;/code&gt; got a bit confused about what was what.&lt;/p&gt;
&lt;p&gt;OK, round two, replace the paramater &lt;code&gt;games&lt;/code&gt; with &lt;code&gt;games_t&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;rera&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;games_t&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;:
        &lt;span class="nv"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;IP&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
        &lt;span class="nv"&gt;er&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ER&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;games_t&lt;/span&gt;:&lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;].&lt;span class="nv"&gt;sum&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;er&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No more errors! Now we calculate the 3- and 4-game moving averages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;era4 = partial(rera, 4)
era3 = partial(rera,3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then add them to the &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;games[&amp;#39;ERA4&amp;#39;] = games.apply(era4, axis=1)
games[&amp;#39;ERA3&amp;#39;] = games.apply(era3, axis=1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And print out a pretty graph:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA3&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA4&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;GERA&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;.k&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="nv"&gt;plot_date&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;date&lt;/span&gt;, &lt;span class="nv"&gt;games&lt;/span&gt;.&lt;span class="nv"&gt;ERA&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;--k&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;plt&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dr. Drang focused on Jake Arrieta (he is a Chicago guy after all), but I thought it was be interested to look at the Graphs for Arrieta and the top 5 finishers in the NL Cy Young Voting (because Clayton Kershaw was 5th place and I'm a Dodgers guy).&lt;/p&gt;
&lt;p&gt;Here is the graph for &lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/30145/jake-arrieta"&gt;Jake Arrieata&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-177" height="222" src="/images/uploads/2016/11/arrieta-300x222.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;And here are the graphs for the top 5 finishers in Ascending order in the &lt;a href="http://bbwaa.com/16-nl-cy/"&gt;2016 NL Cy Young voting&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28976/max-scherzer"&gt;Max Scherzer&lt;/a&gt; winner of the 2016 NL &lt;a href="https://en.wikipedia.org/wiki/Cy_Young_Award"&gt;Cy Young Award&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-178" height="229" src="/images/uploads/2016/11/scherzer-300x229.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28487/jon-lester"&gt;Jon Lester&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-182" height="223" src="/images/uploads/2016/11/lester-300x223.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/33173/kyle-hendricks"&gt;Kyle Hendricks&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-179" height="225" src="/images/uploads/2016/11/hendricks-300x225.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/29949/madison-bumgarner"&gt;Madison Bumgarner&lt;/a&gt;&lt;br&gt;
&lt;img alt="" class="alignnone size-medium wp-image-180" height="232" src="/images/uploads/2016/11/bumgarner-300x232.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.espn.com/mlb/player/gamelog/_/id/28963/clayton-kershaw"&gt;Clayton Kershaw&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-medium wp-image-176" height="232" src="/images/uploads/2016/11/kershaw-300x232.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;I've not spent much time analyzing the data, but I'm sure that it says &lt;em&gt;something&lt;/em&gt;. At the very least, it got me to wonder, 'How many 0 ER games did each pitcher pitch?'&lt;/p&gt;
&lt;p&gt;I also noticed that the stats include the playoffs (which I wasn't intending). Another thing to look at later.&lt;/p&gt;
&lt;p&gt;Legend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Black Dot - ERA on Date of Game&lt;/li&gt;
&lt;li&gt;Black Solid Line - Cummulative ERA&lt;/li&gt;
&lt;li&gt;Blue Solid Line - 3-game trailing average ERA&lt;/li&gt;
&lt;li&gt;Red Solid Line - 4-game trailing average ERA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full code can be found on my &lt;a href="https://www.github.com/miloardot"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="mlb"></category><category term="python"></category></entry><entry><title>Web Scrapping - Passer Data (Part I)</title><link href="https://www.ryancheley.com/web-scrapping.html" rel="alternate"></link><published>2016-11-18T00:54:00+01:00</published><updated>2016-11-18T00:54:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-11-18:/web-scrapping.html</id><summary type="html">&lt;p&gt;For the first time in &lt;strong&gt;many&lt;/strong&gt; years I've joined a &lt;a href="http://www.espn.com"&gt;Fantasy Football league&lt;/a&gt; with some of my family. One of the reasons I have not engaged in the Fantasy football is that, frankly, I'm not very good. In fact, I'm pretty bad. I have a passing interest in Football, but ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the first time in &lt;strong&gt;many&lt;/strong&gt; years I've joined a &lt;a href="http://www.espn.com"&gt;Fantasy Football league&lt;/a&gt; with some of my family. One of the reasons I have not engaged in the Fantasy football is that, frankly, I'm not very good. In fact, I'm pretty bad. I have a passing interest in Football, but my interests lie more with Baseball than football (especially in light of the NFLs policy on punishing players for some infractions of league rules, but not punishing them for infractions of societal norms (see Tom Brady and Ray Lewis respectively).&lt;/p&gt;
&lt;p&gt;That being said, I am in a Fantasy Football league this year, and as of this writing am a respectable 5-5 and only 2 games back from making the playoffs with 3 games left.&lt;/p&gt;
&lt;p&gt;This means that what I started on yesterday I really should have started on much sooner, but I didn't.&lt;/p&gt;
&lt;p&gt;I had been counting on ESPN's 'projected points' to help guide me to victory ... it's working about as well as flipping a coin (see my record above).&lt;/p&gt;
&lt;p&gt;I had a couple of days off from work this week and some time to tinker with Python, so I thought, what the hell, let's see what I can do.&lt;/p&gt;
&lt;p&gt;Just to see what other people had done I did a quick &lt;a href="http://www.google.com"&gt;Google Search&lt;/a&gt; and found &lt;a href="http://danielfrg.com/blog/2013/04/01/nba-scraping-data/"&gt;someone that had done what I was trying to do with data from the NBA in 2013&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using their post as a model I set to work.&lt;/p&gt;
&lt;p&gt;The basic strategy I am mimicking is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get the Teams and put them into a dictionary&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ryancheley.com/blog/2016/11/18/web-scrapping-passer-data-part-ii"&gt;Get the 'matches' and put them into a dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get the player stats and put them into a dictionary for later analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I start of importing some standard libraries &lt;code&gt;pandas&lt;/code&gt;, &lt;code&gt;requests&lt;/code&gt;, and &lt;code&gt;BeautifulSoup&lt;/code&gt; (the other libraries are for later).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I need to set up some variables. &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;&lt;code&gt;BeautifulSoup&lt;/code&gt; is a Python library for pulling data out of HTML and XML files.&lt;/a&gt;. It's pretty sweet. The code below is declaring a URL to scrape and then users the &lt;code&gt;requests&lt;/code&gt; library to get the actual &lt;code&gt;HTML&lt;/code&gt; of the page and put it into a variable called &lt;code&gt;r&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://espn.go.com/nfl/teams&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;r&lt;/code&gt; has a method called &lt;code&gt;text&lt;/code&gt; which I'll use with &lt;code&gt;BeautifulSoup&lt;/code&gt; to create the &lt;code&gt;soup&lt;/code&gt;. The &lt;code&gt;'lxml'&lt;/code&gt; declares the parser type to be used. The default is &lt;code&gt;lxml&lt;/code&gt; and when I left it off I was presented with a warning, so I decided to explicitly state which parser I was going to be using to avoid the warning.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;soup = BeautifulSoup(r.text, &amp;#39;lxml&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next I use the &lt;code&gt;find_all&lt;/code&gt; function from &lt;code&gt;BeautifulSoup&lt;/code&gt;. The cool thing about &lt;code&gt;find_all&lt;/code&gt; is that you can either pass just a tag element, i.e. &lt;code&gt;li&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt;, but you can add an additional &lt;code&gt;class_&lt;/code&gt; argument (notice the underscore at the end ... I missed it more than once and got an error because &lt;code&gt;class&lt;/code&gt; is a keyword used by &lt;code&gt;Python&lt;/code&gt;). Below I'm getting all of the `ul' elements of the class type 'medium-logos'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tables = soup.find_all(&amp;#39;ul&amp;#39;, class_=&amp;#39;medium-logos&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I set up some &lt;code&gt;list&lt;/code&gt; variables to hold the items I'll need for later use to create my &lt;code&gt;dictionary&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;teams = []
prefix_1 = []
prefix_2 = []
teams_urls = []
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we do some &lt;em&gt;actual&lt;/em&gt; programming:&lt;/p&gt;
&lt;p&gt;Using a nested &lt;code&gt;for&lt;/code&gt; loop to find all of the &lt;code&gt;li&lt;/code&gt; elements in the variable called &lt;code&gt;lis&lt;/code&gt; which is based on the variable &lt;code&gt;tables&lt;/code&gt; (recall this is all of the &lt;code&gt;HTML&lt;/code&gt; from the page I scrapped that has &lt;em&gt;only&lt;/em&gt; the tags that match &lt;code&gt;&amp;lt;ul class='medium-logos&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt; and all of the content between them).&lt;/p&gt;
&lt;p&gt;The nested &lt;code&gt;for&lt;/code&gt; loop creates 2 new variables which are used to populate the 4 lists from above. The creating of the &lt;code&gt;info&lt;/code&gt; variable gets the a tag from the li tags. The &lt;code&gt;url&lt;/code&gt; variable takes the &lt;code&gt;href&lt;/code&gt; tag from the &lt;code&gt;info&lt;/code&gt; variable. In order to add an item to a list (remember, all of the lists above are empty at this point) we have to invoke the method &lt;code&gt;append&lt;/code&gt; on each of the lists with the data that we care about (as we look through).&lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;split&lt;/code&gt; can be used on a string (which &lt;code&gt;url&lt;/code&gt; is). It allows you to take a string apart based on a passed through value and convert the output into a list. This is super useful with URLs since there are many cases where we're trying to get to the path. Using &lt;code&gt;split('/')&lt;/code&gt; allows the URL to be broken into it's constituent parts. The negative indexes used allows you to go from right to left instead of left to right.&lt;/p&gt;
&lt;p&gt;To really break this down a bit, if we looked at just one of the URLs we'd get this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://www.espn.com/nfl/team/_/name/ten/tennessee-titans&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;split('/')&lt;/code&gt; command will turn the URL into this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;['http:', '', 'www.espn.com', 'nfl', 'team', '_', 'name', 'ten', 'tennessee-titans']&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Using the negative index allows us to get the right most 2 values that we need.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tables&lt;/span&gt;:
    &lt;span class="nv"&gt;lis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;table&lt;/span&gt;.&lt;span class="nv"&gt;find_all&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;li&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;li&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;lis&lt;/span&gt;:
        &lt;span class="nv"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;li&lt;/span&gt;.&lt;span class="nv"&gt;h5&lt;/span&gt;.&lt;span class="nv"&gt;a&lt;/span&gt;
        &lt;span class="nv"&gt;teams&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;info&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt;[&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;href&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;]
        &lt;span class="nv"&gt;teams_urls&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;prefix_1&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;prefix_2&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;url&lt;/span&gt;.&lt;span class="nv"&gt;split&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;[&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we put it all together into a dictionary&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dic = {&amp;#39;url&amp;#39;: teams_urls, &amp;#39;prefix_2&amp;#39;: prefix_2, &amp;#39;prefix_1&amp;#39;: prefix_1, &amp;#39;team&amp;#39;: teams}
teams = pd.DataFrame(dic)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the end of part 1. Parts 2 and 3 will be coming later this week.&lt;/p&gt;
&lt;p&gt;I've also posted all of the code to my &lt;a href="https://github.com/miloardot"&gt;GitHub Repo&lt;/a&gt;.&lt;/p&gt;</content><category term="Python"></category><category term="nfl"></category><category term="python"></category></entry><entry><title>An Update to my first Python Script</title><link href="https://www.ryancheley.com/an-update-to-my-first-python-script.html" rel="alternate"></link><published>2016-10-22T16:00:00+02:00</published><updated>2016-10-22T16:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-22:/an-update-to-my-first-python-script.html</id><summary type="html">&lt;p&gt;Nothing can ever really be considered &lt;strong&gt;done&lt;/strong&gt; when you're talking about programming, right?&lt;/p&gt;
&lt;p&gt;I decided to try and add images to the &lt;a href="https://github.com/miloardot/python-files/commit/e603eb863dbba169938b63df3fa82263df942984"&gt;python script I wrote last week&lt;/a&gt; and was able to do it, with not too much hassel.&lt;/p&gt;
&lt;p&gt;The first thing I decided to do was to update the ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nothing can ever really be considered &lt;strong&gt;done&lt;/strong&gt; when you're talking about programming, right?&lt;/p&gt;
&lt;p&gt;I decided to try and add images to the &lt;a href="https://github.com/miloardot/python-files/commit/e603eb863dbba169938b63df3fa82263df942984"&gt;python script I wrote last week&lt;/a&gt; and was able to do it, with not too much hassel.&lt;/p&gt;
&lt;p&gt;The first thing I decided to do was to update the code on &lt;code&gt;pythonista&lt;/code&gt; on my iPad Pro and verify that it would run.&lt;/p&gt;
&lt;p&gt;It took some doing (mostly because I &lt;em&gt;forgot&lt;/em&gt; that the attributes in an &lt;code&gt;img&lt;/code&gt; tag included what I needed ... initially I was trying to programatically get the name of the person from the image file itelf using &lt;a href="https://en.wikipedia.org/wiki/Regular_expression"&gt;regular expressions&lt;/a&gt; ... it didn't work out well).&lt;/p&gt;
&lt;p&gt;Once that was done I branched the &lt;code&gt;master&lt;/code&gt; on GitHub into a &lt;code&gt;development&lt;/code&gt; branch and copied the changes there. Once that was done I performed a &lt;strong&gt;pull request&lt;/strong&gt; on the macOS GitHub Desktop Application.&lt;/p&gt;
&lt;p&gt;Finally, I used the macOS GitHub app to merge my &lt;strong&gt;pull request&lt;/strong&gt; from &lt;code&gt;development&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt; and now have the changes.&lt;/p&gt;
&lt;p&gt;The updated script will now also get the image data to display into the multi markdown table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;---&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Mike&lt;/span&gt; &lt;span class="n"&gt;Cheley&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;CEO&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Creative&lt;/span&gt; &lt;span class="n"&gt;Director&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Mike_Cheley.png &amp;quot;Mike Cheley&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ozzy&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Official&lt;/span&gt; &lt;span class="n"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Ozzy.png &amp;quot;Ozzy&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Jay&lt;/span&gt; &lt;span class="n"&gt;Sant&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Vice&lt;/span&gt; &lt;span class="n"&gt;President&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Jay_Sant.png &amp;quot;Jay Sant&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Shawn&lt;/span&gt; &lt;span class="n"&gt;Isaac&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Vice&lt;/span&gt; &lt;span class="n"&gt;President&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Shawn_Isaac.png &amp;quot;Shawn Isaac&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Jason&lt;/span&gt; &lt;span class="n"&gt;Gurzi&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;SEM&lt;/span&gt; &lt;span class="n"&gt;Specialist&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Jason_Gurzi.png &amp;quot;Jason Gurzi&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Yvonne&lt;/span&gt; &lt;span class="n"&gt;Valles&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Director&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Impressions&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Yvonne_Valles.png &amp;quot;Yvonne Valles&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ed&lt;/span&gt; &lt;span class="n"&gt;Lowell&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Senior&lt;/span&gt; &lt;span class="n"&gt;Designer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Ed_Lowell.png &amp;quot;Ed Lowell&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Paul&lt;/span&gt; &lt;span class="n"&gt;Hasas&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Interface&lt;/span&gt; &lt;span class="n"&gt;Designer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Paul_Hasas.png &amp;quot;Paul Hasas&amp;quot;)|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Alan&lt;/span&gt; &lt;span class="n"&gt;Schmidt&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Senior&lt;/span&gt; &lt;span class="n"&gt;Web&lt;/span&gt; &lt;span class="n"&gt;Developer&lt;/span&gt;&lt;span class="o"&gt;|!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.graphtek.com/user_images/Team/Alan_Schmidt.png &amp;quot;Alan Schmidt&amp;quot;)|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which gets displayed as this:&lt;/p&gt;
&lt;p&gt;Name            Title                           Image&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mike Cheley     CEO/Creative Director           &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Mike_Cheley.png" title="Mike Cheley"&gt;
  Ozzy            Official Greeter                &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Ozzy.png" title="Ozzy"&gt;
  Jay Sant        Vice President                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Jay_Sant.png" title="Jay Sant"&gt;
  Shawn Isaac     Vice President                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Shawn_Isaac.png" title="Shawn Isaac"&gt;
  Jason Gurzi     SEM Specialist                  &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Jason_Gurzi.png" title="Jason Gurzi"&gt;
  Yvonne Valles   Director of First Impressions   &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Yvonne_Valles.png" title="Yvonne Valles"&gt;
  Ed Lowell       Senior Designer                 &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Ed_Lowell.png" title="Ed Lowell"&gt;
  Paul Hasas      User Interface Designer         &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Paul_Hasas.png" title="Paul Hasas"&gt;
  Alan Schmidt    Senior Web Developer            &lt;img alt="alt text" src="http://www.graphtek.com/user_images/Team/Alan_Schmidt.png" title="Alan Schmidt"&gt;&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>My First Python Script that does 'something'</title><link href="https://www.ryancheley.com/my%E2%80%93first%E2%80%93python-script-that-does-something.html" rel="alternate"></link><published>2016-10-15T21:33:00+02:00</published><updated>2016-10-15T21:33:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-15:/my‚Äìfirst‚Äìpython-script-that-does-something.html</id><summary type="html">&lt;p&gt;I've been interested in python as a tool for a while and today I had the chance to try and see what I could do.&lt;/p&gt;
&lt;p&gt;With my 12.9 iPad Pro set up at my desk, I started out. I have &lt;a href="http://omz-software.com/pythonista/"&gt;Ole Zorn's Pythonista 3&lt;/a&gt; installed so I started on ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been interested in python as a tool for a while and today I had the chance to try and see what I could do.&lt;/p&gt;
&lt;p&gt;With my 12.9 iPad Pro set up at my desk, I started out. I have &lt;a href="http://omz-software.com/pythonista/"&gt;Ole Zorn's Pythonista 3&lt;/a&gt; installed so I started on my first script.&lt;/p&gt;
&lt;p&gt;My first task was to scrape something from a website. I tried to start with a website listing doctors, but for some reason the html rendered didn't include anything useful.&lt;/p&gt;
&lt;p&gt;So the next best thing was to find a website with staff listed on it. I used my dad's company and his &lt;a href="http://www.graphtek.com/Our-Team"&gt;staff listing&lt;/a&gt; as a starting point.&lt;/p&gt;
&lt;p&gt;I started with a quick Google search to find Pythonista Web Scrapping and came across &lt;a href="https://forum.omz-software.com/topic/1513/screen-scraping"&gt;this&lt;/a&gt; post on the Pythonista forums.&lt;/p&gt;
&lt;p&gt;That got me this much of my script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;myurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.graphtek.com/Our-Team&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_beautiful_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bs4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;html5lib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_beautiful_soup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I needed to see how to start traversing the html to get the elements that I needed. I recalled something I read a while ago and was (luckily) able to find some &lt;a href="https://first-web-scraper.readthedocs.io/en/latest/"&gt;help&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That got me this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tablemgmt = soup.findAll('div', attrs={'id':'our-team'})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This was close, but it would only return 2 of the 3 &lt;code&gt;div&lt;/code&gt; tags I cared about (the management team has a different id for some reason ... )&lt;/p&gt;
&lt;p&gt;I did a search for regular expressions and Python and found this useful &lt;a href="http://stackoverflow.com/questions/24748445/beautiful-soup-using-regex-to-find-tags"&gt;stackoverflow&lt;/a&gt; question and saw that if I updated my imports to include &lt;code&gt;re&lt;/code&gt; then I could use regular expressions.&lt;/p&gt;
&lt;p&gt;Great, update the imports section to this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import bs4, requests, re&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And added &lt;code&gt;re.compile&lt;/code&gt; to my &lt;code&gt;findAll&lt;/code&gt; to get this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tablemgmt = soup.findAll('div', attrs={'id':re.compile('our-team')})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now I had all 3 of the &lt;code&gt;div&lt;/code&gt; tags I cared about.&lt;/p&gt;
&lt;p&gt;Of course the next thing I wanted to do was get the information i cared out of the structure &lt;code&gt;tablemgmt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When I printed out the results I noticed leading and trailing square brackets and eveytime I tried to do something I'd get an error.&lt;/p&gt;
&lt;p&gt;It took an embarrassingly long time to realize that I needed to treat &lt;code&gt;tablemgmt&lt;/code&gt; as an array. Whoops!&lt;/p&gt;
&lt;p&gt;Once I got through that it was straight forward to loop through the data and output it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;list_of_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tablemgmt&lt;/span&gt;:

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;.&lt;span class="nv"&gt;findAll&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;span&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;class&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;team-name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;span class=&amp;quot;team-name&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:

&lt;span class="nv"&gt;list_of_names&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;list_of_titles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;tablemgmt&lt;/span&gt;:

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;.&lt;span class="nv"&gt;findAll&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;span&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;class&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;:&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;team-title&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;}&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;row&lt;/span&gt;.&lt;span class="nv"&gt;text&lt;/span&gt;.&lt;span class="nv"&gt;replace&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;span class=&amp;quot;team-title&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;len&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;:

&lt;span class="nv"&gt;list_of_titles&lt;/span&gt;.&lt;span class="nv"&gt;append&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last bit I wanted to do was to add some headers &lt;strong&gt;and&lt;/strong&gt; make the lists into a two column multimarkdown table.&lt;/p&gt;
&lt;p&gt;OK, first I needed to see how to 'combine' the lists into a multidimensional array. Another google search and ... success. Of course the answer would be on &lt;a href="http://stackoverflow.com/questions/12040989/printing-all-the-values-from-multiple-lists-at-the-same-time"&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With my knowldge of looping through arrays and the function &lt;code&gt;zip&lt;/code&gt; I was able to get this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;zip&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;list_of_names&lt;/span&gt;, &lt;span class="nv"&gt;list_of_titles&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;print&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;k&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which would output this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;|Mike Cheley|CEO/Creative Director|

|Ozzy|Official Greeter|

|Jay Sant|Vice President|

|Shawn Isaac|Vice President|

|Jason Gurzi|SEM Specialist|

|Yvonne Valles|Director of First Impressions|

|Ed Lowell|Senior Designer|

|Paul Hasas|User Interface Designer|

|Alan Schmidt|Senior Web Developer|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is close, however, it still needs headers.&lt;/p&gt;
&lt;p&gt;No problem, just add some static lines to print out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;print(&amp;#39;| Name | Title |&amp;#39;)
print(&amp;#39;| --- | --- |&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And voila, we have a multimarkdown table that was scrapped from a web page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;| Name | Title |
| --- | --- |
|Mike Cheley|CEO/Creative Director|
|Ozzy|Official Greeter|
|Jay Sant|Vice President|
|Shawn Isaac|Vice President|
|Jason Gurzi|SEM Specialist|
|Yvonne Valles|Director of First Impressions|
|Ed Lowell|Senior Designer|
|Paul Hasas|User Interface Designer|
|Alan Schmidt|Senior Web Developer|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which will render to this:&lt;/p&gt;
&lt;p&gt;Name            Title&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Mike Cheley     CEO/Creative Director
  Ozzy            Official Greeter
  Jay Sant        Vice President
  Shawn Isaac     Vice President
  Jason Gurzi     SEM Specialist
  Yvonne Valles   Director of First Impressions
  Ed Lowell       Senior Designer
  Paul Hasas      User Interface Designer
  Alan Schmidt    Senior Web Developer&lt;/p&gt;</content><category term="Python"></category></entry></feed>