<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Place on the Internet - Writing</title><link href="https://www.ryancheley.com/" rel="alternate"></link><link href="https://www.ryancheley.com/feeds/writing.atom.xml" rel="self"></link><id>https://www.ryancheley.com/</id><updated>2016-10-07T16:21:00+02:00</updated><entry><title>Converting Writing Examples from doc to markdown: My Process</title><link href="https://www.ryancheley.com/converting-writing-examples-from-doc-to-markdown-my-process.html" rel="alternate"></link><published>2016-10-07T16:21:00+02:00</published><updated>2016-10-07T16:21:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2016-10-07:/converting-writing-examples-from-doc-to-markdown-my-process.html</id><summary type="html">&lt;h1&gt;Converting Writing Examples from doc to markdown: My Process&lt;/h1&gt;
&lt;p&gt;All of my writing examples were written while attending the &lt;a href="http://www.arizona.edu"&gt;University of Arizona&lt;/a&gt; when I was studying Economics.&lt;/p&gt;
&lt;p&gt;These writing examples are from 2004 and were written in either &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Microsoft Word&lt;/a&gt; OR the &lt;a href="https://en.wikipedia.org/wiki/OpenOffice.org"&gt;OpenOffice Writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before getting the files onto &lt;a href="https://github.com/miloardot/"&gt;Github â€¦&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Converting Writing Examples from doc to markdown: My Process&lt;/h1&gt;
&lt;p&gt;All of my writing examples were written while attending the &lt;a href="http://www.arizona.edu"&gt;University of Arizona&lt;/a&gt; when I was studying Economics.&lt;/p&gt;
&lt;p&gt;These writing examples are from 2004 and were written in either &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Word"&gt;Microsoft Word&lt;/a&gt; OR the &lt;a href="https://en.wikipedia.org/wiki/OpenOffice.org"&gt;OpenOffice Writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before getting the files onto &lt;a href="https://github.com/miloardot/"&gt;Github&lt;/a&gt; I wanted to convert them into &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;markdown&lt;/a&gt; so that they would be in plain text.&lt;/p&gt;
&lt;p&gt;I did this mostly as an exercise to see if I could, but in going through it I'm glad I did. Since the files were written in .doc format, and the &lt;a href="https://en.wikipedia.org/wiki/Doc_(computing)"&gt;.doc&lt;/a&gt; format has been replaced with the &lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML"&gt;.docx&lt;/a&gt; format it could be that at some point my work would be inaccessible. Now, I don't have to worry about that.&lt;/p&gt;
&lt;p&gt;So, how did I get from a .doc file written in 2004 to a converted markdown file created in 2016? Here's how:&lt;/p&gt;
&lt;h2&gt;Round 1&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Downloaded the Doc files from my Google Drive to my local Desktop and saved them into a folder called &lt;code&gt;Summaries&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each week of work had it's own directory, so I had to go into each directory individually (not sure how to do recursive work &lt;em&gt;yet&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Each of the files was written in 2004 so I had to change the file types from .doc to .docx. This was accomplished with this command:&lt;br&gt;
&lt;code&gt;textutil -convert docx *.doc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Once the files were converted from .doc to .docx I ran the following commands:&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd ../yyyymmdd&lt;/code&gt; where yyyy = YEAR, mm = Month in 2 digits; dd = day in 2 digits&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for f in *\ *; do mv "$f" "${f// /_}"; done&lt;/code&gt; &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^1&lt;/a&gt;- this would replace the space character with an underscore. this was needed so I could run the next command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for file in $(ls *.docx); do pandoc -s -S "${file}" -o "${file%docx}md"; done&lt;/code&gt; &lt;a href="http://stackoverflow.com/questions/11023543/recursive-directory-parsing-with-pandoc-on-mac"&gt;\^2&lt;/a&gt; - this uses pandoc to convert the docx file into valid markdown files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mv *.md ../&lt;/code&gt; - used to move the .md files into the next directory up&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;With that done I just needed to move the files from my &lt;code&gt;Summaries&lt;/code&gt; directory to my &lt;code&gt;writing-examples&lt;/code&gt; github repo. I'm using the GUI for this so I have a folder on my desktop called &lt;code&gt;writing-examples&lt;/code&gt;. To move them I just used &lt;code&gt;mv Summaries/*.md writing-examples/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So that's it. Nothing &lt;strong&gt;too&lt;/strong&gt; fancy, but I wanted to write it down so I can look back on it later and know what the heck I did.&lt;/p&gt;
&lt;h2&gt;Round 2&lt;/h2&gt;
&lt;p&gt;The problem I'm finding is that the bulk conversion using &lt;code&gt;textutil&lt;/code&gt; isn't keeping the footnotes from the original .doc file. These are important though, as they reference the original work. Ugh!&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^5&lt;/a&gt; to recursively replace the spaces in the files names with underscores:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -depth -name '* *' \ | while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"|tr ' ' _)" ; done&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="http://hints.macworld.com/article.php?story=20060309220909384"&gt;\^3&lt;/a&gt; to convert all of the .doc to .docx at the same time&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name *.doc -exec textutil -convert docx '{}' \;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command &lt;a href="https://gist.github.com/bzerangue/2504041"&gt;\^4&lt;/a&gt; to generate the markdown files recursively:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name "*.docx" | while read i; do pandoc -f docx -t markdown "$i" -o "${i%.*}.md"; done;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Used this command to move the markdown files:&lt;/p&gt;
&lt;p&gt;Never figured out what to do here :(&lt;/p&gt;
&lt;h2&gt;Round 3&lt;/h2&gt;
&lt;p&gt;OK, I just gave up on using &lt;code&gt;textutil&lt;/code&gt; for the conversion. It wasn't keeping the footnotes on the conversion from .doc to .docx.&lt;/p&gt;
&lt;p&gt;Instead I used the &lt;a href="https://drive.google.com/"&gt;Google Drive&lt;/a&gt; add in &lt;a href="https://www.driveconverter.com"&gt;Converter for Google Drive Document&lt;/a&gt;. It converted the .doc to .docx &lt;strong&gt;AND&lt;/strong&gt; kept the footnotes like I wanted it to.&lt;/p&gt;
&lt;p&gt;Of course, it output all of the files to the same directory, so the work I did to get the recursion to work previously can't be applied here &lt;strong&gt;sigh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, the only commands to run from the terminal are the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$f&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${f// /_}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;underscore&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="kr"&gt;run&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="kr"&gt;next&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;
&lt;span class="mf"&gt;2.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;${file%docx}md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="kr"&gt;to&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;docx&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="nb"&gt;val&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;
&lt;span class="mf"&gt;3.&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Round 4&lt;/h2&gt;
&lt;p&gt;Like any ~~good~~ ~~bad~~ lazy programer I've opted for a rute force method of converting the &lt;code&gt;doc&lt;/code&gt; files to &lt;code&gt;docx&lt;/code&gt; files. I opened each one in Word on macOS and saved as &lt;code&gt;docx&lt;/code&gt;. Problem solved Â¯_(ãƒ„)_/Â¯&lt;/p&gt;
&lt;p&gt;Step 1: used the command I found here &lt;a href="http://stackoverflow.com/questions/2709458/bash-script-to-replace-spaces-in-file-names"&gt;\^7&lt;/a&gt; to recursively replace the spaces in the files names with underscores &lt;code&gt;_&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;find . -depth -name '* *' \&lt;/code&gt;&lt;br&gt;
&lt;code&gt;| while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"|tr ' ' _)" ; done&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Step 2: Use the command found here &lt;a href="https://gist.github.com/bzerangue/2504041"&gt;\^6&lt;/a&gt; to generate the markdown files recursively:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;find . -name "*.docx" | while read i; do pandoc -f docx -t markdown "$i" -o "${i%.*}.md"; done;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Step 3: Add the files to my GitHub repo &lt;code&gt;graduate-writing-examples&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For this I used the GitHub macOS Desktop App to create a repo in my Documents directory, so it lives in &lt;code&gt;~/Documents/graduate-writing-examples/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I then used the finder to locate all of the &lt;code&gt;md&lt;/code&gt; files in the &lt;code&gt;Summaries&lt;/code&gt; folder and then dragged them into the repo. There were 2 files with the same name &lt;code&gt;Rose_Summary&lt;/code&gt; and &lt;code&gt;Libecap_and_Johnson_Summary&lt;/code&gt;. While I'm sure that I could have figured out how to accomplish this with the command line, this took less than 1 minute, and I had just spent 5 minutes trying to find a terminal command to do it. Again, the lazy programmer wins.&lt;/p&gt;
&lt;p&gt;Once the files were in the local repo I committed the files and &lt;em&gt;boom&lt;/em&gt; they were in my &lt;a href="https://github.com/miloardot/graduate-writing-examples"&gt;GitHub Writing Examples&lt;/a&gt; repo.&lt;/p&gt;</content><category term="Writing"></category></entry></feed>