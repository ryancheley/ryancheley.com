<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Place on the Internet - Django</title><link href="https://www.ryancheley.com/" rel="alternate"></link><link href="https://www.ryancheley.com/feeds/django.atom.xml" rel="self"></link><id>https://www.ryancheley.com/</id><updated>2021-06-13T11:00:00+02:00</updated><entry><title>Debugging Setting up a Django Project</title><link href="https://www.ryancheley.com/debugging-setting-up-a-django-project.html" rel="alternate"></link><published>2021-06-13T11:00:00+02:00</published><updated>2021-06-13T11:00:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-06-13:/debugging-setting-up-a-django-project.html</id><summary type="html">&lt;p&gt;Normally when I start a new Django project I’ll use the PyCharm setup wizard, but recently I wanted to try out VS Code for a Django project and was super stumped when I would get a message like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Normally when I start a new Django project I’ll use the PyCharm setup wizard, but recently I wanted to try out VS Code for a Django project and was super stumped when I would get a message like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha1&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha224&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha224&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha256&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha384&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha384&lt;/span&gt;
&lt;span class="nl"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;sha512&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;globals&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;__get_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__get_builtin_constructor&lt;/span&gt;
    &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;hash&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;sha512&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here are the steps I was using to get started&lt;/p&gt;
&lt;p&gt;From a directory I wanted to create the project I would set up my virtual environment&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then activate it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, I would install Django&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, using the &lt;code&gt;startproject&lt;/code&gt; command per the &lt;a href="https://docs.djangoproject.com/en/3.2/ref/django-admin/#startproject" title="Start a new Django Project"&gt;docs&lt;/a&gt; I would&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;django-admin startproject my_great_project .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And get the error message above 🤦🏻‍♂️&lt;/p&gt;
&lt;p&gt;The strangest part about the error message is that it references Python2.7 everywhere … which is odd because I’m in a Python3 virtual environment.&lt;/p&gt;
&lt;p&gt;I did a &lt;code&gt;pip list&lt;/code&gt; and got:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Package    Version
---------- -------
asgiref    3.3.4
Django     3.2.4
pip        21.1.2
pytz       2021.1
setuptools 49.2.1
sqlparse   0.4.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … so everything is in my virtual environment. Let’s drop into the REPL and see what’s going on&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-506" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-7.52.36-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;Well, that looks to be OK.&lt;/p&gt;
&lt;p&gt;Next, I checked the contents of my directory using &lt;code&gt;tree -L 2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
├── &lt;span class="nv"&gt;my_great_project&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__init__&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;settings&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;urls&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   └── &lt;span class="nv"&gt;wsgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
└── &lt;span class="nv"&gt;venv&lt;/span&gt;
    ├── &lt;span class="nv"&gt;bin&lt;/span&gt;
    ├── &lt;span class="k"&gt;include&lt;/span&gt;
    ├── &lt;span class="nv"&gt;lib&lt;/span&gt;
    └── &lt;span class="nv"&gt;pyvenv&lt;/span&gt;.&lt;span class="nv"&gt;cfg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Yep … that looks good too.&lt;/p&gt;
&lt;p&gt;OK, let’s go look at the installed packages for Python 2.7 then. On macOS they’re installed at&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/usr/local/lib/python2.7/site-packages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Looking in there and I see that Django is installed.&lt;/p&gt;
&lt;p&gt;OK, let’s use pip to uninstall Django from Python2.7, except that &lt;code&gt;pip&lt;/code&gt; gives essentially the same result as running the &lt;code&gt;django-admin&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;OK, let’s just remove it manually. After a bit of googling I found this &lt;a href="https://stackoverflow.com/a/8146552"&gt;Stackoverflow&lt;/a&gt; answer on how to remove the offending package (which is what I assumed would be the answer, but better to check, right?)&lt;/p&gt;
&lt;p&gt;After removing the &lt;code&gt;Django&lt;/code&gt; install from Python 2.7 and running &lt;code&gt;django-admin --version&lt;/code&gt; I get&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-507" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-8.05.55-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;So I googled that error message and found another answers on &lt;a href="https://stackoverflow.com/a/10756446"&gt;Stackoverflow&lt;/a&gt; which lead me to look at the &lt;code&gt;manage.py&lt;/code&gt; file. When I &lt;code&gt;cat&lt;/code&gt; the file I get:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That first line SHOULD be finding the Python executable in my virtual environment, but it’s not.&lt;/p&gt;
&lt;p&gt;Next I googled the error message &lt;code&gt;django-admin code for hash sha384 was not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Which lead to this &lt;a href="https://stackoverflow.com/a/60575879"&gt;Stackoverflow&lt;/a&gt; answer. I checked to see if Python2 was installed with brew using&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew leaves | grep python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which returned &lt;code&gt;python@2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Based on the answer above, the solution was to uninstall the Python2 that was installed by &lt;code&gt;brew&lt;/code&gt;. Now, although &lt;a href="https://www.python.org/doc/sunset-python-2/"&gt;Python2 has retired&lt;/a&gt;, I was leery of uninstalling it on my system without first verifying that I could remove the brew version without impacting the system version which is needed by macOS.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;brew info python@2&lt;/code&gt; I determined where &lt;code&gt;brew&lt;/code&gt; installed Python2 and compared it to where Python2 is installed by macOS and they are indeed different&lt;/p&gt;
&lt;p&gt;Output of &lt;code&gt;brew info python@2&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.7.15&lt;/span&gt;&lt;span class="n"&gt;_1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;515&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;122.4&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
  &lt;span class="n"&gt;Built&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="mi"&gt;2018-08&lt;/span&gt;&lt;span class="mo"&gt;-05&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Output of &lt;code&gt;which python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/bin/python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK, now we can remove the version of Python2 installed by &lt;code&gt;brew&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;uninstall&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now with all of that cleaned up, lets try again. From a clean project directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3 -m venv venv
source venv/bin/activate
pip install django
django-admin --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last command returned&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;zsh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="nl"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;span class="mf"&gt;3.2.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK, I can get the version number and it mostly works, but can I create a new project?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;django-admin startproject my_great_project .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which returns&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;zsh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="nl"&gt;interpreter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="mi"&gt;@2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt;&lt;span class="mf"&gt;.7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;BUT, the project was installed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├── &lt;span class="nv"&gt;db&lt;/span&gt;.&lt;span class="nv"&gt;sqlite3&lt;/span&gt;
├── &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
├── &lt;span class="nv"&gt;my_great_project&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__init__&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;__pycache__&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;asgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;settings&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   ├── &lt;span class="nv"&gt;urls&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
│   └── &lt;span class="nv"&gt;wsgi&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;
└── &lt;span class="nv"&gt;venv&lt;/span&gt;
    ├── &lt;span class="nv"&gt;bin&lt;/span&gt;
    ├── &lt;span class="k"&gt;include&lt;/span&gt;
    ├── &lt;span class="nv"&gt;lib&lt;/span&gt;
    └── &lt;span class="nv"&gt;pyvenv&lt;/span&gt;.&lt;span class="nv"&gt;cfg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I was able to run it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" class="wp-image-508" src="/images/uploads/2021/06/Screen-Shot-2021-06-13-at-9.01.19-AM.png"&gt;&lt;/p&gt;
&lt;p&gt;Success! I’ve still got that last bug to deal with, but that’s a story for a different day!&lt;/p&gt;
&lt;h2&gt;Short Note&lt;/h2&gt;
&lt;p&gt;My initial fix, and my initial draft for this article, was to use the old adage, turn it off and turn it back on. In this case, the implementation would be the &lt;code&gt;deactivate&lt;/code&gt; and then re &lt;code&gt;activate&lt;/code&gt; the virtual environment and that’s what I’d been doing.&lt;/p&gt;
&lt;p&gt;As I was writing up this article I was hugely influenced by the work of &lt;a href="https://twitter.com/b0rk"&gt;Julie Evans&lt;/a&gt; and kept asking, “but why?”. She’s been writing a lot of awesome, amazing things, and has several &lt;a href="https://wizardzines.com"&gt;zines for purchase&lt;/a&gt; that I would highly recommend.&lt;/p&gt;
&lt;p&gt;She’s also generated a few &lt;a href="https://jvns.ca/blog/2021/04/16/notes-on-debugging-puzzles/"&gt;debugging ‘games’&lt;/a&gt; that are a lot of fun.&lt;/p&gt;
&lt;p&gt;Anyway, thanks Julie for pushing me to figure out the why for this issue.&lt;/p&gt;
&lt;h2&gt;Post Script&lt;/h2&gt;
&lt;p&gt;I figured out the error message above and figured, well, I might as well update the post! I thought it had to do with &lt;code&gt;zsh&lt;/code&gt;, but no, it was just more of the same.&lt;/p&gt;
&lt;p&gt;The issue was that Django had been installed in the base Python2 (which I knew). All I had to do was to uninstall it with pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip uninstall django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The trick was that pip wasn't working out for me ... it was generating errors. So I had to run the command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m pip uninstall django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I had to run this AFTER I put the Django folder back into &lt;code&gt;/usr/local/lib/python2.7/site-packages&lt;/code&gt; (if you'll recall from above, I removed it from the folder)&lt;/p&gt;
&lt;p&gt;After that clean up was done, everything worked out as expected! I just had to keep digging!&lt;/p&gt;</content><category term="Django"></category><category term="Debugging"></category><category term="macOS"></category><category term="python"></category></entry><entry><title>How does my Django site connect to the internet anyway?</title><link href="https://www.ryancheley.com/how-does-my-django-site-connect-to-the-internet-anyway.html" rel="alternate"></link><published>2021-05-31T12:49:00+02:00</published><updated>2021-05-31T12:49:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-05-31:/how-does-my-django-site-connect-to-the-internet-anyway.html</id><summary type="html">&lt;p&gt;I created a Django site to troll my cousin Barry who is a big &lt;a href="https://www.mlb.com/padres" title="San Diego Padres"&gt;San Diego Padres&lt;/a&gt; fan. Their Shortstop is a guy called &lt;a href="https://www.baseball-reference.com/players/t/tatisfe02.shtml" title="Fernando “Error Maker” Tatis Jr."&gt;Fernando Tatis Jr.&lt;/a&gt; and he’s really good. Like &lt;strong&gt;really&lt;/strong&gt; good. He’s also young, and arrogant, and is everything an old dude like me doesn …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I created a Django site to troll my cousin Barry who is a big &lt;a href="https://www.mlb.com/padres" title="San Diego Padres"&gt;San Diego Padres&lt;/a&gt; fan. Their Shortstop is a guy called &lt;a href="https://www.baseball-reference.com/players/t/tatisfe02.shtml" title="Fernando “Error Maker” Tatis Jr."&gt;Fernando Tatis Jr.&lt;/a&gt; and he’s really good. Like &lt;strong&gt;really&lt;/strong&gt; good. He’s also young, and arrogant, and is everything an old dude like me doesn’t like about the ‘new generation’ of ball players that are changing the way the game is played.&lt;/p&gt;
&lt;p&gt;In all honesty though, it’s fun to watch him play (anyone but the Dodgers).&lt;/p&gt;
&lt;p&gt;The thing about him though, is that while he’s really good at the plate, he’s less good at playing defense. He currently leads the league in errors. Not just for all shortstops, but for ALL players!&lt;/p&gt;
&lt;p&gt;Anyway, back to the point. I made this Django site call &lt;a href="https://www.doestatisjrhaveanerrortoday.com" title="Not Yet"&gt;Does Tatis Jr Have an Error Today?&lt;/a&gt;It is a simple site that only does one thing ... tells you if Tatis Jr has made an error today. If he hasn’t, then it says &lt;code&gt;No&lt;/code&gt;, and if he has, then it says &lt;code&gt;Yes&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It’s a dumb site that doesn’t do anything else. At all.&lt;/p&gt;
&lt;p&gt;But, what it did do was lead me down a path to answer the question, “How does my site connect to the internet anyway?”&lt;/p&gt;
&lt;p&gt;Seems like a simple enough question to answer, and it is, but it wasn’t really what I thought when I started.&lt;/p&gt;
&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;I use a MacBook Pro to work on the code. I then deploy it to a Digital Ocean server using GitHub Actions. But they say, a picture is worth a thousand words, so here's a chart of the workflow:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Workflow" src="https://raw.githubusercontent.com/ryancheley/tatis/main/custom_resources/workflow.png"&gt;&lt;/p&gt;
&lt;p&gt;This shows the development cycle, but that doesn’t answer the question, how does the site connect to the internet!&lt;/p&gt;
&lt;p&gt;How is it that when I go to the site, I see anything? I thought I understood it, and when I tried to actually draw it out, turns out I didn't!&lt;/p&gt;
&lt;p&gt;After a bit of Googling, I found &lt;a href="https://serverfault.com/a/331263" title="How does Gunicorn interact with NgInx?"&gt;this&lt;/a&gt; and it helped me to create this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/ryancheley/tatis/main/custom_resources/internal_working.png"&gt;&lt;/p&gt;
&lt;p&gt;My site runs on an Ubuntu 18.04 server using Nginx as proxy server. Nginx determines if the request is for a static asset (a css file for example) or dynamic one (something served up by the Django App, like answering if Tatis Jr. has an error today).&lt;/p&gt;
&lt;p&gt;If the request is static, then Nginx just gets the static data and server it. If it’s dynamic data it hands off the request to Gunicorn which then interacts with the Django App.&lt;/p&gt;
&lt;p&gt;So, what actually handles the HTTP request? From the &lt;a href="https://serverfault.com/a/331263"&gt;serverfault.com answer above&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[T]he simple answer is Gunicorn. The complete answer is both Nginx and Gunicorn handle the request. Basically, Nginx will receive the request and if it's a dynamic request (generally based on URL patterns) then it will give that request to Gunicorn, which will process it, and then return a response to Nginx which then forwards the response back to the original client.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my head, I thought that Nginx was ONLY there to handle the static requests (and it is) but I wasn’t clean on how dynamic requests were handled ... but drawing this out really made me stop and ask, “Wait, how DOES that actually work?”&lt;/p&gt;
&lt;p&gt;Now I know, and hopefully you do to!&lt;/p&gt;
&lt;h2&gt;Notes:&lt;/h2&gt;
&lt;p&gt;These diagrams are generated using the amazing library &lt;a href="https://github.com/mingrammer/diagrams" title="Diagrams"&gt;Diagrams&lt;/a&gt;. The code used to generate them is &lt;a href="https://github.com/ryancheley/tatis/blob/main/generate_diagram.py"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="django"></category><category term="nginx"></category></entry><entry><title>Enhancements: Using GitHub Actions to Deploy</title><link href="https://www.ryancheley.com/enhancements-using-github-actions-to-deploy.html" rel="alternate"></link><published>2021-03-14T11:00:00+01:00</published><updated>2021-03-14T11:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-03-14:/enhancements-using-github-actions-to-deploy.html</id><summary type="html">&lt;p&gt;Integrating a version control system into your development cycle is just kind of one of those things that you do, right? I use GutHub for my version control, and it’s GitHub Actions to help with my deployment process.&lt;/p&gt;
&lt;p&gt;There are 3 &lt;code&gt;yaml&lt;/code&gt; files I have to get my local …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Integrating a version control system into your development cycle is just kind of one of those things that you do, right? I use GutHub for my version control, and it’s GitHub Actions to help with my deployment process.&lt;/p&gt;
&lt;p&gt;There are 3 &lt;code&gt;yaml&lt;/code&gt; files I have to get my local code deployed to my production server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;django.yaml&lt;/li&gt;
&lt;li&gt;dev.yaml&lt;/li&gt;
&lt;li&gt;prod.yaml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each one serving it’s own purpose&lt;/p&gt;
&lt;h2&gt;django.yaml&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;django.yaml&lt;/code&gt; file is used to run my tests and other actions on a GitHub runner. It does this in 9 distinct steps and one Postgres service.&lt;/p&gt;
&lt;p&gt;The steps are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set up Python 3.8 - setting up Python 3.8 on the docker image provided by GitHub&lt;/li&gt;
&lt;li&gt;psycopg2 prerequisites - setting up &lt;code&gt;psycopg2&lt;/code&gt; to use the Postgres service created&lt;/li&gt;
&lt;li&gt;graphviz prerequisites - setting up the requirements for graphviz which creates an image of the relationships between the various models&lt;/li&gt;
&lt;li&gt;Install dependencies - installs all of my Python package requirements via pip&lt;/li&gt;
&lt;li&gt;Run migrations - runs the migrations for the Django App&lt;/li&gt;
&lt;li&gt;Load Fixtures - loads data into the database&lt;/li&gt;
&lt;li&gt;Lint - runs &lt;code&gt;black&lt;/code&gt; on my code&lt;/li&gt;
&lt;li&gt;Flake8 - runs &lt;code&gt;flake8&lt;/code&gt; on my code&lt;/li&gt;
&lt;li&gt;Run Tests - runs all of the tests to ensure they pass&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Django&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;12.2&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;
          &lt;span class="n"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;github_actions&lt;/span&gt;
        &lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;
        &lt;span class="c1"&gt;# needed because the postgres container does not provide a healthcheck&lt;/span&gt;
        &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="n"&gt;pg_isready&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;retries&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;
      &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;
        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;hashFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;**/requirements.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="n"&gt;restore&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt; &lt;span class="n"&gt;prerequisites&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;libpq&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;graphviz&lt;/span&gt; &lt;span class="n"&gt;prerequisites&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;graphviz&lt;/span&gt; &lt;span class="n"&gt;libgraphviz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;pkg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;
        &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;psycopg2&lt;/span&gt;
        &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Run&lt;/span&gt; &lt;span class="n"&gt;migrations&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Load&lt;/span&gt; &lt;span class="n"&gt;Fixtures&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Sport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;League&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Conference&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Division&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Venue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
        &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Team&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Lint&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;black&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Flake8&lt;/span&gt;
      &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cclauss&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Action&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Flake8&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;5.0&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Run&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;coverage&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pytest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;dev.yaml&lt;/h2&gt;
&lt;p&gt;The code here does essentially they same thing that is done in the &lt;code&gt;deploy.sh&lt;/code&gt; in my earlier post &lt;a href="/automating-the-deployment.html"&gt;Automating the Deployment&lt;/a&gt; except that it pulls code from my &lt;code&gt;dev&lt;/code&gt; branch on GitHub onto the server. The other difference is that this is on my UAT server, not my production server, so if something goes off the rails, I don’t hose production.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dev&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appleboy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;
        &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_HOST_TEST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_KEY_TEST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_USERNAME&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

          &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="n"&gt;StadiaTracker&lt;/span&gt;
            &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;branch&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ryancheley&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;

            &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;

            &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;

            &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;
            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;staticfiles&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;

            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;stadiatracker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;prod.yaml&lt;/h2&gt;
&lt;p&gt;Again, the code here does essentially they same thing that is done in the &lt;code&gt;deploy.sh&lt;/code&gt; in my earlier post &lt;a href="/automating-the-deployment.html"&gt;Automating the Deployment&lt;/a&gt; except that it pulls code from my &lt;code&gt;main&lt;/code&gt; branch on GitHub onto the server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Prod&lt;/span&gt; &lt;span class="n"&gt;CI&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;18.04&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appleboy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;
        &lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_HOST&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_KEY&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSH_USERNAME&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

          &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="n"&gt;StadiaTracker&lt;/span&gt;
            &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ryancheley&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;

            &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;

            &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

            &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;

            &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/.&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;

            &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;
            &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;staticfiles&lt;/span&gt;

            &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stadiatracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;StadiaTracker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v0&lt;/span&gt;

            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
            &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;stadiatracker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The general workflow is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a branch on my local computer with &lt;code&gt;git switch -c branch_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the code changes to GitHub which kicks off the &lt;code&gt;django.yaml&lt;/code&gt; workflow.&lt;/li&gt;
&lt;li&gt;If everything passes then I do a pull request from &lt;code&gt;branch_name&lt;/code&gt; into &lt;code&gt;dev&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This kicks off the &lt;code&gt;dev.yaml&lt;/code&gt; workflow which will update UAT&lt;/li&gt;
&lt;li&gt;I check UAT to make sure that everything works like I expect it to (it almost always does … and when it doesn’t it’s because I’ve mucked around with a server configuration which is the problem, not my code)&lt;/li&gt;
&lt;li&gt;I do a pull request from &lt;code&gt;dev&lt;/code&gt; to &lt;code&gt;main&lt;/code&gt; which updates my production server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My next enhancement is to kick off the &lt;code&gt;dev.yaml&lt;/code&gt; process if the tests from &lt;code&gt;django.yaml&lt;/code&gt; all pass, i.e. do an auto merge from &lt;code&gt;branch_name&lt;/code&gt; to &lt;code&gt;dev&lt;/code&gt;, but I haven’t done that yet.&lt;/p&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="github actions"></category><category term="series"></category></entry><entry><title>Setting up multiple Django Sites on a Digital Ocean server</title><link href="https://www.ryancheley.com/setting-up-multiple-django-sites-on-a-digital-ocean-server.html" rel="alternate"></link><published>2021-03-07T12:00:00+01:00</published><updated>2021-03-07T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-03-07:/setting-up-multiple-django-sites-on-a-digital-ocean-server.html</id><summary type="html">&lt;p&gt;If you want to have more than 1 Django site on a single server, you can. It’s not too hard, and using the Digital Ocean tutorial as a starting point, you can get there.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04"&gt;this tutorial&lt;/a&gt; as a start, we set up so that there are multiple Django …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to have more than 1 Django site on a single server, you can. It’s not too hard, and using the Digital Ocean tutorial as a starting point, you can get there.&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04"&gt;this tutorial&lt;/a&gt; as a start, we set up so that there are multiple Django sites being served by &lt;code&gt;gunicorn&lt;/code&gt; and &lt;code&gt;nginx&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Creating &lt;code&gt;systemd&lt;/code&gt; Socket and Service Files for Gunicorn&lt;/h2&gt;
&lt;p&gt;The first thing to do is to set up 2 Django sites on your server. You’ll want to follow the tutorial referenced above and just repeat for each.&lt;/p&gt;
&lt;p&gt;Start by creating and opening two systemd socket file for Gunicorn with sudo privileges:&lt;/p&gt;
&lt;p&gt;Site 1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/site1.socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Site 2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/site2.socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The contents of the files will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;siteX socket&lt;/span&gt;

&lt;span class="k"&gt;[Socket]&lt;/span&gt;
&lt;span class="na"&gt;ListenStream&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/run/siteX.sock&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sockets.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;siteX&lt;/code&gt; is the site you want to server from that socket&lt;/p&gt;
&lt;p&gt;Next, create and open a systemd service file for Gunicorn with sudo privileges in your text editor. The service filename should match the socket filename with the exception of the extension&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo vim /etc/systemd/system/siteX.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The contents of the file will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;gunicorn daemon&lt;/span&gt;
&lt;span class="na"&gt;Requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;siteX.socket&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;sammy&lt;/span&gt;
&lt;span class="na"&gt;Group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;span class="na"&gt;WorkingDirectory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;path/to/directory&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;path/to/gunicorn/directory   &lt;/span&gt;
         &lt;span class="na"&gt;--access-logfile -   &lt;/span&gt;
         &lt;span class="na"&gt;--workers 3   &lt;/span&gt;
         &lt;span class="na"&gt;--bind unix:/run/gunicorn.sock   &lt;/span&gt;
         &lt;span class="na"&gt;myproject.wsgi:application&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again &lt;code&gt;siteX&lt;/code&gt; is the socket you want to serve&lt;/p&gt;
&lt;p&gt;Follow tutorial for testing Gunicorn&lt;/p&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;server_name&lt;/span&gt; &lt;span class="err"&gt;server_domain_or_IP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;/favicon.ico&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;access_log&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;log_not_found&lt;/span&gt; &lt;span class="err"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;static&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;root&lt;/span&gt; &lt;span class="err"&gt;/path/to/project&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;proxy_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;siteX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again &lt;code&gt;siteX&lt;/code&gt; is the socket you want to serve&lt;/p&gt;
&lt;p&gt;Next, link to enabled sites&lt;/p&gt;
&lt;p&gt;Test Nginx&lt;/p&gt;
&lt;p&gt;Open firewall&lt;/p&gt;
&lt;p&gt;Should now be able to see sites at domain names&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Using PostgreSQL</title><link href="https://www.ryancheley.com/using-postgresql.html" rel="alternate"></link><published>2021-02-28T12:00:00+01:00</published><updated>2021-02-28T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-28:/using-postgresql.html</id><summary type="html">&lt;p&gt;Once you’ve deployed your code to a web server, you’ll be pretty stoked. I know I was. One thing you’ll need to start thinking about though is converting your SQLite database to a ‘real’ database. I say ‘real’ because SQLite is a great engine to start off …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Once you’ve deployed your code to a web server, you’ll be pretty stoked. I know I was. One thing you’ll need to start thinking about though is converting your SQLite database to a ‘real’ database. I say ‘real’ because SQLite is a great engine to start off with, but once you have more than 1 user, you’ll really need to have a database that can support concurrency, and can scale when you need it to.&lt;/p&gt;
&lt;p&gt;Enter PostgreSQL. Django offers built-in database support for several different databases, but Postgres is the preferred engine.&lt;/p&gt;
&lt;p&gt;We’ll take care of this in stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the database&lt;/li&gt;
&lt;li&gt;Prep project for use of Postgres&lt;ol&gt;
&lt;li&gt;Install needed package&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;settings.py&lt;/code&gt; to change to Postgres&lt;/li&gt;
&lt;li&gt;Run the migration locally&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Deploy updates to server&lt;/li&gt;
&lt;li&gt;Script it all out&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Create the database&lt;/h2&gt;
&lt;p&gt;I’m going to assume that you already have Postgres installed locally. If you don’t, there are many good tutorials to walk you through it.&lt;/p&gt;
&lt;p&gt;You’ll need three things to create a database in Postgres&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Database name&lt;/li&gt;
&lt;li&gt;Database user&lt;/li&gt;
&lt;li&gt;Database password for your user&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For this example, I’ll be as generic as possible and choose the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database name will be &lt;code&gt;my_database&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Database user will be &lt;code&gt;my_database_user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Database password will be &lt;code&gt;my_database_user_password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From our terminal we’ll run a couple of commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# This will open the Postgres Shell

psql

# From the psql shell

CREATE DATABASE my_database;
CREATE USER my_database_user WITH PASSWORD &amp;#39;my_database_user_password&amp;#39;;
ALTER ROLE my_database_user SET client_encoding TO &amp;#39;utf8&amp;#39;;
ALTER ROLE my_database_user SET default_transaction_isolation TO &amp;#39;read committed&amp;#39;;
ALTER ROLE my_database_user SET timezone TO &amp;#39;UTC&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last 3 &lt;code&gt;ALTER&lt;/code&gt; commands are based on Django recommendations for Postgres user.&lt;/p&gt;
&lt;p&gt;One thing to note, before you go creating databases and users, you should make sure that they don’t already exist. The &lt;code&gt;\l&lt;/code&gt; will list the various databases present. If this is your first time in the psql shell you’ll see three databases list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgres
template0
template1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To see a list of the users &lt;code&gt;\du&lt;/code&gt; will display that. If this is your first time in the psql shell you’ll see one user listed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK … the database has been created. Next, we start updating our project to use this new database engine&lt;/p&gt;
&lt;h2&gt;Prep project for use of Postgres&lt;/h2&gt;
&lt;h3&gt;Install Needed Package&lt;/h3&gt;
&lt;p&gt;The only python package needed to use Postgres is &lt;code&gt;psycopg2-binary&lt;/code&gt; so we’ll&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install psycopg2-binary
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Update &lt;code&gt;settings.py&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;DATABASES&lt;/code&gt; portion of the &lt;code&gt;settings.py&lt;/code&gt; is set to use SQLite by default and will look (something) like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.sqlite3&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;mydatabase&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Django documentation is really good on what changes need to be made. From the &lt;a href="https://docs.djangoproject.com/en/3.0/ref/settings/#databases"&gt;documentation&lt;/a&gt; we see that we need to update the &lt;code&gt;DATABASES&lt;/code&gt; section to be something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.postgresql&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;mydatabase&amp;#39;,
        &amp;#39;USER&amp;#39;: &amp;#39;mydatabaseuser&amp;#39;,
        &amp;#39;PASSWORD&amp;#39;: &amp;#39;mypassword&amp;#39;,
        &amp;#39;HOST&amp;#39;: &amp;#39;127.0.0.1&amp;#39;,
        &amp;#39;PORT&amp;#39;: &amp;#39;5432&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With our database from above, ours will look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DATABASES = {
    &amp;#39;default&amp;#39;: {
        &amp;#39;ENGINE&amp;#39;: &amp;#39;django.db.backends.postgresql&amp;#39;,
        &amp;#39;NAME&amp;#39;: &amp;#39;my_database&amp;#39;,
        &amp;#39;USER&amp;#39;: &amp;#39;my_database_user&amp;#39;,
        &amp;#39;PASSWORD&amp;#39;: &amp;#39;my_database_user_password&amp;#39;,
        &amp;#39;HOST&amp;#39;: &amp;#39;localhost&amp;#39;,
        &amp;#39;PORT&amp;#39;: &amp;#39;&amp;#39;,
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;HOST&lt;/code&gt; is changed to &lt;code&gt;localhost&lt;/code&gt; and we remove the value for &lt;code&gt;PORT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once we get ready to push this to our web server we’ll want to replace the &lt;code&gt;NAME&lt;/code&gt;, &lt;code&gt;USER&lt;/code&gt;, and &lt;code&gt;PASSWORD&lt;/code&gt; with environment variables, but we’ll get to that later&lt;/p&gt;
&lt;h3&gt;Run migrations&lt;/h3&gt;
&lt;p&gt;OK, we’ve got our database set up, we’ve got our settings updated to use the new database, now we can run set that database up.&lt;/p&gt;
&lt;p&gt;All that we need to do is to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will run any migrations that we had created previously on our new Postgres database.&lt;/p&gt;
&lt;p&gt;A few things to note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You will need to create a new &lt;code&gt;superuser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You will need to migrate over any data from the old SQLite database^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations! You’ve migrated from SQLite to Postgres!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[This can be done with the &lt;code&gt;datadump&lt;/code&gt; and &lt;code&gt;dataload&lt;/code&gt; commands available in &lt;code&gt;manage.py&lt;/code&gt; &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="postgres"></category><category term="series"></category></entry><entry><title>Automating the deployment</title><link href="https://www.ryancheley.com/automating-the-deployment.html" rel="alternate"></link><published>2021-02-21T12:00:00+01:00</published><updated>2021-02-21T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-21:/automating-the-deployment.html</id><summary type="html">&lt;p&gt;We got everything set up, and now we want to automate the deployment.&lt;/p&gt;
&lt;p&gt;Why would we want to do this you ask? Let’s say that you’ve decided that you need to set up a test version of your site (what some might call UAT) on a new server …&lt;/p&gt;</summary><content type="html">&lt;p&gt;We got everything set up, and now we want to automate the deployment.&lt;/p&gt;
&lt;p&gt;Why would we want to do this you ask? Let’s say that you’ve decided that you need to set up a test version of your site (what some might call UAT) on a new server (at some point I’ll write something up about about multiple Django Sites on the same server and part of this will still apply then). How can you do it?&lt;/p&gt;
&lt;p&gt;Well you’ll want to write yourself some scripts!&lt;/p&gt;
&lt;p&gt;I have a mix of Python and Shell scripts set up to do this. They are a bit piece meal, but they also allow me to run specific parts of the process without having to try and execute a script with ‘commented’ out pieces.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;create_server.py&lt;/p&gt;
&lt;p&gt;destroy_droplet.py&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell Scripts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;copy_for_deploy.sh&lt;/p&gt;
&lt;p&gt;create_db.sh&lt;/p&gt;
&lt;p&gt;create_server.sh&lt;/p&gt;
&lt;p&gt;deploy.sh&lt;/p&gt;
&lt;p&gt;deploy_env_variables.sh&lt;/p&gt;
&lt;p&gt;install-code.sh&lt;/p&gt;
&lt;p&gt;setup-server.sh&lt;/p&gt;
&lt;p&gt;setup_nginx.sh&lt;/p&gt;
&lt;p&gt;setup_ssl.sh&lt;/p&gt;
&lt;p&gt;super.sh&lt;/p&gt;
&lt;p&gt;upload-code.sh&lt;/p&gt;
&lt;p&gt;The Python script &lt;code&gt;create_server.py&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# create_server.py&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;attrgetter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;namedtuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;created ip_address name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;doat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DIGITAL_OCEAN_ACCESS_TOKEN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Create Droplet&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bearer &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;doat&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;data_keys&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Creating Server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Server Created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Waiting for Server Stand up&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Getting Droplet Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;per_page&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;get_droplets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;server_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_droplets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;droplets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;networks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;v4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ip_address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;server_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;attrgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;server_ip_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip_address&lt;/span&gt;
&lt;span class="n"&gt;db_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DJANGO_PG_DB_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DJANGO_PG_USER_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;server_ip_address&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;production_server_id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Run server setup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./setup-server.sh &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;server_ip_address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&amp;gt;&amp;gt; Server setup complete. You need to add &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;server_ip_address&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; to the ALLOWED_HOSTS section of your settings.py file &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WARNING: Running Server set up will destroy your current production server. Aborting process&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Earlier I said that I liked Digital Ocean because of it’s nice API for interacting with it’s servers (i.e. Droplets). Here we start to see some.&lt;/p&gt;
&lt;p&gt;The First part of the script uses my Digital Ocean Token and some input parameters to create a Droplet via the Command Line. The &lt;code&gt;sleep(90)&lt;/code&gt; allows the process to complete before I try and get the IP address. Ninety seconds is a bit longer than is needed, but I figure, better safe than sorry … I’m sure that there’s a way to call to DO and ask if the just created droplet has an IP address, but I haven’t figured it out yet.&lt;/p&gt;
&lt;p&gt;After we create the droplet AND is has an IP address, we get it to pass to the bash script &lt;code&gt;server-setup.sh&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# server-setup.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# Create the server on Digital Ocean&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Take secret key as 2nd argument&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for server ip address1&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Setting up $SERVER&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
    &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Updating apt sources&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Upgrading apt packages&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing apt packages&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;qq&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="n"&gt;supervisor&lt;/span&gt; &lt;span class="n"&gt;postgresql&lt;/span&gt; &lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Create User to Run Web App&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;getent&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
      &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; User already present&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;gecos&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt;
      &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Add newly created user to www-data&amp;quot;&lt;/span&gt;
      &lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="n"&gt;burningfiddle&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Make directory for code to be deployed to&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/burningfiddle/BurningFiddle&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping Deploy Folder creation - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;


    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Create VirtualEnv in this directory&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/burningfiddle/venv&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
      &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping virtualenv creation - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="c1"&gt;# I don&amp;#39;t think i need this anymore&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Start and Enable gunicorn&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;
    &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;


&lt;span class="n"&gt;EOF&lt;/span&gt;

&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;setup_nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;deploy_env_variables&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All of that stuff we did before, logging into the server and running commands, we’re now doing via a script. What the above does is attempt to keep the server in an idempotent state (that is to say you can run it as many times as you want and you don’t get weird artifacts … if you’re a math nerd you may have heard idempotent in Linear Algebra to describe the multiplication of a matrix by itself and returning the original matrix … same idea here!)&lt;/p&gt;
&lt;p&gt;The one thing that is new here is the part&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh root@$SERVER /bin/bash &amp;lt;&amp;lt; EOF
    ...
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A block like that says, “take everything in between &lt;code&gt;EOF&lt;/code&gt; and run it on the server I just ssh’d into using bash.&lt;/p&gt;
&lt;p&gt;At the end we run 3 shell scripts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup_nginx.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy_env_variables.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deploy.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s review these scripts&lt;/p&gt;
&lt;p&gt;The script &lt;code&gt;setup_nginx.sh&lt;/code&gt; copies several files needed for the &lt;code&gt;nginx&lt;/code&gt; service:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gunicorn.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gunicorn.sockets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It then sets up a link between the &lt;code&gt;available-sites&lt;/code&gt; and &lt;code&gt;enabled-sites&lt;/code&gt; for &lt;code&gt;nginx&lt;/code&gt; and finally restarts &lt;code&gt;nginx&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# setup_nginx.sh&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;sitename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gunicorn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;sitename&lt;/span&gt;

&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Set up site to be linked in Nginx&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/$&lt;/span&gt;&lt;span class="n"&gt;sitename&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Restart Nginx&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;nginx&lt;/span&gt;
  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Allow Nginx Full access&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;ufw&lt;/span&gt; &lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Nginx Full&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The script &lt;code&gt;deploy_env_variables.sh&lt;/code&gt; copies environment variables. There are packages (and other methods) that help to manage environment variables better than this, and that is one of the enhancements I’ll be looking at.&lt;/p&gt;
&lt;p&gt;This script captures the values of various environment variables (one at a time) and then passes them through to the server. It then checks to see if these environment variables exist on the server and will place them in the &lt;code&gt;/etc/environment&lt;/code&gt; file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;DJANGO_SECRET_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_SECRET_KEY&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_PASSWORD&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_USER_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_USER_NAME&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_PG_DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_PG_DB_NAME&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_SUPERUSER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;printenv&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;DJANGO_SUPERUSER_PASSWORD&lt;/span&gt;
&lt;span class="n"&gt;DJANGO_DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_SECRET_KEY - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_PASSWORD=$DJANGO_PG_PASSWORD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_PASSWORD - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_USER_NAME=$DJANGO_PG_USER_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_USER_NAME - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_PG_DB_NAME=$DJANGO_PG_DB_NAME&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_PG_DB_NAME - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DJANGO_DEBUG=$DJANGO_DEBUG&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt; Skipping DJANGO_DEBUG - already present&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;deploy.sh&lt;/code&gt; calls two scripts itself:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;span class="c1"&gt;# Deploy Django project.&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="c1"&gt;#./scripts/backup-database.sh&lt;/span&gt;
./upload-code.sh
./install-code.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The final two scripts!&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;upload-code.sh&lt;/code&gt; script uploads the files to the &lt;code&gt;deploy&lt;/code&gt; folder of the server while the &lt;code&gt;install-code.sh&lt;/code&gt; script move all of the files to where then need to be on the server and restart any services.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# upload-code.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying Django project files to server.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$SERVER&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for SERVER.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Preparing scripts locally.&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;
&lt;span class="n"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;htmlcov&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;venv&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*__pycache__*&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*staticfiles*&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.pyc&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying files to the server.&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rm -rf /root/deploy/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;scp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;../../&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Finished copying Django project files to server.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# install-code.sh&lt;/span&gt;

&lt;span class="c1"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# Install Django app on server.&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing Django project on server.&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$SERVER&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ERROR: No value set for SERVER.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SERVER&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;
  &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Activate the Virtual Environment&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;


  &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Deleting old files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Copying new files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Installing Python packages&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Running Django migrations&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Creating Superuser&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;createsuperuser&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;noinput&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="n"&gt;bfadmin&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="n"&gt;rcheley&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="bp"&gt;true&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Load Initial Data&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fixtures&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Collecting static files&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;burningfiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BurningFiddle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;collectstatic&lt;/span&gt;

  &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Reloading Gunicorn&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
  &lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;

&lt;span class="n"&gt;EOF&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&amp;gt;&amp;gt; Finished installing Django project on server.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Preparing the code for deployment to Digital Ocean</title><link href="https://www.ryancheley.com/preparing-the-code-for-deployment-to-digital-ocean.html" rel="alternate"></link><published>2021-02-14T12:00:00+01:00</published><updated>2021-02-14T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-02-14:/preparing-the-code-for-deployment-to-digital-ocean.html</id><summary type="html">&lt;p&gt;OK, we’ve got our server ready for our Django App. We set up Gunicorn and Nginx. We created the user which will run our app and set up all of the folders that will be needed.&lt;/p&gt;
&lt;p&gt;Now, we work on deploying the code!&lt;/p&gt;
&lt;h2&gt;Deploying the Code&lt;/h2&gt;
&lt;p&gt;There are 3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, we’ve got our server ready for our Django App. We set up Gunicorn and Nginx. We created the user which will run our app and set up all of the folders that will be needed.&lt;/p&gt;
&lt;p&gt;Now, we work on deploying the code!&lt;/p&gt;
&lt;h2&gt;Deploying the Code&lt;/h2&gt;
&lt;p&gt;There are 3 parts for deploying our code:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Collect Locally&lt;/li&gt;
&lt;li&gt;Copy to Server&lt;/li&gt;
&lt;li&gt;Place in correct directory  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Why don’t we just copy to the spot on the server we want o finally be in? Because we’ll need to restart Nginx once we’re fully deployed and it’s easier to have that done in 2 steps than in 1.&lt;/p&gt;
&lt;h3&gt;Collect the Code Locally&lt;/h3&gt;
&lt;p&gt;My project is structured such that there is a &lt;code&gt;deploy&lt;/code&gt; folder which is on the Same Level as my Django Project Folder. That is to say&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-475" src="/images/uploads/2021/02/DraggedImage-4.png"&gt;&lt;/p&gt;
&lt;p&gt;We want to clear out any old code. To do this we run from the same level that the Django Project Folder is in&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf deploy/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will remove ALL of the files and folders that were present. Next, we want to copy the data from the &lt;code&gt;yoursite&lt;/code&gt; folder to the deploy folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rsync -rv --exclude &amp;#39;htmlcov&amp;#39; --exclude &amp;#39;venv&amp;#39; --exclude &amp;#39;*__pycache__*&amp;#39; --exclude &amp;#39;*staticfiles*&amp;#39; --exclude &amp;#39;*.pyc&amp;#39;  yoursite/* deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Again, running this form the same folder. I’m using &lt;code&gt;rsync&lt;/code&gt; here as it has a really good API for allowing me to exclude items (I’m sure the above could be done better with a mix of Regular Expressions, but this gets the jobs done)&lt;/p&gt;
&lt;h3&gt;Copy to the Server&lt;/h3&gt;
&lt;p&gt;We have the files collected, now we need to copy them to the server.&lt;/p&gt;
&lt;p&gt;This is done in two steps. Again, we want to remove ALL of the files in the deploy folder on the server (see rationale from above)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh root@$SERVER &amp;quot;rm -rf /root/deploy/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we use &lt;code&gt;scp&lt;/code&gt; to secure copy the files to the server&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scp -r deploy root@$SERVER:/root/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Our files are now on the server!&lt;/p&gt;
&lt;h3&gt;Installing the Code&lt;/h3&gt;
&lt;p&gt;We have several steps to get through in order to install the code. They are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Activate the Virtual Environment&lt;/li&gt;
&lt;li&gt;Deleting old files&lt;/li&gt;
&lt;li&gt;Copying new files&lt;/li&gt;
&lt;li&gt;Installing Python packages&lt;/li&gt;
&lt;li&gt;Running Django migrations&lt;/li&gt;
&lt;li&gt;Collecting static files&lt;/li&gt;
&lt;li&gt;Reloading Gunicorn  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Before we can do any of this we’ll need to &lt;code&gt;ssh&lt;/code&gt; into our server. Once that’s done, we can proceed with the steps below.&lt;/p&gt;
&lt;p&gt;Above we created our virtual environment in a folder called &lt;code&gt;venv&lt;/code&gt; located in &lt;code&gt;/home/yoursite/&lt;/code&gt;. We’ll want to activate it now (1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source /home/yoursite/venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we change directory into the yoursite home directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd /home/yoursite/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we delete the old files from the last install (2):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf /home/yoursite/yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copy our new files (3)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp -r /root/deploy/ /home/yoursite/yoursite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install our Python packages (4)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install -r /home/yoursite/yoursite/requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run any migrations (5)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python /home/yoursite/yoursite/manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Collect Static Files (6)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python /home/yoursite/yoursite/manage.py collectstatic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, reload Gunicorn&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;
&lt;span class="n"&gt;systemctl&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt; &lt;span class="n"&gt;gunicorn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When we visit our domain we should see our Django Site &lt;a href="#" title="There are other steps that are neccesary like creating a superuser"&gt;fn&lt;/a&gt;&lt;/p&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="digital ocean"></category><category term="series"></category></entry><entry><title>Writing tests for Django Admin Custom Functionality</title><link href="https://www.ryancheley.com/writing-tests-for-django-admin-custom-functionality.html" rel="alternate"></link><published>2021-01-27T12:00:00+01:00</published><updated>2021-01-27T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-27:/writing-tests-for-django-admin-custom-functionality.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django app side project for a while and came across the need to write a custom filter for the Django Admin section.&lt;/p&gt;
&lt;p&gt;This was a first for me, and it was pretty straight forward to accomplish the task. I wanted to add a filter …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django app side project for a while and came across the need to write a custom filter for the Django Admin section.&lt;/p&gt;
&lt;p&gt;This was a first for me, and it was pretty straight forward to accomplish the task. I wanted to add a filter on the drop down list so that only certain records would appear.&lt;/p&gt;
&lt;p&gt;To do this, I sub-classed the Django Admin &lt;code&gt;SimpleListFilter&lt;/code&gt; with the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;(&lt;span class="n"&gt;admin&lt;/span&gt;.&lt;span class="n"&gt;SimpleListFilter&lt;/span&gt;):
    &lt;span class="n"&gt;title&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;Employee&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;parameter_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;employee&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;lookups&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;request&lt;/span&gt;, &lt;span class="n"&gt;model_admin&lt;/span&gt;):
        &lt;span class="n"&gt;employees&lt;/span&gt; = []
        &lt;span class="s"&gt;qs = Employee.objects.filter(status__status=&amp;quot;Active&amp;quot;&lt;/span&gt;).&lt;span class="n"&gt;order_by&lt;/span&gt;(&lt;span class="s"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;)
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt; &lt;span class="nb"&gt;in&lt;/span&gt; &lt;span class="s"&gt;qs:&lt;/span&gt;
&lt;span class="s"&gt;            employees.append((employee.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;, &lt;span class="nb"&gt;f&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{employee.first_name} {employee.last_name}&amp;quot;&lt;/span&gt;))
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;request&lt;/span&gt;, &lt;span class="n"&gt;queryset&lt;/span&gt;):
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="nb"&gt;value&lt;/span&gt;():
            &lt;span class="s"&gt;qs = queryset.filter(employee__id=&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="nb"&gt;value&lt;/span&gt;())
        &lt;span class="n"&gt;else:&lt;/span&gt;
            &lt;span class="s"&gt;qs = queryset&lt;/span&gt;
&lt;span class="s"&gt;        return qs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And implemented it like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;@admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;EmployeeO3NoteAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;list_filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;o3_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was, as I said, relatively straight forward to do, but what was less clear to me was how to write tests for this functionality. My project has 100% test coverage, and therefore testing isn’t something I’m unfamiliar with, but in this context, I wasn’t sure where to start.&lt;/p&gt;
&lt;p&gt;There are two parts that need to be tested:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;lookups&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queryset&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Additionally, the &lt;code&gt;queryset&lt;/code&gt;has two states that need to be tested&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;With &lt;code&gt;self.value()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Without &lt;code&gt;self.value()&lt;/code&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This gives a total of 3 tests to write&lt;/p&gt;
&lt;p&gt;The thing that helps me out the most when trying to determine how to write tests is to use the Django Shell in PyCharm. To do this I:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import necessary parts of Django App&lt;/li&gt;
&lt;li&gt;Instantiate the &lt;code&gt;EmployeeListFilter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;See what errors I get&lt;/li&gt;
&lt;li&gt;Google how to fix the errors&lt;/li&gt;
&lt;li&gt;Repeat  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is what the test ended up looking like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.tests.factories&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EmployeeO3NoteFactory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EmployeeStatusFactory&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;employees.admin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;


&lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;termed_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt;
    &lt;span class="n"&gt;termed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeStatusFactory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Termed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EmployeeFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;termed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;termed_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;all_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;active_employees&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;termed_employees&lt;/span&gt;
    &lt;span class="n"&gt;o3_notes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;all_employees&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;o3_notes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3NoteFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_batch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;all_employees&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;o3_notes&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_filter_active_employee_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lookup_choices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_query_set_unfiltered_results_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;total_employees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ACTIVE_EMPLOYEES&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;TERMED_EMPLOYEES&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;total_employees&lt;/span&gt;


&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;django_db&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_admin_query_set_filtered_results_o3_notes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o3_notes_for_all_employees&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;employee_to_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;active_employees&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;employee_list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EmployeeListFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;employee&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;employee_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model_admin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;queryset_to_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;employee_list_filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;EmployeeO3Note&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employee__id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;employee_to_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Django"></category><category term="admin"></category><category term="tests"></category></entry><entry><title>Deploying a Django Site to Digital Ocean - A Series</title><link href="https://www.ryancheley.com/deploying-a-django-site-to-digital-ocean-a-series.html" rel="alternate"></link><published>2021-01-24T12:00:00+01:00</published><updated>2021-01-24T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-24:/deploying-a-django-site-to-digital-ocean-a-series.html</id><summary type="html">&lt;h2&gt;Previous Efforts&lt;/h2&gt;
&lt;p&gt;When I first heard of Django I thought it looks like a really interesting, and Pythonic way, to get a website up and running. I spent a whole weekend putting together a site locally and then, using Digital Ocean, decided to push my idea up onto a live …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Previous Efforts&lt;/h2&gt;
&lt;p&gt;When I first heard of Django I thought it looks like a really interesting, and Pythonic way, to get a website up and running. I spent a whole weekend putting together a site locally and then, using Digital Ocean, decided to push my idea up onto a live site.&lt;/p&gt;
&lt;p&gt;One problem that I ran into, which EVERY new Django Developer will run into was static files. I couldn’t get static files to work. No matter what I did, they were just … missing. I proceeded to spend the next few weekends trying to figure out why, but alas, I was not very good (or patient) with reading documentation and gave up.&lt;/p&gt;
&lt;p&gt;Fast forward a few years, and while taking the 100 Days of Code on the Web Python course from Talk Python to Me I was able to follow along on a part of the course that pushed up a Django App to Heroku.&lt;/p&gt;
&lt;p&gt;I wrote about that effort &lt;a href="https://pybit.es/my-first-django-app.html"&gt;here&lt;/a&gt;. Needless to say, I was pretty pumped. But, I was wondering, is there a way I can actually get a Django site to work on a non-Heroku (PaaS) type infrastructure.&lt;/p&gt;
&lt;h2&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;While going through my Twitter timeline I cam across a retweet from TestDrive.io of &lt;a href="https://mattsegal.dev/simple-django-deployment.html"&gt;Matt Segal&lt;/a&gt;. He has an &lt;strong&gt;amazing&lt;/strong&gt; walk through of deploying a Django site on the hard level (i.e. using Windows). It’s a mix of Blog posts and YouTube Videos and I highly recommend it. There is some NSFW language, BUT if you can get past that (and I can) it’s a great resource.&lt;/p&gt;
&lt;p&gt;This series is meant to be a written record of what I did to implement these recommendations and suggestions, and then to push myself a bit further to expand the complexity of the app.&lt;/p&gt;
&lt;h2&gt;Articles&lt;/h2&gt;
&lt;p&gt;A list of the Articles will go here. For now, here’s a rough outline of the planned posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/setting-up-the-server-on-digital-ocean.html"&gt;Setting up the Server (on Digital Ocean)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/getting-your-domain-to-point-to-digital-ocean-your-server.html"&gt;Getting your Domain to point to Digital Ocean Your Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/preparing-the-code-for-deployment-to-digital-ocean.html"&gt;Preparing the code for deployment to Digital Ocean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/automating-the-deployment.html"&gt;Automating the deployment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enhancements  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ‘Enhancements’ will be multiple follow up posts (hopefully) as I catalog improvements make to the site. My currently planned enhancements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating the App&lt;/li&gt;
&lt;li&gt;&lt;a href="/using-postgresql.html"&gt;Migrating from SQLite to Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Integrating Git&lt;/li&gt;
&lt;li&gt;&lt;a href="/setting-up-multiple-django-sites-on-a-digital-ocean-server.html"&gt;Having Multiple Sites on a single Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adding Caching&lt;/li&gt;
&lt;li&gt;Integrating S3 on AWS to store Static Files and Media Files&lt;/li&gt;
&lt;li&gt;Migrate to Docker / Kubernetes  &lt;/li&gt;
&lt;/ul&gt;</content><category term="Django"></category><category term="Deployment"></category><category term="series"></category></entry><entry><title>Django form filters</title><link href="https://www.ryancheley.com/django-form-filters.html" rel="alternate"></link><published>2021-01-23T12:00:00+01:00</published><updated>2021-01-23T12:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-23:/django-form-filters.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django Project for a while and one of the apps I have tracks candidates. These candidates have dates of a specific type.&lt;/p&gt;
&lt;p&gt;The models look like this:&lt;/p&gt;
&lt;h2&gt;Candidate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Candidate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;first_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="n"&gt;last_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="nb"&gt;resume&lt;/span&gt; = &lt;span class="n"&gt;models …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django Project for a while and one of the apps I have tracks candidates. These candidates have dates of a specific type.&lt;/p&gt;
&lt;p&gt;The models look like this:&lt;/p&gt;
&lt;h2&gt;Candidate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Candidate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;first_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="n"&gt;last_name&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;128&lt;/span&gt;)
    &lt;span class="nb"&gt;resume&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;FileField&lt;/span&gt;(&lt;span class="n"&gt;storage&lt;/span&gt;=&lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;(), &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;cover_leter&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;FileField&lt;/span&gt;(&lt;span class="n"&gt;storage&lt;/span&gt;=&lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;(), &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;email_address&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;EmailField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;linkedin&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;github&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;rejected&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;BooleanField&lt;/span&gt;()
    &lt;span class="n"&gt;position&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;positions.Position&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;hired&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;BooleanField&lt;/span&gt;(&lt;span class="k"&gt;default&lt;/span&gt;=&lt;span class="nb"&gt;False&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;CandidateDate&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDate&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;candidate&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;Candidate&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;date_type&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;ForeignKey&lt;/span&gt;(
        &lt;span class="s"&gt;&amp;quot;CandidateDateType&amp;quot;&lt;/span&gt;,
        &lt;span class="n"&gt;on_delete&lt;/span&gt;=&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CASCADE&lt;/span&gt;,
    )
    &lt;span class="n"&gt;candidate_date&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;DateField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;candidate_date_note&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;TextField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
    &lt;span class="n"&gt;meeting_link&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;URLField&lt;/span&gt;(&lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Meta:&lt;/span&gt;
        &lt;span class="n"&gt;ordering&lt;/span&gt; = [&lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;, &lt;span class="s"&gt;&amp;quot;-candidate_date&amp;quot;&lt;/span&gt;]
        &lt;span class="n"&gt;unique_together&lt;/span&gt; = (
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;date_type&amp;quot;&lt;/span&gt;,
        )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;CandidateDateType&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDateType&lt;/span&gt;(&lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;Model&lt;/span&gt;):
    &lt;span class="n"&gt;date_type&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;24&lt;/span&gt;)
    &lt;span class="n"&gt;description&lt;/span&gt; = &lt;span class="n"&gt;models&lt;/span&gt;.&lt;span class="n"&gt;CharField&lt;/span&gt;(&lt;span class="n"&gt;max_length&lt;/span&gt;=&lt;span class="mi"&gt;255&lt;/span&gt;, &lt;span class="n"&gt;null&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;, &lt;span class="n"&gt;blank&lt;/span&gt;=&lt;span class="nb"&gt;True&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll see from the CandidateDate model that the fields &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;date_type&lt;/code&gt; are unique. One problem that I’ve been running into is how to help make that an easier thing to see in the form where the dates are entered.&lt;/p&gt;
&lt;p&gt;The Django built in validation will display an error message if a user were to try and select a &lt;code&gt;candidate&lt;/code&gt; and &lt;code&gt;date_type&lt;/code&gt; that already existed, but it felt like this could be done better.&lt;/p&gt;
&lt;p&gt;I did a fair amount of Googling and had a couple of different &lt;em&gt;bright&lt;/em&gt; ideas, but ultimately it came down to a pretty simple implementation of the &lt;code&gt;exclude&lt;/code&gt; keyword in the ORM&lt;/p&gt;
&lt;p&gt;The initial &lt;code&gt;Form&lt;/code&gt; looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;CandidateDateForm&lt;/span&gt;(&lt;span class="n"&gt;ModelForm&lt;/span&gt;):
   &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Meta:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; = &lt;span class="n"&gt;CandidateDate&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; = [
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;date_type&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;candidate_date&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;meeting_link&amp;quot;&lt;/span&gt;,
            &lt;span class="s"&gt;&amp;quot;candidate_date_note&amp;quot;&lt;/span&gt;,
        ]
        &lt;span class="n"&gt;widgets&lt;/span&gt; = {
            &lt;span class="s"&gt;&amp;quot;candidate&amp;quot;&lt;/span&gt;: &lt;span class="n"&gt;HiddenInput&lt;/span&gt;,
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I updated it to include a &lt;code&gt;__init__&lt;/code&gt; method which overrode the options in the drop down.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def __init__(self, *args, **kwargs):
    super(CandidateDateForm, self).__init__(*args, **kwargs)
    try:
        candidate = kwargs[&amp;quot;initial&amp;quot;][&amp;quot;candidate&amp;quot;]
        candidate_date_set = CandidateDate.objects.filter(candidate=candidate).values_list(&amp;quot;date_type&amp;quot;, flat=True)
        qs = CandidateDateType.objects.exclude(id__in=candidate_date_set)
        self.fields[&amp;quot;date_type&amp;quot;].queryset = qs
    except KeyError:
        pass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, with this method the drop down will only show items which can be selected, not all &lt;code&gt;CandidateDateType&lt;/code&gt; options.&lt;/p&gt;
&lt;p&gt;Seems like a better user experience AND I got to learn a bit about the Django ORM&lt;/p&gt;</content><category term="Django"></category><category term="filters"></category><category term="forms"></category></entry><entry><title>Using different .env files</title><link href="https://www.ryancheley.com/using-different-env-files.html" rel="alternate"></link><published>2021-01-16T14:53:00+01:00</published><updated>2021-01-16T14:53:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2021-01-16:/using-different-env-files.html</id><summary type="html">&lt;p&gt;In a Django project I’m working on I use a library called &lt;code&gt;Django-environ&lt;/code&gt; which&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;allows you to utilize 12factor inspired environment variables to configure your Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s a pretty sweet library as well. You create a .env file to store your variable that you don’t want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a Django project I’m working on I use a library called &lt;code&gt;Django-environ&lt;/code&gt; which&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;allows you to utilize 12factor inspired environment variables to configure your Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s a pretty sweet library as well. You create a .env file to store your variable that you don’t want in a public repo for your &lt;code&gt;settings.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The big issue I have is that my &lt;code&gt;.env&lt;/code&gt; file for my local development isn’t what I want on my production server (obviously ... never set &lt;code&gt;DEBIG=True&lt;/code&gt; in production!)&lt;/p&gt;
&lt;p&gt;I had tried to use a different &lt;code&gt;.env&lt;/code&gt; file using an assortment of methods, but to no avail. And the documentation wasn’t much of a help for using Multiple env file&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is possible to have multiple env files and select one using environment variables.&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;ENV_PATH=other-env ./manage.py runserver&lt;/code&gt; uses &lt;code&gt;other-env&lt;/code&gt; while &lt;code&gt;./manage.py runserver&lt;/code&gt; uses &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But there’s no example about how to actually set that up 🤦🏻‍♂️^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^.&lt;/p&gt;
&lt;p&gt;In fact, this bit in the documentation reminded me of this&lt;a href="https://youtu.be/MAlSjtxy5ak" title="Every Programming Tutorial"&gt;video&lt;/a&gt; on YouTube.&lt;/p&gt;
&lt;p&gt;Instead of trying to figure out the use of multiple &lt;code&gt;.env&lt;/code&gt; files I instead used a &lt;a href="https://github.com/casey/just"&gt;just&lt;/a&gt; recipe in my &lt;code&gt;justfile&lt;/code&gt; to get the job done.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="nv"&gt;checks&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;deployment&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;prod&lt;/span&gt; &lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="c1"&gt;; will return error if the check doesn&amp;#39;t pass&lt;/span&gt;
&lt;span class="nv"&gt;check&lt;/span&gt;:
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_staging&lt;/span&gt;
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_prod&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;python&lt;/span&gt; &lt;span class="nv"&gt;manage&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt; &lt;span class="nv"&gt;check&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;deploy&lt;/span&gt;
    &lt;span class="nv"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env_staging&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;.&lt;span class="nv"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;OK. What does this recipe do?&lt;/p&gt;
&lt;p&gt;First, we copy the development &lt;code&gt;.env&lt;/code&gt; file to a &lt;code&gt;.env_staging&lt;/code&gt; file to keep the original development settings ‘somewhere’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; cp core/.env core/.env_staging
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we copy the &lt;code&gt;.env_prod&lt;/code&gt; to the &lt;code&gt;.env&lt;/code&gt; so that we can use it when we run &lt;code&gt;-python manage.py check --deploy&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp core/.env_prod core/.env
-python manage.py check --deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Why do we use the &lt;code&gt;-&lt;/code&gt;? That allows the &lt;code&gt;justfile&lt;/code&gt; to keep going if it runs into an error. Since we’re updating our main &lt;code&gt;.env&lt;/code&gt; file I want to make sure it gets restored to its original state … just in case!&lt;/p&gt;
&lt;p&gt;Finally, we copy the original contents of the &lt;code&gt;.env&lt;/code&gt; file from the &lt;code&gt;.env_staging&lt;/code&gt; back to the &lt;code&gt;.env&lt;/code&gt; to restore it to its development settings.&lt;/p&gt;
&lt;p&gt;Now, I can simply run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;just check
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And I’ll know if I have passed the 12 factor checking for my Django project or somehow introduced something that makes the check not pass.&lt;/p&gt;
&lt;p&gt;I’d like to figure out how to set up multiple &lt;code&gt;.env&lt;/code&gt; files, create an example and contribute to the docs ... but honestly I have &lt;em&gt;no freaking clue&lt;/em&gt; how to do it. If I am able to figure it out, you can bet I’m going to write up a PR for the docs!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[I’d like to figure out how to set up multiple &lt;code&gt;.env&lt;/code&gt; files, create an example and contribute to the docs ... but honestly I have &lt;em&gt;no freaking clue&lt;/em&gt; how to do it. If I am able to figure it out, you can bet I’m going to write up a PR for the docs! &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="DevOps"></category><category term="JustFile"></category></entry><entry><title>Logging in a Django App</title><link href="https://www.ryancheley.com/logging-in-a-django-app.html" rel="alternate"></link><published>2020-10-21T17:39:00+02:00</published><updated>2020-10-21T17:39:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-10-21:/logging-in-a-django-app.html</id><summary type="html">&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-ADMINS"&gt;Django Documentation&lt;/a&gt; you can set up&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A list of all the people who get code error notifications. When DEBUG=False and AdminEmailHandler is configured in LOGGING (done by default), Django emails these people the details of exceptions raised in the request/response cycle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to set this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/3.1/ref/settings/#std:setting-ADMINS"&gt;Django Documentation&lt;/a&gt; you can set up&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A list of all the people who get code error notifications. When DEBUG=False and AdminEmailHandler is configured in LOGGING (done by default), Django emails these people the details of exceptions raised in the request/response cycle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In order to set this up you need to include in your &lt;code&gt;settings.py&lt;/code&gt; file something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ADMINS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&lt;/span&gt;
&lt;span class="n"&gt;    (&amp;#39;John&amp;#39;, &amp;#39;john@example.com&amp;#39;), &lt;/span&gt;
&lt;span class="n"&gt;    (&amp;#39;Mary&amp;#39;, &amp;#39;mary@example.com&amp;#39;)&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The difficulties I always ran into were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How to set up the AdminEmailHandler&lt;/li&gt;
&lt;li&gt;How to set up a way to actually email from the Django Server  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Again, per the &lt;a href="https://docs.djangoproject.com/en/3.1/topics/logging/#django.utils.log.AdminEmailHandler" title="AdminEmailHandler"&gt;Django Documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Django provides one log handler in addition to those provided by the Python logging module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reading through the documentation didn’t &lt;strong&gt;really&lt;/strong&gt; help me all that much. The docs show the following example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;#39;handlers&amp;#39;: {
    &amp;#39;mail_admins&amp;#39;: {
        &amp;#39;level&amp;#39;: &amp;#39;ERROR&amp;#39;,
        &amp;#39;class&amp;#39;: &amp;#39;django.utils.log.AdminEmailHandler&amp;#39;,
        &amp;#39;include_html&amp;#39;: True,
    }
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s great, but there’s not a direct link (that I could find) to the example of how to configure the logging in that section. It is instead at the &lt;strong&gt;VERY&lt;/strong&gt; bottom of the documentation page in the Contents section in the &lt;a href="https://docs.djangoproject.com/en/3.1/topics/logging/#configuring-logging"&gt;Configured logging &gt; Examples&lt;/a&gt; section ... and you &lt;em&gt;really&lt;/em&gt; need to know that you have to look for it!&lt;/p&gt;
&lt;p&gt;The important thing to do is to include the above in the appropriate &lt;code&gt;LOGGING&lt;/code&gt; setting, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGGING = {
    &amp;#39;version&amp;#39;: 1,
    &amp;#39;disable_existing_loggers&amp;#39;: False,
    &amp;#39;handlers&amp;#39;: {
        &amp;#39;mail_admins&amp;#39;: {
            &amp;#39;level&amp;#39;: &amp;#39;ERROR&amp;#39;,
            &amp;#39;class&amp;#39;: &amp;#39;django.utils.log.AdminEmailHandler&amp;#39;,
            &amp;#39;include_html&amp;#39;: True,
        }
       },
    },
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Sending an email with Logging information&lt;/h2&gt;
&lt;p&gt;We’ve got the logging and it will be sent via email, but there’s no way for the email to get sent out yet!&lt;/p&gt;
&lt;p&gt;In order to accomplish this I use &lt;a href="https://sendgrid.com" title="SendGrid"&gt;SendGrid&lt;/a&gt;. No real reason other than that’s what I’ve used in the past.&lt;/p&gt;
&lt;p&gt;There are &lt;a href="https://sendgrid.com/docs/for-developers/sending-email/django/" title="Django and SendGrid Tutorials"&gt;great tutorials online&lt;/a&gt; for how to get SendGrid integrated with Django, so I won’t rehash that here. I’ll just drop my the settings I used in my &lt;code&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SENDGRID_API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SENDGRID_API_KEY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;EMAIL_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;smtp.sendgrid.net&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;apikey&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_HOST_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SENDGRID_API_KEY&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
&lt;span class="n"&gt;EMAIL_USE_TLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One final thing I needed to do was to update the email address that was being used to send the email. By default it uses &lt;code&gt;root@localhost&lt;/code&gt; which isn’t ideal.&lt;/p&gt;
&lt;p&gt;You can override this by setting&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SERVER_EMAIL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;myemail&lt;/span&gt;&lt;span class="nv"&gt;@mydomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With those three settings, everything should just work.&lt;/p&gt;</content><category term="Django"></category><category term="digital ocean"></category><category term="django"></category></entry><entry><title>My First Django Project</title><link href="https://www.ryancheley.com/my-first-django-project.html" rel="alternate"></link><published>2020-05-02T14:43:00+02:00</published><updated>2020-05-02T14:43:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2020-05-02:/my-first-django-project.html</id><summary type="html">&lt;p&gt;I've been writing code for about 15 years (on and off) and Python for about 4 or 5 years. With Python it's mostly small scripts and such. I’ve never considered myself a ‘real programmer’ (Python or otherwise).&lt;/p&gt;
&lt;p&gt;About a year ago, I decided to change that (for Python at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been writing code for about 15 years (on and off) and Python for about 4 or 5 years. With Python it's mostly small scripts and such. I’ve never considered myself a ‘real programmer’ (Python or otherwise).&lt;/p&gt;
&lt;p&gt;About a year ago, I decided to change that (for Python at the very least) when I set out to do &lt;a href="https://training.talkpython.fm/courses/details/100-days-of-web-in-python"&gt;100 Days Of Web in Python&lt;/a&gt; from &lt;a href="https://talkpython.fm/home"&gt;Talk Python To Me&lt;/a&gt;. Part of that course were two sections taught by &lt;a href="https://pybit.es/author/bob.html"&gt;Bob&lt;/a&gt; regarding &lt;a href="https://www.djangoproject.com"&gt;Django&lt;/a&gt;. I had tried learn &lt;a href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt; before and found it ... overwhelming to say the least.&lt;/p&gt;
&lt;p&gt;Sure, you could get a ‘hello world’ app in 5 lines of code, but then what? If you wanted to do just about anything it required ‘something’ else.&lt;/p&gt;
&lt;p&gt;I had tried Django before, but wasn't able to get over the 'hump' of deploying. Watching the Django section in the course made it just click for me. Finally, a tool to help me make AND deploy something! But what?&lt;/p&gt;
&lt;h2&gt;The Django App I wanted to create&lt;/h2&gt;
&lt;p&gt;A small project I had done previously was to write a short &lt;a href="https://github.com/ryancheley/itfdb"&gt;script&lt;/a&gt; for my Raspberry Pi to tell me when LA Dodger (Baseball) games were on (it also has beloved Dodger Announcer &lt;a href="https://en.wikipedia.org/wiki/Vin_Scully"&gt;Vin Scully&lt;/a&gt; say his catch phrase, “It’s time for Dodger baseball!!!”).&lt;/p&gt;
&lt;p&gt;I love the Dodgers. But I also love baseball. I love baseball so much I have on my bucket list a trip to visit all 30 MLB stadia. Given my love of baseball, and my new found fondness of Django, I thought I could write something to keep track of visited stadia. I mean, how hard could it &lt;em&gt;really&lt;/em&gt; be?&lt;/p&gt;
&lt;h2&gt;What does it do?&lt;/h2&gt;
&lt;p&gt;My Django Site uses the &lt;a href="https://statsapi.mlb.com"&gt;MLB API&lt;/a&gt; to search for games and allows a user to indicate a game seen in person. This allows them to track which stadia you've been to. My site is composed of 4 apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;Content&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;Stadium Tracker  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The API is written using &lt;a href="https://www.django-rest-framework.org"&gt;Django Rest Framework (DRF)&lt;/a&gt; and is super simple to implement. It’s also &lt;a href="/updating-the-models-for-my-django-rest-framework-api/"&gt;really easy to changes to your models if you need to&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Users app was inspired by &lt;a href="https://wsvincent.com"&gt;Will S Vincent&lt;/a&gt; ( a member of the &lt;a href="https://www.djangoproject.com/foundation/"&gt;Django Software Foundation&lt;/a&gt;, author, and &lt;a href="https://djangochat.com"&gt;podcaster&lt;/a&gt;). He (and others) recommend creating a custom user model to more easily extend the User model later on. Almost all of what’s in my Users App is directly taken from his recommendations.&lt;/p&gt;
&lt;p&gt;The Content App was created to allow me to update the &lt;a href="https://stadium-tracker-api.herokuapp.com"&gt;home page&lt;/a&gt;, and &lt;a href="https://stadium-tracker-api.herokuapp.com/Pages/About"&gt;about page&lt;/a&gt; (and any other content based page) using the database instead of updating html in a template.&lt;/p&gt;
&lt;p&gt;The last App, and the reason for the site itself, is the Stadium Tracker! I created a search tool that allows a user to find a game on a specific day between two teams. Once found, the user can add that game to ‘Games Seen’. This will then update the list of games seen for that user AND mark the location of the game as a stadium visited. The best part is that because the game is from the MLB API I can do some interesting things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I can get the actual stadium from visited which allows the user to indicate historic (i.e. retired) stadia&lt;/li&gt;
&lt;li&gt;I can get details of the game (final score, hits, runs, errors, stories from MLB, etc) and display them on a details page.  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's great and all, but what does it look like?&lt;/p&gt;
&lt;h3&gt;The Search Tool&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-440" src="/images/uploads/2020/05/add-a-game.png"&gt;&lt;/p&gt;
&lt;h3&gt;Stadia Listing&lt;/h3&gt;
&lt;h4&gt;National League West&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-439" src="/images/uploads/2020/05/visited-stadia-nl-west.png"&gt;&lt;/p&gt;
&lt;h4&gt;American League West&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" class="wp-image-438" src="/images/uploads/2020/05/visited-stadia-al-west.png"&gt;&lt;/p&gt;
&lt;h2&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;I had created a roadmap at one point and was able to get through some (but not all) of those items. Items left to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get Test coverage to at least 80% across the app (currently sits at 70%)&lt;/li&gt;
&lt;li&gt;Allow users to be based on social networks (right now I’m looking at Twitter, and Instagram) probably with the &lt;a href="https://django-allauth.readthedocs.io/en/latest/installation.html"&gt;Django Allauth Package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add ability to for minor league team search and stadium tracking (this is already part of the MLB API, I just never implemented it)&lt;/li&gt;
&lt;li&gt;Allow user to search for range of dates for teams&lt;/li&gt;
&lt;li&gt;Update the theme ... it’s the default MUI CSS which is nice, but I’d rather it was something a little bit different&lt;/li&gt;
&lt;li&gt;Convert Swagger implementation from &lt;code&gt;django-rest-swagger&lt;/code&gt; to &lt;code&gt;drf-yasg&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;Writing this app did several things for me.&lt;/p&gt;
&lt;p&gt;First, it removed some of the tutorial paralysis that I felt. Until I wrote this I didn’t think I was a web programmer (and I still don’t really), and therefore had no business writing a web app.&lt;/p&gt;
&lt;p&gt;Second, it taught me how to use git more effectively. This directly lead to me &lt;a href="/my-first-commit-to-an-open-source-project-django.html"&gt;contributing to Django itself&lt;/a&gt; (in a very small way via updates to documentation). It also allowed me to feel comfortable enough to write my first post on &lt;a href="https://pybit.es/using-python-to-check-for-file-changes-in-excel.html"&gt;this very blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, it introduced me to the wonderful ecosystem around Django. There is so much to learn, but the great thing is that EVERYONE is learning something. There isn’t anyone that knows it all which makes it easier to ask questions! And helps me in feeling more confident to answer questions when asked.&lt;/p&gt;
&lt;p&gt;The site is deployed on &lt;a href="https://www.heroku.com"&gt;Heroku&lt;/a&gt; and can be seen &lt;a href="https://stadium-tracker-api.herokuapp.com"&gt;here&lt;/a&gt;. The code for the site can be seen &lt;a href="https://github.com/ryancheley/StadiumTrackerAPIPublic"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article was also posted on the &lt;a href="https://pybit.es/my-first-django-app.html"&gt;PyBit.es Blog&lt;/a&gt;&lt;/p&gt;</content><category term="Django"></category><category term="doing"></category><category term="python"></category></entry><entry><title>CBV - PasswordChangeDoneView</title><link href="https://www.ryancheley.com/cbv-passwordchangedoneview.html" rel="alternate"></link><published>2019-12-25T10:00:00+01:00</published><updated>2019-12-25T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-25:/cbv-passwordchangedoneview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeDoneView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeDoneView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;template_name: Much like the &lt;code&gt;LogoutView&lt;/code&gt; the default view is the Django skin. Create your own &lt;code&gt;password_change_done.html&lt;/code&gt; file to keep the user experience consistent across the site.&lt;/li&gt;
&lt;li&gt;title: the default uses …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeDoneView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeDoneView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;template_name: Much like the &lt;code&gt;LogoutView&lt;/code&gt; the default view is the Django skin. Create your own &lt;code&gt;password_change_done.html&lt;/code&gt; file to keep the user experience consistent across the site.&lt;/li&gt;
&lt;li&gt;title: the default uses the function &lt;code&gt;gettext_lazy()&lt;/code&gt; and passes the string ‘Password change successful’. The function &lt;code&gt;gettext_lazy()&lt;/code&gt; will translate the text into the local language if a translation is available. I’d just keep the default on this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myPasswordChangeDoneView&lt;/span&gt;(&lt;span class="n"&gt;PasswordChangeDoneView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;password_change_done_view/&amp;#39;, views.myPasswordChangeDoneView.as_view(), name=&amp;#39;password_change_done_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;password_change_done.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password changed&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGIN_URL = &amp;#39;/&amp;lt;app_name&amp;gt;/login_view/&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above assumes that have this set up in your &lt;code&gt;urls.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Special Notes&lt;/h2&gt;
&lt;p&gt;You need to set the &lt;code&gt;URL_LOGIN&lt;/code&gt; value in your &lt;code&gt;settings.py&lt;/code&gt;. It defaults to &lt;code&gt;/accounts/login/&lt;/code&gt;. If that path isn’t valid you’ll get a 404 error.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;PasswordChangeDoneView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BPasswordContextMixin%7Bbg:white%7D%5D%5E-%5BPasswordChangeDoneView%7Bbg:green%7D%5D,%20%5BTemplateView%7Bbg:lightblue%7D%5D%5E-%5BPasswordChangeDoneView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BTemplateView%7Bbg:lightblue%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Again, not much to do here. Let Django do all of the heavy lifting, but be mindful of the needed work in &lt;code&gt;settings.py&lt;/code&gt; and the new template you’ll need/want to create&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - PasswordChangeView</title><link href="https://www.ryancheley.com/cbv-passwordchangeview.html" rel="alternate"></link><published>2019-12-22T10:00:00+01:00</published><updated>2019-12-22T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-22:/cbv-passwordchangeview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;PasswordChangeForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;success_url: If you’ve created your own custom PasswordChangeDoneView then you’ll need to update this …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/PasswordChangeView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;PasswordChangeView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;PasswordChangeForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;success_url: If you’ve created your own custom PasswordChangeDoneView then you’ll need to update this. The default is to use Django’s but unless you have a top level &lt;code&gt;urls.py&lt;/code&gt; has the name of &lt;code&gt;password_change_done&lt;/code&gt; you’ll get an error.&lt;/li&gt;
&lt;li&gt;title: defaults to ‘Password Change’ and is translated into local language&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myPasswordChangeView&lt;/span&gt;(&lt;span class="n"&gt;PasswordChangeView&lt;/span&gt;):
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:password_change_done_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;password_change_view/&amp;#39;, views.myPasswordChangeView.as_view(), name=&amp;#39;password_change_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;password_change_form.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password changed&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;PasswordChangeView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BPasswordContextMixin%7Bbg:white%7D%5D%5E-%5BPasswordChangeView%7Bbg:green%7D%5D,%20%5BFormView%7Bbg:lightblue%7D%5D%5E-%5BPasswordChangeView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The only thing to keep in mind here is the success_url that will most likely need to be set based on the application you’ve written. If you get an error about not being able to use &lt;code&gt;reverse&lt;/code&gt; to find your template, that’s the issue.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - LoginView</title><link href="https://www.ryancheley.com/cbv-loginview.html" rel="alternate"></link><published>2019-12-15T10:00:00+01:00</published><updated>2019-12-15T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-15:/cbv-loginview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LoginView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LoginView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Display the login form and handle the login action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;authentication_form: Allows you to subclass &lt;code&gt;AuthenticationForm&lt;/code&gt; if needed. You would want to do this IF you need other fields besides username and password for login OR you want to implement other logic than just …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LoginView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LoginView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Display the login form and handle the login action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;authentication_form: Allows you to subclass &lt;code&gt;AuthenticationForm&lt;/code&gt; if needed. You would want to do this IF you need other fields besides username and password for login OR you want to implement other logic than just account creation, i.e. account verification must be done as well. For details see &lt;a href="https://simpleisbetterthancomplex.com/tips/2016/08/12/django-tip-10-authentication-form-custom-login-policy.html"&gt;example&lt;/a&gt; by Vitor Freitas for more details&lt;/li&gt;
&lt;li&gt;form_class: The form that will be used by the template created. Defaults to Django’s &lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;redirect_authenticated_user: If the user is logged in then when they attempt to go to your login page it will redirect them to the &lt;code&gt;LOGIN_REDIRECT_URL&lt;/code&gt; configured in your &lt;code&gt;settings.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;redirect_field_name: similar idea to updating what the &lt;code&gt;next&lt;/code&gt; field will be from the &lt;code&gt;DetailView&lt;/code&gt;. If this is specified then you’ll most likely need to create a custom login template.&lt;/li&gt;
&lt;li&gt;template_name: The default value for this is &lt;code&gt;registration\login.html&lt;/code&gt;, i.e. a file called &lt;code&gt;login.html&lt;/code&gt; in the &lt;code&gt;registration&lt;/code&gt; directory of the &lt;code&gt;templates&lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are no required attributes for this view, which is nice because you can just add &lt;code&gt;pass&lt;/code&gt; to the view and you’re set (for the view anyway you still need an html file).&lt;/p&gt;
&lt;p&gt;You’ll also need to update &lt;code&gt;settings.py&lt;/code&gt; to include a value for the &lt;code&gt;LOGIN_REDIRECT_URL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Note on redirect_field_name&lt;/h3&gt;
&lt;p&gt;Per the &lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.decorators.login_required"&gt;Django Documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If the user isn’t logged in, redirect to settings.LOGIN&lt;em&gt;URL, passing the current absolute path in the query string. Example: /accounts/login/?next=/polls/3/.&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;If &lt;code&gt;redirect_field_name&lt;/code&gt; is set then the URL would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/accounts/login/?&amp;lt;redirect_field_name&amp;gt;=/polls/3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basically, you only use this if you have a pretty good reason.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myLoginView&lt;/span&gt;(&lt;span class="n"&gt;LoginView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;login_view/&amp;#39;, views.myLoginView.as_view(), name=&amp;#39;login_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;registration/login.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui--text-danger&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;error&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;form.non_field_errors&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;error&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-textfield&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.username.label&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.username&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-textfield&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.password.label&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.password&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-btn mui-btn--primary&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Log in&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;next&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;request.GET.next&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-divider&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LOGIN_REDIRECT_URL = &amp;#39;/&amp;lt;app_name&amp;gt;/&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;LoginView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSuccessURLAllowedHostsMixin%7Bbg:white%7D%5D%5E-%5BLoginView%7Bbg:green%7D%5D,%20%5BFormView%7Bbg:lightblue%7D%5D%5E-%5BLoginView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:lightblue%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Really easy to implement right out of the box but allows some nice customization. That being said, make those customizations IF you need to, not just because you think you want to.&lt;/p&gt;</content><category term="Django"></category><category term="authentication"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - LogoutView</title><link href="https://www.ryancheley.com/cbv-logoutview.html" rel="alternate"></link><published>2019-12-15T10:00:00+01:00</published><updated>2019-12-15T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-15:/cbv-logoutview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LogoutView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LogoutView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Log out the user and display the 'You are logged out' message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;next_page: redirects the user on logout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.views.LogoutView"&gt;redirect_field_name&lt;/a&gt;: The name of a GET field containing the URL to redirect to after log out. Defaults to next. Overrides the next_page URL if the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.contrib.auth.views/LogoutView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;LogoutView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Log out the user and display the 'You are logged out' message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;next_page: redirects the user on logout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.views.LogoutView"&gt;redirect_field_name&lt;/a&gt;: The name of a GET field containing the URL to redirect to after log out. Defaults to next. Overrides the next_page URL if the given GET parameter is passed.^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/li&gt;
&lt;li&gt;template_name: defaults to &lt;code&gt;registration\logged_out.html&lt;/code&gt;. Even if you don’t have a template the view does get rendered but it uses the default Django skin. You’ll want to create your own to allow the user to logout AND to keep the look and feel of the site.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myLogoutView&lt;/span&gt;(&lt;span class="n"&gt;LogoutView&lt;/span&gt;):
    &lt;span class="nb"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;logout_view/&amp;#39;, views.myLogoutView.as_view(), name=&amp;#39;logout_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;registrationlogged_out.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;i18n&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;trans&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Logged out&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;LogoutView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;Image Link from CCBV YUML goes here&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I’m not sure how it could be much easier to implement a logout page.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Per Django Docs &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="authentication"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DeleteView</title><link href="https://www.ryancheley.com/cbv-deleteview.html" rel="alternate"></link><published>2019-12-11T10:00:00+01:00</published><updated>2019-12-11T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-11:/cbv-deleteview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/DeleteView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DeleteView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for deleting an object retrieved with self.get&lt;em&gt;object(), with a&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;response rendered by a template.&lt;/p&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are no new attributes, but 2 that we’ve seen are required: (1) &lt;code&gt;queryset&lt;/code&gt; or &lt;code&gt;model&lt;/code&gt;; and (2) &lt;code&gt;success_url&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDeleteView&lt;/span&gt;(&lt;span class="n"&gt;DeleteView …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/DeleteView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DeleteView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for deleting an object retrieved with self.get&lt;em&gt;object(), with a&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;response rendered by a template.&lt;/p&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are no new attributes, but 2 that we’ve seen are required: (1) &lt;code&gt;queryset&lt;/code&gt; or &lt;code&gt;model&lt;/code&gt;; and (2) &lt;code&gt;success_url&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDeleteView&lt;/span&gt;(&lt;span class="n"&gt;DeleteView&lt;/span&gt;):
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;delete_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myDeleteView.as_view(), name=&amp;#39;delete_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template_name&gt;.html&lt;/p&gt;
&lt;p&gt;Below is just the form that would be needed to get the delete to work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;border=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;First Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Last Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;person.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Back&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Delete&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DeleteView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BDeleteView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseDeleteView%7Bbg:white%7D%5D%5E-%5BDeleteView%7Bbg:green%7D%5D,%20%5BDeletionMixin%7Bbg:white%7D%5D%5E-%5BBaseDeleteView%7Bbg:white%7D%5D,%20%5BBaseDetailView%7Bbg:white%7D%5D%5E-%5BBaseDeleteView%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDetailView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDetailView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As far as implementations, the ability to add a form to delete data is about the easiest thing you can do in Django. It requires next to nothing in terms of implementing. We now have step 4 of a CRUD app!&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - UpdateView</title><link href="https://www.ryancheley.com/cbv-updateview.html" rel="alternate"></link><published>2019-12-08T10:00:00+01:00</published><updated>2019-12-08T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-08:/cbv-updateview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/UpdateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;UpdateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for updating an object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Two attributes are required to get the template to render. We’ve seen &lt;code&gt;queryset&lt;/code&gt; before and in &lt;a href="/cbv-createview/"&gt;CreateView&lt;/a&gt; we saw &lt;code&gt;fields&lt;/code&gt;. As a brief refresher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/UpdateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;UpdateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for updating an object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Two attributes are required to get the template to render. We’ve seen &lt;code&gt;queryset&lt;/code&gt; before and in &lt;a href="/cbv-createview/"&gt;CreateView&lt;/a&gt; we saw &lt;code&gt;fields&lt;/code&gt;. As a brief refresher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the model or queryset will be displayed on the rendered template. You can you set &lt;code&gt;fields&lt;/code&gt; to &lt;code&gt;__all__&lt;/code&gt; if you want to return all of the fields&lt;/li&gt;
&lt;li&gt;success_url: you’ll want to specify this after the record has been updated so that you know the update was made.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myUpdateView&lt;/span&gt;(&lt;span class="n"&gt;UpdateView&lt;/span&gt;):
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;fields&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;__all__&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;extra_context&lt;/span&gt; = {
        &lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;: &lt;span class="s"&gt;&amp;#39;Update&amp;#39;&lt;/span&gt;
    }
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;update_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myUpdateView.as_view(), name=&amp;#39;update_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Create&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:update_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;object.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;UpdateView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BUpdateView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseUpdateView%7Bbg:white%7D%5D%5E-%5BUpdateView%7Bbg:green%7D%5D,%20%5BModelFormMixin%7Bbg:white%7D%5D%5E-%5BBaseUpdateView%7Bbg:white%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseUpdateView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A simple way to implement a form to update data in a model. Step 3 for a CR&lt;strong&gt;U&lt;/strong&gt;D app is now complete!&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>My first commit to an Open Source Project: Django</title><link href="https://www.ryancheley.com/my-first-commit-to-an-open-source-project-django.html" rel="alternate"></link><published>2019-12-07T15:54:00+01:00</published><updated>2019-12-07T15:54:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-07:/my-first-commit-to-an-open-source-project-django.html</id><summary type="html">&lt;p&gt;Last September the annual Django Con was held in San Diego. I &lt;strong&gt;really&lt;/strong&gt; wanted to go, but because of other projects and conferences for my job, I wasn’t able to make it.&lt;/p&gt;
&lt;p&gt;The next best thing to to watch the &lt;a href="https://www.youtube.com/playlist?list=PL2NFhrDSOxgXXUMIGOs8lNe2B-f4pXOX-"&gt;videos from DjangoCon on YouTube&lt;/a&gt;. I watched a couple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last September the annual Django Con was held in San Diego. I &lt;strong&gt;really&lt;/strong&gt; wanted to go, but because of other projects and conferences for my job, I wasn’t able to make it.&lt;/p&gt;
&lt;p&gt;The next best thing to to watch the &lt;a href="https://www.youtube.com/playlist?list=PL2NFhrDSOxgXXUMIGOs8lNe2B-f4pXOX-"&gt;videos from DjangoCon on YouTube&lt;/a&gt;. I watched a couple of the videos, but one that really caught my attention was by &lt;a href="https://github.com/carltongibson"&gt;Carlton Gibson&lt;/a&gt; titled “&lt;a href="https://www.youtube.com/watch?v=LjTRSH0pNBo"&gt;Your Web Framework Needs You: An Update by Carlton Gibson&lt;/a&gt;”.&lt;/p&gt;
&lt;p&gt;I took what Carlton said to heart and thought, I really should be able to do &lt;em&gt;something&lt;/em&gt; to help.&lt;/p&gt;
&lt;p&gt;I went to the &lt;a href="https://code.djangoproject.com/"&gt;Django Issues site&lt;/a&gt; and searched for an &lt;strong&gt;Easy Pickings&lt;/strong&gt; issue that involved documentation and found &lt;a href="https://code.djangoproject.com/ticket/31006"&gt;issue 31006 “Document how to escape a date/time format character for the |date and |time filters.”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I read the &lt;a href="https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/working-with-git/#publishing-work"&gt;steps on what I needed to do to submit a pull request&lt;/a&gt;, but since it was my first time &lt;strong&gt;ever&lt;/strong&gt; participating like this … I was a bit lost.&lt;/p&gt;
&lt;p&gt;Luckily there isn’t anything that you can break, so I was able to wonder around for a bit and get my bearings.&lt;/p&gt;
&lt;p&gt;I forked the GitHub repo and I cloned it locally.&lt;/p&gt;
&lt;p&gt;I then spent an &lt;strong&gt;embarasingly&lt;/strong&gt; long time trying to figure out where the change was going to need to be made, and exactly what needed to change.&lt;/p&gt;
&lt;p&gt;Finally, with my changes made, I &lt;a href="https://github.com/django/django/pull/12128#issue-344767579"&gt;pushed my code changes&lt;/a&gt; to GitHub and waited.&lt;/p&gt;
&lt;p&gt;Within a few hours &lt;a href="https://github.com/django/django/pull/12128#issuecomment-557804299"&gt;Mariusz Felisiak replied back&lt;/a&gt; and asked about a suggestion he had made (but which I missed). I dug back into the documentation, found what he was referring to, and made (what I thought) was his suggested change.&lt;/p&gt;
&lt;p&gt;Another push and a bit more waiting.&lt;/p&gt;
&lt;p&gt;Mariusz Felisiak replied back with some input about the change I pushed up, and I realized I had missed the mark on what he was suggesting.&lt;/p&gt;
&lt;p&gt;OK. &lt;a href="#"&gt;Third time’s a charm&lt;/a&gt;, right?&lt;/p&gt;
&lt;p&gt;Turns out, in this case it was. &lt;a href="https://github.com/django/django/pull/12128#issuecomment-560278417"&gt;I pushed up one last time&lt;/a&gt; and this time, my changes were &lt;a href="https://github.com/django/django/commit/cd7f48e85e3e4b9f13df6c0ef5f1d95abc079ff6#diff-7be9aaef6dad344e74188264c0e95daa"&gt;merged&lt;/a&gt; into the master and just like that, I am now a contributor to Django (albeit a very, very, very minor contributor).&lt;/p&gt;
&lt;p&gt;Overall, this was a great experience, both with respect to learning about contributing to an open source project, as well as learning about GitHub.&lt;/p&gt;
&lt;p&gt;I’m hoping that with the holidays upon us I’ll be able to find the time to pick up one or two (maybe even three) &lt;strong&gt;Easy Pickings&lt;/strong&gt; issues from the Django issue tracker.&lt;/p&gt;</content><category term="Django"></category><category term="django"></category><category term="documentation"></category><category term="Github"></category></entry><entry><title>CBV - FormView</title><link href="https://www.ryancheley.com/cbv-formview.html" rel="alternate"></link><published>2019-12-04T10:00:00+01:00</published><updated>2019-12-04T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-04:/cbv-formview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/FormView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;The only new attribute to review this time is &lt;code&gt;form_class&lt;/code&gt;. That being said, there are a few implementation details to cover&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_class: takes a Form class and is used to render the …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/FormView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A view for displaying a form and rendering a template response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;The only new attribute to review this time is &lt;code&gt;form_class&lt;/code&gt;. That being said, there are a few implementation details to cover&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_class: takes a Form class and is used to render the form on the &lt;code&gt;html&lt;/code&gt; template later on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Methods&lt;/h2&gt;
&lt;p&gt;Up to this point we haven’t really needed to override a method to get any of the views to work. This time though, we need someway for the view to verify that the data is valid and then save it somewhere.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;form_valid: used to verify that the data entered is valid and then saves to the database. Without this method your form doesn’t do anything&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;This example is a bit more than previous examples. A new file called &lt;code&gt;forms.py&lt;/code&gt; is used to define the form that will be used.&lt;/p&gt;
&lt;p&gt;forms.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ModelForm&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rango.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PersonForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myFormView&lt;/span&gt;(&lt;span class="n"&gt;FormView&lt;/span&gt;):
    &lt;span class="n"&gt;form_class&lt;/span&gt; = &lt;span class="n"&gt;PersonForm&lt;/span&gt;
    &lt;span class="n"&gt;template_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango/person_form.html&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;extra_context&lt;/span&gt; = {
        &lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;: &lt;span class="s"&gt;&amp;#39;Form&amp;#39;&lt;/span&gt;
    }
    &lt;span class="n"&gt;success_url&lt;/span&gt; = &lt;span class="n"&gt;reverse_lazy&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;rango:list_view&amp;#39;&lt;/span&gt;)

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;form_valid&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;form&lt;/span&gt;):
        &lt;span class="n"&gt;person&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="n"&gt;create&lt;/span&gt;(
            &lt;span class="n"&gt;first_name&lt;/span&gt;=&lt;span class="n"&gt;form&lt;/span&gt;.&lt;span class="n"&gt;cleaned_data&lt;/span&gt;[&lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;],
            &lt;span class="n"&gt;last_name&lt;/span&gt;=&lt;span class="n"&gt;form&lt;/span&gt;.&lt;span class="n"&gt;cleaned_data&lt;/span&gt;[&lt;span class="s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;],
            &lt;span class="n"&gt;post_date&lt;/span&gt;=&lt;span class="n"&gt;datetime&lt;/span&gt;.&lt;span class="nb"&gt;now&lt;/span&gt;(),
        )
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;super&lt;/span&gt;(&lt;span class="n"&gt;myFormView&lt;/span&gt;, &lt;span class="nb"&gt;self&lt;/span&gt;).&lt;span class="n"&gt;form_valid&lt;/span&gt;(&lt;span class="n"&gt;form&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;form_view/&amp;#39;, views.myFormView.as_view(), name=&amp;#39;form_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template_name&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Update&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:update_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;object.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;FormView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:green%7D%5D,%20%5BBaseFormView%7Bbg:white%7D%5D%5E-%5BFormView%7Bbg:green%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseFormView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really struggled with understanding &lt;em&gt;why&lt;/em&gt; you would want to implement &lt;code&gt;FormView&lt;/code&gt;. I found this explanation on &lt;a href="https://www.agiliq.com/blog/2019/01/django-formview/"&gt;Agiliq&lt;/a&gt; and it helped me grok the why:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;FormView should be used when you need a form on the page and want to perform certain action when a valid form is submitted. eg: Having a contact us form and sending an email on form submission.&lt;/p&gt;
&lt;p&gt;CreateView would probably be a better choice if you want to insert a model instance in database on form submission.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;While my example above works, it’s not the intended use of &lt;code&gt;FormView&lt;/code&gt;. Really, it’s just an implementation of &lt;code&gt;CreateView&lt;/code&gt; using &lt;code&gt;FormView&lt;/code&gt;&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - CreateView</title><link href="https://www.ryancheley.com/cbv-createview.html" rel="alternate"></link><published>2019-12-01T10:00:00+01:00</published><updated>2019-12-01T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-12-01:/cbv-createview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/CreateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;CreateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for creating a new object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Three attributes are required to get the template to render. Two we’ve seen before (&lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;template_name&lt;/code&gt;). The new one we haven’t see before is the &lt;code&gt;fields&lt;/code&gt; attribute …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.edit/CreateView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;CreateView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;View for creating a new object, with a response rendered by a template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Three attributes are required to get the template to render. Two we’ve seen before (&lt;code&gt;queryset&lt;/code&gt; and &lt;code&gt;template_name&lt;/code&gt;). The new one we haven’t see before is the &lt;code&gt;fields&lt;/code&gt; attribute.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fields: specifies what fields from the model or queryset will be displayed on the rendered template. You can you set &lt;code&gt;fields&lt;/code&gt; to &lt;code&gt;__all__&lt;/code&gt; if you want to return all of the fields&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;queryset = Person.objects.all()
fields = &amp;#39;__all__&amp;#39;
template_name = &amp;#39;rango/person_form.html&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;create_view/&amp;#39;, views.myCreateView.as_view(), name=&amp;#39;create_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;template&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;


&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; View&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;csrf_token&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;form.as_p&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;SUBMIT&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;CreateView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BCreateView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseCreateView%7Bbg:white%7D%5D%5E-%5BCreateView%7Bbg:green%7D%5D,%20%5BModelFormMixin%7Bbg:white%7D%5D%5E-%5BBaseCreateView%7Bbg:white%7D%5D,%20%5BFormMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BFormMixin%7Bbg:white%7D%5D,%20%5BSingleObjectMixin%7Bbg:white%7D%5D%5E-%5BModelFormMixin%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BSingleObjectMixin%7Bbg:white%7D%5D,%20%5BProcessFormView%7Bbg:white%7D%5D%5E-%5BBaseCreateView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BProcessFormView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A simple way to implement a form to create items for a model. We’ve completed step 1 for a basic &lt;strong&gt;C&lt;/strong&gt;RUD application.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DayArchiveView</title><link href="https://www.ryancheley.com/cbv-dayarchiveview.html" rel="alternate"></link><published>2019-11-27T10:00:00+01:00</published><updated>2019-11-27T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-27:/cbv-dayarchiveview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/DayArchiveView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DayArchiveView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List of objects published on a given day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are six new attributes to review here … well really 3 new ones and then a formatting attribute for each of these 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;day: The day to be viewed&lt;/li&gt;
&lt;li&gt;day_format: The format of the day …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/DayArchiveView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DayArchiveView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;List of objects published on a given day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are six new attributes to review here … well really 3 new ones and then a formatting attribute for each of these 3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;day: The day to be viewed&lt;/li&gt;
&lt;li&gt;day_format: The format of the day to be passed. Defaults to &lt;code&gt;%d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;month: The month to be viewed&lt;/li&gt;
&lt;li&gt;month_format: The format of the month to be passed. Defaults to &lt;code&gt;%b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;year: The year to be viewed&lt;/li&gt;
&lt;li&gt;year_format: The format of the year to be passed. Defaults to &lt;code&gt;%Y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Required Attributes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;day&lt;/li&gt;
&lt;li&gt;month&lt;/li&gt;
&lt;li&gt;year&lt;/li&gt;
&lt;li&gt;date_field: The field that holds the date that will drive every else. We saw this in &lt;a href="/cbv-archiveindexview"&gt;ArchiveIndexView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally you also need &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;year&lt;/code&gt; can be passed via &lt;code&gt;urls.py&lt;/code&gt; so that they do’t need to be specified in the view itself.&lt;/p&gt;
&lt;h2&gt;Example:&lt;/h2&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDayArchiveView&lt;/span&gt;(&lt;span class="n"&gt;DayArchiveView&lt;/span&gt;):
    &lt;span class="n"&gt;month_format&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;%m&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;date_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;queryset&lt;/span&gt; = &lt;span class="n"&gt;Person&lt;/span&gt;.&lt;span class="n"&gt;objects&lt;/span&gt;.&lt;span class="nb"&gt;all&lt;/span&gt;()
    &lt;span class="n"&gt;context_object_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;person&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;paginate_by&lt;/span&gt; = &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;page_kwarg&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;day_archive_view/&amp;lt;int:year&amp;gt;/&amp;lt;int:month&amp;gt;/&amp;lt;int:day&amp;gt;/&amp;#39;, views.myDayArchiveView.as_view(), name=&amp;#39;day_archive_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;\&amp;lt;model_name&gt;_archiveday.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;


&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rango:detail_view&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;is_paginated&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mui-list--inline mui--text-body2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.has_previous&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page_obj.previous_page_number&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;laquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;laquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;paginator.page_range&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sr-only&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;(current)&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;page_obj.has_next&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;?name=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page_obj.next_page_number&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DayArchiveView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BDayArchiveView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseDayArchiveView%7Bbg:white%7D%5D%5E-%5BDayArchiveView%7Bbg:green%7D%5D,%20%5BYearMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BMonthMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BDayMixin%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BBaseDateListView%7Bbg:white%7D%5D%5E-%5BBaseDayArchiveView%7Bbg:white%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BDateMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you have date based content a great tool to use and again super easy to implement.&lt;/p&gt;
&lt;p&gt;There are other time based CBV for Today, Date, Week, Month, and Year. They all do the same thing (generally) so I won’t review those.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - ArchiveIndexView</title><link href="https://www.ryancheley.com/cbv-archiveindexview.html" rel="alternate"></link><published>2019-11-24T10:00:00+01:00</published><updated>2019-11-24T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-24:/cbv-archiveindexview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/ArchiveIndexView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ArchiveIndexView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-level archive of date-based items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are 20 attributes that can be set for the &lt;code&gt;ArchiveIndexView&lt;/code&gt; but most of them are based on ancestral Classes of the CBV so we won’t be going into them in Detail.&lt;/p&gt;
&lt;h3&gt;DateMixin Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;allow_future: Defaults to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.dates/ArchiveIndexView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ArchiveIndexView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Top-level archive of date-based items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;There are 20 attributes that can be set for the &lt;code&gt;ArchiveIndexView&lt;/code&gt; but most of them are based on ancestral Classes of the CBV so we won’t be going into them in Detail.&lt;/p&gt;
&lt;h3&gt;DateMixin Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;allow_future: Defaults to False. If set to True you can show items that have dates that are in the future where the future is anything after the current date/time on the server.&lt;/li&gt;
&lt;li&gt;date_field: the field that the view will use to filter the date on. If this is not set an error will be generated&lt;/li&gt;
&lt;li&gt;uses_datetime_field: Convert a date into a datetime when the date field is a DateTimeField. When time zone support is enabled, &lt;code&gt;date&lt;/code&gt; is assumed to be in the current time zone, so that displayed items are consistent with the URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;BaseDateListView Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;allow_empty: Defaults to &lt;code&gt;False&lt;/code&gt;. This means that if there is no data a &lt;code&gt;404&lt;/code&gt; error will be returned with the message  &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;No __str__ Available&lt;/code&gt; where ‘&lt;code&gt;__str__&lt;/code&gt;’ is the display of your model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;date_list_period: This attribute allows you to break down by a specific period of time (years, months, days, etc.) and group your date driven items by the period specified. See below for implementation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For &lt;code&gt;year&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;date_list_period=&amp;#39;year&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;Nothing special needs to be done&lt;/p&gt;
&lt;p&gt;\&amp;lt;file_name_&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;date_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;date.year&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;date.year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;p.post_date.year&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Will render:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-394" height="542" src="/images/uploads/2019/11/634B59DC-6BA6-4C5F-B969-E8B924123FFA.jpeg" width="866"&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;month&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;date_list_period=&amp;#39;month&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;Nothing special needs to be done&lt;/p&gt;
&lt;p&gt;\&amp;lt;file_name_&gt;.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;date_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;date.month&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;person&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;date.month&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;p.post_date.month&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.post_date&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;: &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.first_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;p.last_name&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Will render:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-395" height="668" src="/images/uploads/2019/11/04B40CD4-3B85-440D-810D-4050727D6120.jpeg" width="1061"&gt;&lt;/p&gt;
&lt;h3&gt;BaseArchiveIndexView Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;context_object_name: Name the object used in the template. As stated before, you’re going to want to do this so you don’t hate yourself (or have other developers hate you).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Attributes&lt;/h2&gt;
&lt;h3&gt;MultipleObjectMixin Attributes&lt;/h3&gt;
&lt;p&gt;These attributes were all reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;model = None&lt;/li&gt;
&lt;li&gt;ordering = None&lt;/li&gt;
&lt;li&gt;page_kwarg = 'page'&lt;/li&gt;
&lt;li&gt;paginate_by = None&lt;/li&gt;
&lt;li&gt;paginate_orphans = 0&lt;/li&gt;
&lt;li&gt;paginator_class = \&amp;lt;class 'django.core.paginator.Paginator'&gt;&lt;/li&gt;
&lt;li&gt;queryset = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;TemplateResponseMixin Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ContextMixin Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extra_context = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;View Attributes&lt;/h3&gt;
&lt;p&gt;This attribute was reviewed in the &lt;a href="/cbv-view.html"&gt;View&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names = ['get', 'post', 'put', 'patch', 'delete', 'head', 'options', 'trace']&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;TemplateResponseMixin Attributes&lt;/h3&gt;
&lt;p&gt;These attributes were all reviewed in the &lt;a href="/cbv-listview.html"&gt;ListView&lt;/a&gt; post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;response_class = \&amp;lt;class 'django.template.response.TemplateResponse'&gt;&lt;/li&gt;
&lt;li&gt;template_engine = None&lt;/li&gt;
&lt;li&gt;template_name = None&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;ArchiveIndexView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BArchiveIndexView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseArchiveIndexView%7Bbg:white%7D%5D%5E-%5BArchiveIndexView%7Bbg:green%7D%5D,%20%5BBaseDateListView%7Bbg:white%7D%5D%5E-%5BBaseArchiveIndexView%7Bbg:white%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BDateMixin%7Bbg:white%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseDateListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With date driven data (articles, blogs, etc.) The &lt;code&gt;ArchiveIndexView&lt;/code&gt; is a great CBV and super easy to implement.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - DetailView</title><link href="https://www.ryancheley.com/cbv-detailview.html" rel="alternate"></link><published>2019-11-24T10:00:00+01:00</published><updated>2019-11-24T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-24:/cbv-detailview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.detail/DetailView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DetailView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a "detail" view of an object.&lt;/p&gt;
&lt;p&gt;By default this is a model instance looked up from &lt;code&gt;self.queryset&lt;/code&gt;, but the view will support display of &lt;em&gt;any&lt;/em&gt; object by overriding &lt;code&gt;self.get_object()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 7 attributes for the &lt;code&gt;DetailView&lt;/code&gt; that are derived from the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.detail/DetailView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;DetailView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a "detail" view of an object.&lt;/p&gt;
&lt;p&gt;By default this is a model instance looked up from &lt;code&gt;self.queryset&lt;/code&gt;, but the view will support display of &lt;em&gt;any&lt;/em&gt; object by overriding &lt;code&gt;self.get_object()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 7 attributes for the &lt;code&gt;DetailView&lt;/code&gt; that are derived from the &lt;code&gt;SingleObjectMixin&lt;/code&gt;. I’ll talk about five of them and the go over the ‘slug’ fields in their own section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;context_object_name: similar to the &lt;code&gt;ListView&lt;/code&gt; it allows you to give a more memorable name to the object in the template. You’ll want to use this if you want to have future developers (i.e. you) not hate you&lt;/li&gt;
&lt;li&gt;model: similar to the &lt;code&gt;ListView&lt;/code&gt; except it only returns a single record instead of all records for the model based on a filter parameter passed via the &lt;code&gt;slug&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pk_url_kwarg: you can set this to be something other than pk if you want … though I’m not sure why you’d want to&lt;/li&gt;
&lt;li&gt;query_pk_and_slug: The Django Docs have a pretty clear explanation of what it does&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This attribute can help mitigate &lt;a href="https://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References"&gt;insecure direct object reference&lt;/a&gt; attacks. When applications allow access to individual objects by a sequential primary key, an attacker could brute-force guess all URLs; thereby obtaining a list of all objects in the application. If users with access to individual objects should be prevented from obtaining this list, setting query&lt;em&gt;pk&lt;/em&gt;and&lt;em&gt;slug to True will help prevent the guessing of URLs as each URL will require two correct, non-sequential arguments. Simply using a unique slug may serve the same purpose, but this scheme allows you to have non-unique slugs.&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;queryset: used to return data to the view. It will supersede the value supplied for &lt;code&gt;model&lt;/code&gt; if both are present&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Slug Fields&lt;/h2&gt;
&lt;p&gt;There are two attributes that I want to talk about separately from the others:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slug_field&lt;/li&gt;
&lt;li&gt;slug_url_kwarg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If neither &lt;code&gt;slug_field&lt;/code&gt; nor &lt;code&gt;slug_url_kwarg&lt;/code&gt; are set the the url must contain &lt;code&gt;&amp;lt;int:pk&amp;gt;&lt;/code&gt;. The url in the template needs to include &lt;code&gt;o.id&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;p&gt;There is nothing to show in the &lt;code&gt;views.py&lt;/code&gt; file in this example&lt;/p&gt;
&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;int:pk&amp;gt;&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.id %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;slug_field&lt;/code&gt; is set but &lt;code&gt;slug_url_kwarg&lt;/code&gt; is NOT set then the url can be &lt;code&gt;&amp;lt;slug&amp;gt;&lt;/code&gt;. The url in the template needs to include &lt;code&gt;o.&amp;lt;slug_field&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDetailView&lt;/span&gt;(&lt;span class="n"&gt;DetailView&lt;/span&gt;):
    &lt;span class="n"&gt;slug_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;slug&amp;gt;/&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.first_name %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;slug_field&lt;/code&gt; is not set but &lt;code&gt;slug_url_kwarg&lt;/code&gt; is set then you get an error. Don’t do this one.&lt;/p&gt;
&lt;p&gt;If both &lt;code&gt;slug_field&lt;/code&gt; and &lt;code&gt;slug_url_kwarg&lt;/code&gt; are set then the url must be &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; where value is what the parameters are set to. The url in the template needs to include &lt;code&gt;o.&amp;lt;slug_field&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;views.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myDetailView&lt;/span&gt;(&lt;span class="n"&gt;DetailView&lt;/span&gt;):
    &lt;span class="n"&gt;slug_field&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;slug_url_kwarg&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;urls.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;path(&amp;#39;detail_view/&amp;lt;first_name&amp;gt;/&amp;#39;, views.myDetailView.as_view(), name=&amp;#39;detail_view&amp;#39;),
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;\&amp;lt;ListView&gt;.html&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% url &amp;#39;rango:detail_view&amp;#39; o.first_name %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;DetailView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseListView%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I think the most important part of the &lt;code&gt;DetailView&lt;/code&gt; is to remember its relationship to &lt;code&gt;ListView&lt;/code&gt;. Changes you try to implement on the Class for &lt;code&gt;DetailView&lt;/code&gt; need to be incorporated into the template associated with the &lt;code&gt;ListView&lt;/code&gt; you have.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - BaseListView</title><link href="https://www.ryancheley.com/cbv-baselistview.html" rel="alternate"></link><published>2019-11-17T10:00:00+01:00</published><updated>2019-11-17T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-17:/cbv-baselistview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/BaseListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;BaseListView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;And from the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/generic-display/#listview"&gt;Django Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects. It is not intended to be used directly, but rather as a parent class of the django.views.generic.list.ListView …&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/BaseListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;BaseListView&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;And from the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/generic-display/#listview"&gt;Django Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A base view for displaying a list of objects. It is not intended to be used directly, but rather as a parent class of the django.views.generic.list.ListView or other views representing lists of objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Almost all of the functionality of &lt;code&gt;BaseListView&lt;/code&gt; comes from the &lt;code&gt;MultipleObjectMixin&lt;/code&gt;. Since the Django Docs specifically say don’t use this directly, I won’t go into it too much.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;BaseListView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:green%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Don’t use this. It should be subclassed into a usable view (a la &lt;code&gt;ListView&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;There are many &lt;strong&gt;Base&lt;/strong&gt; views that are ancestors for other views. I’m not going to cover any more of them going forward &lt;strong&gt;UNLESS&lt;/strong&gt; the documentation says there’s a specific reason to.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - ListView</title><link href="https://www.ryancheley.com/cbv-listview.html" rel="alternate"></link><published>2019-11-17T10:00:00+01:00</published><updated>2019-11-17T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-17:/cbv-listview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/ListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ListView&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render some list of objects, set by &lt;code&gt;self.model&lt;/code&gt; or &lt;code&gt;self.queryset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.queryset&lt;/code&gt; can actually be any iterable of items, not just a queryset.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 16 attributes for the &lt;code&gt;ListView&lt;/code&gt; but only 2 types are required to make the page return something …&lt;/p&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.list/ListView/"&gt;Classy Class Based Views&lt;/a&gt; &lt;code&gt;ListView&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render some list of objects, set by &lt;code&gt;self.model&lt;/code&gt; or &lt;code&gt;self.queryset&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;self.queryset&lt;/code&gt; can actually be any iterable of items, not just a queryset.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are 16 attributes for the &lt;code&gt;ListView&lt;/code&gt; but only 2 types are required to make the page return something other than a &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_errors"&gt;500&lt;/a&gt; error:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;Template Name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data Attributes&lt;/h2&gt;
&lt;p&gt;You have a choice of either using &lt;code&gt;Model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt; to specify &lt;strong&gt;what&lt;/strong&gt; data to return. Without it you get an error.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Model&lt;/code&gt; attribute gives you less control but is easier to implement. If you want to see ALL of the records of your model, just set&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;model = ModelName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, if you want to have a bit more control over what is going to be displayed you’ll want to use &lt;code&gt;queryset&lt;/code&gt; which will allow you to add methods to the specified model, ie &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;order_by&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;queryset = ModelName.objects.filter(field_name=&amp;#39;filter&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you specify both &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;queryset&lt;/code&gt; then &lt;code&gt;queryset&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;h2&gt;Template Name Attributes&lt;/h2&gt;
&lt;p&gt;You have a choice of using &lt;code&gt;template_name&lt;/code&gt; or &lt;code&gt;template_name_suffix&lt;/code&gt;. The &lt;code&gt;template_name&lt;/code&gt; allows you to directly control what template will be used. For example, if you have a template called &lt;code&gt;list_view.html&lt;/code&gt; you can specify it directly in &lt;code&gt;template_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;template_name_suffix&lt;/code&gt; will calculate what the template name should be by using the app name, model name, and appending the value set to the &lt;code&gt;template_name_suffix&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In pseudo code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;templates/&amp;lt;app_name&amp;gt;/&amp;lt;model_name&amp;gt;_&amp;lt;template_name_suffix&amp;gt;.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For an app named &lt;code&gt;rango&lt;/code&gt; and a model named &lt;code&gt;person&lt;/code&gt; setting &lt;code&gt;template_name_suffix&lt;/code&gt; to &lt;code&gt;_test&lt;/code&gt; would resolve to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;templates/rango/person_test.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Other Attributes&lt;/h2&gt;
&lt;p&gt;If you want to return something interesting you’ll also need to specify&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;allow_empty: The default for this is true which allows the page to render if there are no records. If you set this to &lt;code&gt;false&lt;/code&gt; then returning no records will result in a 404 error&lt;/li&gt;
&lt;li&gt;context_object_name: allows you to give a more memorable name to the object in the template. You’ll want to use this if you want to have future developers (i.e. you) not hate you&lt;/li&gt;
&lt;li&gt;ordering: allows you to specify the order that the data will be returned in. The field specified must exist in the &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;queryset&lt;/code&gt; that you’ve used&lt;/li&gt;
&lt;li&gt;page_kwarg: this indicates the name to use when going from page x to y; defaults to &lt;code&gt;name&lt;/code&gt; but overriding it to something more sensible can be helpful for SEO. For example you can use &lt;code&gt;name&lt;/code&gt; instead of &lt;code&gt;page&lt;/code&gt; if you’ve got a page that has a bunch of names&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-387" height="37" src="/images/uploads/2019/11/6FD85C21-0593-42E3-80E3-F835126CDB72_4_5005_c.jpeg" width="488"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;paginate_by: determines the maximum number of records to return on any page.&lt;/li&gt;
&lt;li&gt;paginate_orphans: number of items to add to the last page; this helps keep pages with singletons (or some other small number&lt;/li&gt;
&lt;li&gt;paginator_class: class that defines several of the attributes above. Don’t mess with this unless you have an actual reason to do so. Also … you’re not a special snowflake, there are literal dragons in down this road. Go back!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;ListView&lt;/code&gt; is derived can be seen here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectTemplateResponseMixin%7Bbg:white%7D%5D,%20%5BBaseListView%7Bbg:white%7D%5D%5E-%5BListView%7Bbg:green%7D%5D,%20%5BMultipleObjectMixin%7Bbg:white%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BMultipleObjectMixin%7Bbg:white%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BBaseListView%7Bbg:white%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;ListView&lt;/code&gt; CBV is a powerful and highly customizable tool that allows you to display the data from a single model quite easily.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - RedirectView</title><link href="https://www.ryancheley.com/cbv-redirectview.html" rel="alternate"></link><published>2019-11-10T10:00:00+01:00</published><updated>2019-11-10T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-10:/cbv-redirectview.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/RedirectView/"&gt;Classy Class Based View&lt;/a&gt; the &lt;code&gt;RedirectView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Provide a redirect on any GET request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extension of &lt;code&gt;View&lt;/code&gt; and has 5 attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names (from &lt;code&gt;View&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pattern_name: The name of the URL pattern to redirect to. ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ This will be used if no &lt;code&gt;url&lt;/code&gt; is used.&lt;/li&gt;
&lt;li&gt;permanent: a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/RedirectView/"&gt;Classy Class Based View&lt;/a&gt; the &lt;code&gt;RedirectView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Provide a redirect on any GET request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extension of &lt;code&gt;View&lt;/code&gt; and has 5 attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http_method_names (from &lt;code&gt;View&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;pattern_name: The name of the URL pattern to redirect to. ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^ This will be used if no &lt;code&gt;url&lt;/code&gt; is used.&lt;/li&gt;
&lt;li&gt;permanent: a flag to determine if the redirect is permanent or not. If set to &lt;code&gt;True&lt;/code&gt;, then the &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection"&gt;HTTP Status Code&lt;/a&gt; &lt;a href="https://en.wikipedia.org/wiki/HTTP_301"&gt;301&lt;/a&gt; is returned. If set to &lt;code&gt;False&lt;/code&gt; the &lt;a href="https://en.wikipedia.org/wiki/HTTP_302"&gt;302&lt;/a&gt; is returned&lt;/li&gt;
&lt;li&gt;query_string: If &lt;code&gt;True&lt;/code&gt; then it will pass along the query string from the RedirectView. If it’s &lt;code&gt;False&lt;/code&gt; it won’t. If this is set to &lt;code&gt;True&lt;/code&gt; and neither &lt;code&gt;pattern\_name&lt;/code&gt; nor &lt;code&gt;url&lt;/code&gt; are set then nothing will be passed to the &lt;code&gt;RedirectView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;url: Where the Redirect should point. It will take precedence over the patter_name so you should only &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;patter\_name&lt;/code&gt; but not both. This will need to be an absolute url, not a relative one, otherwise you may get a &lt;a href="https://en.wikipedia.org/wiki/HTTP_404"&gt;404&lt;/a&gt; error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The example below will give a &lt;code&gt;301&lt;/code&gt; status code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myRedirectView&lt;/span&gt;(&lt;span class="n"&gt;RedirectView&lt;/span&gt;):
    &lt;span class="n"&gt;pattern_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango:template_view&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;permanent&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;query_string&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While this would be a &lt;code&gt;302&lt;/code&gt; status code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myRedirectView&lt;/span&gt;(&lt;span class="n"&gt;RedirectView&lt;/span&gt;):
    &lt;span class="n"&gt;pattern_name&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;rango:template_view&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;permanent&lt;/span&gt; = &lt;span class="nb"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;query_string&lt;/span&gt; = &lt;span class="nb"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Methods&lt;/h2&gt;
&lt;p&gt;The method &lt;code&gt;get\_redirect\_url&lt;/code&gt; allows you to perform actions when the redirect is called. From the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/#redirectview"&gt;Django Docs&lt;/a&gt; the example given is increasing a counter on an Article Read value.&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;RedirectView&lt;/code&gt; derives from &lt;code&gt;View&lt;/code&gt; ^&lt;a class="footnote" href="#fn2" id="ffn2"&gt;2&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BView%7Bbg:lightblue%7D%5D%5E-%5BRedirectView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In general, given the power of the url mapping in Django I’m not sure why you would need to use a the Redirect View. From &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/#redirectview"&gt;Real Python&lt;/a&gt; they concur, stating:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, the class-based approach does not provide any obvious benefit while adding some hidden complexity. That raises the question: &lt;strong&gt;when should you use RedirectView?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to add a redirect directly in your urls.py, using RedirectView makes sense. But if you find yourself overwriting get&lt;em&gt;redirect&lt;/em&gt;url, a function-based view might be easier to understand and more flexible for future enhancements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;[From the &lt;a href="https://docs.djangoproject.com/en/2.2/ref/class-based-views/base/"&gt;Django Docs&lt;/a&gt; &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;li&gt;[Original Source from Classy Class Based Views &lt;a href="#ffn2"&gt;↩&lt;/a&gt;]{#fn2}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>Updating the models for my Django Rest Framework API</title><link href="https://www.ryancheley.com/updating-the-models-for-my-django-rest-framework-api.html" rel="alternate"></link><published>2019-11-06T20:02:00+01:00</published><updated>2019-11-06T20:02:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-06:/updating-the-models-for-my-django-rest-framework-api.html</id><summary type="html">&lt;p&gt;I’ve been working on a Django project which would allow users to track games that they’ve seen and, therefore, see what stadia they have visited.&lt;/p&gt;
&lt;p&gt;This is all being done at a site i set up called &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;. Initially when constructing my model I kept it relatively …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been working on a Django project which would allow users to track games that they’ve seen and, therefore, see what stadia they have visited.&lt;/p&gt;
&lt;p&gt;This is all being done at a site i set up called &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;. Initially when constructing my model I kept it relatively simple. I had one model that had two fields. The two fields tied the User from my CustomUser Model to a Game ID that I retrieve from an API that MLB provides.&lt;/p&gt;
&lt;p&gt;I thought this simple approach would be the best approach. In addition to having a Django App I set up a Django Rest Framework (DRF) API. My initial plan was to have a DRF backend with a Vue (or React) front end. (I still want to do that, but I really wanted to try and finish a project before proceeding down that path).&lt;/p&gt;
&lt;p&gt;After some development and testing I quickly realized that the page loads for the app were suffering because of the number of API calls to MLB that were being made.&lt;/p&gt;
&lt;p&gt;I created a new model to tie the user id (still from the CustomUser model I’d created) to the game id, but in addition I’d get and store the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home Team Name&lt;/li&gt;
&lt;li&gt;Home Team Score&lt;/li&gt;
&lt;li&gt;Home Team Hits&lt;/li&gt;
&lt;li&gt;Home Team Errors&lt;/li&gt;
&lt;li&gt;Away Team Name&lt;/li&gt;
&lt;li&gt;Away Team Score&lt;/li&gt;
&lt;li&gt;Away Team Hits&lt;/li&gt;
&lt;li&gt;Away Team Errors&lt;/li&gt;
&lt;li&gt;Game Recap Headline&lt;/li&gt;
&lt;li&gt;Game Recap Summary&lt;/li&gt;
&lt;li&gt;Game Date / Time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By storing all of this my views could render more quickly because they didn’t have to go to the MLB API to get the information.&lt;/p&gt;
&lt;p&gt;Of course, once I did this I realized that the work I had done on the DRF API would also need to be updated.&lt;/p&gt;
&lt;p&gt;Initially I kept putting off the refactoring that was going to have to be done. Finally, I just sat down and did it. And you know what, within 10 minutes I was done.&lt;/p&gt;
&lt;p&gt;I only had to change 3 files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serializers.py&lt;/li&gt;
&lt;li&gt;urls.py&lt;/li&gt;
&lt;li&gt;views.py&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the &lt;code&gt;searializers.py&lt;/code&gt; and &lt;code&gt;views.py&lt;/code&gt; all I had to do was add the new model and then copy and paste what I had done for the previous model.&lt;/p&gt;
&lt;p&gt;For the &lt;code&gt;urls.py&lt;/code&gt; it was just a simple matter of updating the the DRF path and detail path to use the new views I had just created.&lt;/p&gt;
&lt;p&gt;It was so amazingly simple I could barely believe it. This thing I had put off for a couple of weeks because I was afraid it was going to be really hard, just wasn't.&lt;/p&gt;</content><category term="Django"></category><category term="PyCharm"></category><category term="python"></category></entry><entry><title>CBV - Template View</title><link href="https://www.ryancheley.com/cbv-template-view.html" rel="alternate"></link><published>2019-11-03T10:00:00+01:00</published><updated>2019-11-03T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-11-03:/cbv-template-view.html</id><summary type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/TemplateView/"&gt;Classy Class Based Views&lt;/a&gt; the &lt;code&gt;TemplateView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extended version of the &lt;code&gt;View&lt;/code&gt; CBV with the the &lt;code&gt;ContextMixin&lt;/code&gt; and the &lt;code&gt;TemplateResponseMixin&lt;/code&gt; added to it.&lt;/p&gt;
&lt;p&gt;It has several attributes that can be set&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type: will allow …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;From &lt;a href="http://ccbv.co.uk/projects/Django/2.2/django.views.generic.base/TemplateView/"&gt;Classy Class Based Views&lt;/a&gt; the &lt;code&gt;TemplateView&lt;/code&gt; will&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Render a template. Pass keyword arguments from the URLconf to the context.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is an extended version of the &lt;code&gt;View&lt;/code&gt; CBV with the the &lt;code&gt;ContextMixin&lt;/code&gt; and the &lt;code&gt;TemplateResponseMixin&lt;/code&gt; added to it.&lt;/p&gt;
&lt;p&gt;It has several attributes that can be set&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content_type: will allow you to define the MIME type that the page will return. The default is &lt;code&gt;DEFAULT\_CONTENT\_TYPE&lt;/code&gt; but can be overridden with this attribute.&lt;/li&gt;
&lt;li&gt;extra_context: this can be used as a keyword argument in the &lt;code&gt;as\_view()&lt;/code&gt; but not in the class of the CBV. Adding it there will do nothing&lt;/li&gt;
&lt;li&gt;http_method_name: derived from &lt;code&gt;View&lt;/code&gt; and has the same definition&lt;/li&gt;
&lt;li&gt;response_classes: The response class to be returned by render_to_response method it defaults to a TemplateResponse. See below for further discussion&lt;/li&gt;
&lt;li&gt;template_engine: can be used to specify which template engine to use IF you have configured the use of multiple template engines in your &lt;code&gt;settings.py&lt;/code&gt; file. See the &lt;a href="https://docs.djangoproject.com/en/2.2/topics/templates/#usage"&gt;Usage&lt;/a&gt; section of the Django Documentation on Templates&lt;/li&gt;
&lt;li&gt;template_name: this attribute is required IF the method &lt;code&gt;get\_template\_names()&lt;/code&gt; is not used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More on &lt;code&gt;response_class&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This confuses the ever living crap out of me. The best (only) explanation I have found is by GitHub user &lt;code&gt;spapas&lt;/code&gt; in his article &lt;a href="https://spapas.github.io/2014/09/15/django-non-html-responses/#rendering-to-non-html"&gt;Django non-HTML responses&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;From the previous discussion we can conclude that if your non-HTML response needs a template then you just need to create a subclass of TemplateResponse and assign it to the response&lt;em&gt;class attribute (and also change the content&lt;/em&gt;type attribute). On the other hand, if your non-HTML respond does not need a template to be rendered then you have to override render&lt;em&gt;to&lt;/em&gt;response completely (since the template parameter does not need to be passed now) and either define a subclass of HttpResponse or do the rendering in the render&lt;em&gt;to&lt;/em&gt;response.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Basically, if you ever want to use a non-HTML template you’d set this attribute, but it seems available mostly as a ‘just-in-case’ and not something that’s used every day.&lt;/p&gt;
&lt;p&gt;My advise … just leave it as is.&lt;/p&gt;
&lt;h2&gt;When to use the &lt;code&gt;get&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;An answer which makes sense to me that I found on &lt;a href="https://stackoverflow.com/questions/35824904/django-view-get-context-data-vs-get"&gt;StackOverflow&lt;/a&gt; was (slightly modified to make it more understandable)&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;if you need to have data available every time, use get_context_data(). If you need the data only for a specific request method (eg. in get), then put it in get.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;When to use the &lt;code&gt;get_template_name&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;This method allows you to easily change a template being used based on values passed through GET.&lt;/p&gt;
&lt;p&gt;This can be helpful if you want to have one template for a super user and another template for a basic user. This helps to keep business logic out of the template and in the view where it belongs.&lt;/p&gt;
&lt;p&gt;This can also be useful if you want to specify several possible templates to use. A list is passed and Django will work through that list from the first element to the last until it finds a template that exists and render it.&lt;/p&gt;
&lt;p&gt;If you don’t specify template_name you have to use this method.&lt;/p&gt;
&lt;h2&gt;When to use the &lt;code&gt;get_context_data&lt;/code&gt; method&lt;/h2&gt;
&lt;p&gt;See above in the section When to use the &lt;code&gt;get&lt;/code&gt; method&lt;/p&gt;
&lt;h2&gt;Diagram&lt;/h2&gt;
&lt;p&gt;A visual representation of how &lt;code&gt;TemplateView&lt;/code&gt; derives from &lt;code&gt;View&lt;/code&gt; ^&lt;a class="footnote" href="#fn1" id="ffn1"&gt;1&lt;/a&gt;^&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://yuml.me/diagram/plain;/class/%5BTemplateResponseMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D,%20%5BContextMixin%7Bbg:white%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D,%20%5BView%7Bbg:lightblue%7D%5D%5E-%5BTemplateView%7Bbg:green%7D%5D.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you want to roll your own CBV because you have a super specific use case, starting at the &lt;code&gt;TemplateView&lt;/code&gt; is going to be a good place to start. However, you may find that there is already a view that is going to do what you need it to. Writing your own custom implementation of &lt;code&gt;TemplateView&lt;/code&gt; may be a waste of time &lt;strong&gt;IF&lt;/strong&gt; you haven’t already verified that what you need isn’t already there.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[Original Source from Classy Class Based Views &lt;a href="#ffn1"&gt;↩&lt;/a&gt;]{#fn1}&lt;/li&gt;
&lt;/ol&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>CBV - View</title><link href="https://www.ryancheley.com/cbv-view.html" rel="alternate"></link><published>2019-10-27T10:00:00+01:00</published><updated>2019-10-27T10:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-10-27:/cbv-view.html</id><summary type="html">&lt;p&gt;&lt;code&gt;View&lt;/code&gt; is the ancestor of ALL Django CBV. From the great site &lt;a href="http://ccbv.co.uk"&gt;Classy Class Based Views&lt;/a&gt;, they are described as&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Intentionally simple parent class for all views. Only implements dispatch-by-method and simple sanity checking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is no joke. The &lt;code&gt;View&lt;/code&gt; class has almost nothing to it, but it’s a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;View&lt;/code&gt; is the ancestor of ALL Django CBV. From the great site &lt;a href="http://ccbv.co.uk"&gt;Classy Class Based Views&lt;/a&gt;, they are described as&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Intentionally simple parent class for all views. Only implements dispatch-by-method and simple sanity checking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is no joke. The &lt;code&gt;View&lt;/code&gt; class has almost nothing to it, but it’s a solid foundation for everything else that will be done.&lt;/p&gt;
&lt;p&gt;Its implementation has just one attribute &lt;code&gt;http_method_names&lt;/code&gt; which is a list that allows you to specify what http verbs are allowed.&lt;/p&gt;
&lt;p&gt;Other than that, there’s really not much to it. You just write a simple method, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;My Content&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All that gets returned to the page is a simple HTML. You can specify the &lt;code&gt;content_type&lt;/code&gt; if you just want to return JSON or plain text but defining the content_type like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;My Content&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;text plain&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also make the text that is displayed be based on a variable defined in the class.&lt;/p&gt;
&lt;p&gt;First, you need to define the variable&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;This is a {View} template and is not used for much of anything but &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;   
             &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;allowing extensions of it for other Views&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then you can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;, &lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;HttpResponse&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt;.&lt;span class="nv"&gt;content&lt;/span&gt;, &lt;span class="nv"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;text/plain&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, as mentioned above you can specify the allowable methods via the attribute &lt;code&gt;http_method_names&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following HTTP methods are allowed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get&lt;/li&gt;
&lt;li&gt;post&lt;/li&gt;
&lt;li&gt;put&lt;/li&gt;
&lt;li&gt;patch&lt;/li&gt;
&lt;li&gt;delete&lt;/li&gt;
&lt;li&gt;head&lt;/li&gt;
&lt;li&gt;options&lt;/li&gt;
&lt;li&gt;trace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default all are allowed.&lt;/p&gt;
&lt;p&gt;If we put all of the pieces together we can see that a really simple &lt;code&gt;View&lt;/code&gt; CBV would look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;myView&lt;/span&gt;(&lt;span class="n"&gt;View&lt;/span&gt;):
    &lt;span class="n"&gt;content&lt;/span&gt; = &lt;span class="s"&gt;&amp;#39;This is a {View} template and is not used for much of anything but &amp;#39;&lt;/span&gt;   
             &lt;span class="s"&gt;&amp;#39;allowing extensions of it for other Views&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;http_method_names&lt;/span&gt; = [&lt;span class="s"&gt;&amp;#39;get&amp;#39;&lt;/span&gt;]

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="nb"&gt;get&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;_&lt;/span&gt;):
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;(&lt;span class="nb"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;content&lt;/span&gt;, &lt;span class="n"&gt;content_type&lt;/span&gt;=&lt;span class="s"&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This &lt;code&gt;View&lt;/code&gt; will return &lt;code&gt;content&lt;/code&gt; to the page rendered as plain text. This CBV is also limited to only allowing &lt;code&gt;get&lt;/code&gt; requests.&lt;/p&gt;
&lt;p&gt;Here’s what it looks like in the browser:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" class="alignnone size-full wp-image-374" height="320" src="/images/uploads/2019/10/F817D382-9A10-45C6-B30A-D66AAD942F80_4_5005_c.jpeg" width="952"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;View&lt;/code&gt; doesn’t do much, but it’s the case for everything else, so understanding it is going to be important.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>Class Based Views</title><link href="https://www.ryancheley.com/class-based-views.html" rel="alternate"></link><published>2019-10-27T08:00:00+01:00</published><updated>2019-10-27T08:00:00+01:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-10-27:/class-based-views.html</id><summary type="html">&lt;p&gt;As I’ve written about &lt;a href="/my-first-project-after-completing-the-100-days-of-web-in-python.html"&gt;previously&lt;/a&gt; I’m working on a Django app. It’s in a pretty good spot (you should totally check it out over at &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;) and I thought now would be a good time to learn a bit more about some of the ways that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I’ve written about &lt;a href="/my-first-project-after-completing-the-100-days-of-web-in-python.html"&gt;previously&lt;/a&gt; I’m working on a Django app. It’s in a pretty good spot (you should totally check it out over at &lt;a href="https://www.stadiatracker.com"&gt;StadiaTracker.com&lt;/a&gt;) and I thought now would be a good time to learn a bit more about some of the ways that I’m rendering the pages.&lt;/p&gt;
&lt;p&gt;I’m using Class Based Views (CBV) and I realized that I really didn’t &lt;a href="https://en.wikipedia.org/wiki/Grok"&gt;grok&lt;/a&gt; how they worked. I wanted to change that.&lt;/p&gt;
&lt;p&gt;I’ll be working on a series where I deep dive into the CBV and work them from several angles and try to get them to do all of the things that they are capable of.&lt;/p&gt;
&lt;p&gt;The first place I’d suggest anyone start to get a good idea of CBV, and the idea of Mixins would be &lt;a href="https://spapas.github.io/2018/03/19/comprehensive-django-cbv-guide/"&gt;SpaPas’ GitHub Page&lt;/a&gt; where he does a really good job of covering many pieces of the CBV. It’s a great resource!&lt;/p&gt;
&lt;p&gt;This is just the intro to this series and my hope is that I’ll publish one of these pieces each week for the next several months as I work my way through all of the various CBV that are available.&lt;/p&gt;</content><category term="Django"></category><category term="CBV"></category><category term="class based views"></category><category term="django"></category></entry><entry><title>My first project after completing the 100 Days of Web in Python</title><link href="https://www.ryancheley.com/my-first-project-after-completing-the-100-days-of-web-in-python.html" rel="alternate"></link><published>2019-08-31T14:14:00+02:00</published><updated>2019-08-31T14:14:00+02:00</updated><author><name>ryan</name></author><id>tag:www.ryancheley.com,2019-08-31:/my-first-project-after-completing-the-100-days-of-web-in-python.html</id><summary type="html">&lt;p&gt;As I mentioned in my last post, after completing the 100 Days of Web in Python I was moving forward with a Django app I wrote.&lt;/p&gt;
&lt;p&gt;I pushed up my first version to Heroku on August 24. At that point it would allow users to add a game that they …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I mentioned in my last post, after completing the 100 Days of Web in Python I was moving forward with a Django app I wrote.&lt;/p&gt;
&lt;p&gt;I pushed up my first version to Heroku on August 24. At that point it would allow users to add a game that they had seen, but when it disaplyed the games it would show a number (the game’s ID) instead of anything useful.&lt;/p&gt;
&lt;p&gt;A few nights ago (Aug 28) I committed a version which allows the user to see which game they add, i.e. there are actual human readable details versus just a number!&lt;/p&gt;
&lt;p&gt;The page can be found &lt;a href="https://www.stadiatracker.com"&gt;here&lt;/a&gt;. It feels really good to have it up in a place where people can actually see it. That being said I discovered a a couple of things on the publish that I’d like to fix.&lt;/p&gt;
&lt;p&gt;I have a method that returns details about the game. One problem is that if any of the elements return &lt;code&gt;None&lt;/code&gt; then the front page returns a Server 500 error ... this is not good.&lt;/p&gt;
&lt;p&gt;It took a bit of googling to see what the issue was. The way I found the answer was to see an idea to turn Debug to True on my ‘prod’ server and see the output. That helped me identify the issue.&lt;/p&gt;
&lt;p&gt;To ‘fix’ it in the short term I just deleted all of the data for the games seen in the database.&lt;/p&gt;
&lt;p&gt;I’m glad that it happened because it taught me some stuff that I knew I needed to do, but maybe didn’t pay enough attention to ... like writing unit tests.&lt;/p&gt;
&lt;p&gt;Based on that experience I wrote out a roadmap of sorts for the updates I want to get into the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tests for all classes and methods&lt;/li&gt;
&lt;li&gt;Ability to add minor league games&lt;/li&gt;
&lt;li&gt;Create a Stadium Listing View&lt;/li&gt;
&lt;li&gt;More robust search tool that allows a single team to be selected&lt;/li&gt;
&lt;li&gt;Logged in user view for only their games&lt;/li&gt;
&lt;li&gt;Create a List View of games logged per stadium&lt;/li&gt;
&lt;li&gt;Create a List View of attendees (i.e. users) at games logged&lt;/li&gt;
&lt;li&gt;Add more user features:&lt;ul&gt;
&lt;li&gt;Ability to add a picture&lt;/li&gt;
&lt;li&gt;Ability to add Twitter handle&lt;/li&gt;
&lt;li&gt;Ability to add Instagram handle&lt;/li&gt;
&lt;li&gt;Ability to add game notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a Heroku Pipeline to ensure that pushes to PROD are done through a UAT site&lt;/li&gt;
&lt;li&gt;Create a blog (as a pelican standalone sub domain)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a lot of things but I’ve already done some things that I wanted to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added SSL&lt;/li&gt;
&lt;li&gt;Set up to go to actual domain instead of Heroku subdomain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll write up how I did the set up for the site so I can do it again. It’s not well documented when your registrar is Hover and you’ve got your site on Heroku. Man ... it was an tough.&lt;/p&gt;</content><category term="Django"></category><category term="django"></category><category term="Heroku"></category><category term="Stadia Tracker"></category></entry></feed>